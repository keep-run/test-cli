{
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/src/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _optimist = _interopRequireDefault(require(\"optimist\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//该插件用于获取脚本的参数\nvar argv = _optimist[\"default\"].argv;\nvar commands = argv._;\nvar command;\n\nvar clis = _fs[\"default\"].readdirSync(_path[\"default\"].resolve(__dirname, './cli/')).map(function (item) {\n  return item.replace('.js', '');\n}); //__dirname和—__filename是node环境的全局变量\n\n\nvar cmd = clis.indexOf(commands[0]) !== -1 ? commands[0] : 'help';\ncommand = require('./cli/' + cmd)[\"default\"];\nargv.cwd = process.cwd(); //process.cwd():返回当前工作目录\n\nconsole.log('cwd:', process.cwd());\ncommand(argv);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFyZ3YiLCJvcHRpbWlzdCIsImNvbW1hbmRzIiwiXyIsImNvbW1hbmQiLCJjbGlzIiwiZnMiLCJyZWFkZGlyU3luYyIsInBhdGgiLCJyZXNvbHZlIiwiX19kaXJuYW1lIiwibWFwIiwiaXRlbSIsInJlcGxhY2UiLCJjbWQiLCJpbmRleE9mIiwicmVxdWlyZSIsImN3ZCIsInByb2Nlc3MiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRmlDO0FBR2pDLElBQUlBLElBQUksR0FBR0MscUJBQVNELElBQXBCO0FBQ0EsSUFBSUUsUUFBUSxHQUFHRixJQUFJLENBQUNHLENBQXBCO0FBQ0EsSUFBSUMsT0FBSjs7QUFDQSxJQUFJQyxJQUFJLEdBQUdDLGVBQUdDLFdBQUgsQ0FBZUMsaUJBQUtDLE9BQUwsQ0FBYUMsU0FBYixFQUF3QixRQUF4QixDQUFmLEVBQWtEQyxHQUFsRCxDQUFzRCxVQUFBQyxJQUFJO0FBQUEsU0FBSUEsSUFBSSxDQUFDQyxPQUFMLENBQWEsS0FBYixFQUFvQixFQUFwQixDQUFKO0FBQUEsQ0FBMUQsQ0FBWCxDLENBQW9HOzs7QUFDcEcsSUFBSUMsR0FBRyxHQUFHVCxJQUFJLENBQUNVLE9BQUwsQ0FBYWIsUUFBUSxDQUFDLENBQUQsQ0FBckIsTUFBOEIsQ0FBQyxDQUEvQixHQUFtQ0EsUUFBUSxDQUFDLENBQUQsQ0FBM0MsR0FBaUQsTUFBM0Q7QUFDQUUsT0FBTyxHQUFHWSxPQUFPLENBQUMsV0FBV0YsR0FBWixDQUFQLFdBQVY7QUFDQWQsSUFBSSxDQUFDaUIsR0FBTCxHQUFXQyxPQUFPLENBQUNELEdBQVIsRUFBWCxDLENBQTRCOztBQUU1QkUsT0FBTyxDQUFDQyxHQUFSLENBQVksTUFBWixFQUFtQkYsT0FBTyxDQUFDRCxHQUFSLEVBQW5CO0FBQ0FiLE9BQU8sQ0FBQ0osSUFBRCxDQUFQIiwic291cmNlUm9vdCI6Ii9Vc2Vycy93YW5nemhpY2h1bi9EZXNrdG9wL3N0dWR5L3Rlc3QtY2xpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IG9wdGltaXN0IGZyb20gJ29wdGltaXN0JyAgLy/or6Xmj5Lku7bnlKjkuo7ojrflj5bohJrmnKznmoTlj4LmlbBcbmltcG9ydCBmcyBmcm9tICdmcydcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5sZXQgYXJndiA9IG9wdGltaXN0LmFyZ3ZcbmxldCBjb21tYW5kcyA9IGFyZ3YuX1xubGV0IGNvbW1hbmRcbmxldCBjbGlzID0gZnMucmVhZGRpclN5bmMocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4vY2xpLycpKS5tYXAoaXRlbSA9PiBpdGVtLnJlcGxhY2UoJy5qcycsICcnKSkgICAvL19fZGlybmFtZeWSjOKAlF9fZmlsZW5hbWXmmK9ub2Rl546v5aKD55qE5YWo5bGA5Y+Y6YePXG5sZXQgY21kID0gY2xpcy5pbmRleE9mKGNvbW1hbmRzWzBdKSAhPT0gLTEgPyBjb21tYW5kc1swXSA6ICdoZWxwJ1xuY29tbWFuZCA9IHJlcXVpcmUoJy4vY2xpLycgKyBjbWQpLmRlZmF1bHRcbmFyZ3YuY3dkID0gcHJvY2Vzcy5jd2QoKSAgICAvL3Byb2Nlc3MuY3dkKCk66L+U5Zue5b2T5YmN5bel5L2c55uu5b2VXG5cbmNvbnNvbGUubG9nKCdjd2Q6Jyxwcm9jZXNzLmN3ZCgpKVxuY29tbWFuZChhcmd2KSAgIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "argv",
        "optimist",
        "commands",
        "_",
        "command",
        "clis",
        "fs",
        "readdirSync",
        "path",
        "resolve",
        "__dirname",
        "map",
        "item",
        "replace",
        "cmd",
        "indexOf",
        "require",
        "cwd",
        "process",
        "console",
        "log"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;;;AAFiC;AAGjC,IAAIA,IAAI,GAAGC,qBAASD,IAApB;AACA,IAAIE,QAAQ,GAAGF,IAAI,CAACG,CAApB;AACA,IAAIC,OAAJ;;AACA,IAAIC,IAAI,GAAGC,eAAGC,WAAH,CAAeC,iBAAKC,OAAL,CAAaC,SAAb,EAAwB,QAAxB,CAAf,EAAkDC,GAAlD,CAAsD,UAAAC,IAAI;AAAA,SAAIA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAJ;AAAA,CAA1D,CAAX,C,CAAoG;;;AACpG,IAAIC,GAAG,GAAGT,IAAI,CAACU,OAAL,CAAab,QAAQ,CAAC,CAAD,CAArB,MAA8B,CAAC,CAA/B,GAAmCA,QAAQ,CAAC,CAAD,CAA3C,GAAiD,MAA3D;AACAE,OAAO,GAAGY,OAAO,CAAC,WAAWF,GAAZ,CAAP,WAAV;AACAd,IAAI,CAACiB,GAAL,GAAWC,OAAO,CAACD,GAAR,EAAX,C,CAA4B;;AAE5BE,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,OAAO,CAACD,GAAR,EAAnB;AACAb,OAAO,CAACJ,IAAD,CAAP",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src",
      "sourcesContent": [
        "\nimport optimist from 'optimist'  //该插件用于获取脚本的参数\nimport fs from 'fs'\nimport path from 'path'\nlet argv = optimist.argv\nlet commands = argv._\nlet command\nlet clis = fs.readdirSync(path.resolve(__dirname, './cli/')).map(item => item.replace('.js', ''))   //__dirname和—__filename是node环境的全局变量\nlet cmd = clis.indexOf(commands[0]) !== -1 ? commands[0] : 'help'\ncommand = require('./cli/' + cmd).default\nargv.cwd = process.cwd()    //process.cwd():返回当前工作目录\n\nconsole.log('cwd:',process.cwd())\ncommand(argv)  "
      ]
    },
    "sourceType": "script",
    "mtime": 1566375611097
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/src/cli\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/src/cli/help.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/cli",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/cli/help.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/src/cli/help.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/cli/help.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/cli",
        "sourceFileName": "help.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _package = _interopRequireDefault(require(\"../../package.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = function _default() {\n  console.log(_chalk[\"default\"].green(\"test-cli current version \".concat(_package[\"default\"].version)));\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHAuanMiXSwibmFtZXMiOlsiY29uc29sZSIsImxvZyIsImNoYWxrIiwiZ3JlZW4iLCJwa2ciLCJ2ZXJzaW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7ZUFDYyxvQkFBSTtBQUNkQSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsa0JBQU1DLEtBQU4sb0NBQXdDQyxvQkFBSUMsT0FBNUMsRUFBWjtBQUNILEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhbmd6aGljaHVuL0Rlc2t0b3Avc3R1ZHkvdGVzdC1jbGkvc3JjL2NsaSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAgY2hhbGsgZnJvbSAnY2hhbGsnXG5pbXBvcnQgcGtnIGZyb20gJy4uLy4uL3BhY2thZ2UuanNvbidcbmV4cG9ydCBkZWZhdWx0KCk9PntcbiAgICBjb25zb2xlLmxvZyhjaGFsay5ncmVlbihgdGVzdC1jbGkgY3VycmVudCB2ZXJzaW9uICR7cGtnLnZlcnNpb259YCkpXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "help.js"
      ],
      "names": [
        "console",
        "log",
        "chalk",
        "green",
        "pkg",
        "version"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;eACc,oBAAI;AACdA,EAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAMC,KAAN,oCAAwCC,oBAAIC,OAA5C,EAAZ;AACH,C",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/cli",
      "sourcesContent": [
        "import  chalk from 'chalk'\nimport pkg from '../../package.json'\nexport default()=>{\n    console.log(chalk.green(`test-cli current version ${pkg.version}`))\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1566281919869
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/src/cli\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/src/cli/init.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/cli",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/cli/init.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/src/cli/init.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/cli/init.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/cli",
        "sourceFileName": "init.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.helper = void 0;\n\nvar _nodeFetch = _interopRequireDefault(require(\"node-fetch\"));\n\nvar _request = _interopRequireDefault(require(\"request\"));\n\nvar _fsExtra = _interopRequireDefault(require(\"fs-extra\"));\n\nvar _dlTgz = _interopRequireDefault(require(\"dl-tgz\"));\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _mine = _interopRequireDefault(require(\"../config/mine\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar RegistryServer = _mine[\"default\"].registryServer;\nvar tempDir = _mine[\"default\"].tempdir;\nvar helper = 'test-cli init [projectName]';\nexports.helper = helper;\nvar projectMap = {\n  \"redskull-demo\": '@lianjia/redskull-demo',\n  'react-pro': '@lianjia/reactProTemplate'\n};\n\nvar getDetail =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(url) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              (0, _nodeFetch[\"default\"])(url).then(function (res) {\n                return res.json();\n              }).then(function (json) {\n                return resolve(json);\n              })[\"catch\"](function (err) {\n                console.log(_chalk[\"default\"].red(err));\n                process.exit(1);\n                reject(err);\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getDetail(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); //获取模板的最新地址\n\n\nvar getLatestDownload =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(pkgName) {\n    var reqUrl, detail, latestVersion;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            reqUrl = \"\".concat(RegistryServer, \"/\").concat(pkgName);\n            _context2.next = 3;\n            return getDetail(reqUrl);\n\n          case 3:\n            detail = _context2.sent;\n\n            if (detail) {\n              _context2.next = 7;\n              break;\n            }\n\n            console.err(\"\".concat(pkgName, \" is not found\"));\n            return _context2.abrupt(\"return\", null);\n\n          case 7:\n            latestVersion = detail['dist-tags'].latest;\n            return _context2.abrupt(\"return\", detail.versions[latestVersion].dist.tarball);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getLatestDownload(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // 下载模板\n\n\nvar downloadPkg =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(url, distPath) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log('down template'); // return new Promise((resolve,reject)=>{\n            //     dlTgz(url,distPath).subscribe(()=>{})\n            // })\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function downloadPkg(_x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar _default =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(props) {\n    var project, template, downUrl, distDirTemp, distDir;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            project = props._[1];\n            template = projectMap[project];\n\n            if (!template) {\n              console.log(_chalk[\"default\"].red(\"\".concat(project, \" is not found\")));\n              process.exit(1);\n            }\n\n            console.log('start resolve ......');\n            _context4.next = 6;\n            return getLatestDownload(template);\n\n          case 6:\n            downUrl = _context4.sent;\n            console.log('downUrl', downUrl);\n\n            if (!downUrl) {\n              _context4.next = 17;\n              break;\n            }\n\n            distDirTemp = _path[\"default\"].join(tempDir, project);\n            _context4.next = 12;\n            return _fsExtra[\"default\"].remove(distDirTemp);\n\n          case 12:\n            console.log(_chalk[\"default\"].green(\"loading from \".concat(downUrl)));\n            _context4.next = 15;\n            return downloadPkg(downUrl, distDirTemp);\n\n          case 15:\n            distDir = _context4.sent;\n            console.log('------------', distDirTemp);\n\n          case 17:\n            require('../config/mine');\n\n          case 18:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x5) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXQuanMiXSwibmFtZXMiOlsiUmVnaXN0cnlTZXJ2ZXIiLCJNaW5lQ29uZmlnIiwicmVnaXN0cnlTZXJ2ZXIiLCJ0ZW1wRGlyIiwidGVtcGRpciIsImhlbHBlciIsInByb2plY3RNYXAiLCJnZXREZXRhaWwiLCJ1cmwiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInRoZW4iLCJyZXMiLCJqc29uIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImNoYWxrIiwicmVkIiwicHJvY2VzcyIsImV4aXQiLCJnZXRMYXRlc3REb3dubG9hZCIsInBrZ05hbWUiLCJyZXFVcmwiLCJkZXRhaWwiLCJsYXRlc3RWZXJzaW9uIiwibGF0ZXN0IiwidmVyc2lvbnMiLCJkaXN0IiwidGFyYmFsbCIsImRvd25sb2FkUGtnIiwiZGlzdFBhdGgiLCJwcm9wcyIsInByb2plY3QiLCJfIiwidGVtcGxhdGUiLCJkb3duVXJsIiwiZGlzdERpclRlbXAiLCJwYXRoIiwiam9pbiIsImZzIiwicmVtb3ZlIiwiZ3JlZW4iLCJkaXN0RGlyIiwicmVxdWlyZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUdBLElBQU1BLGNBQWMsR0FBR0MsaUJBQVdDLGNBQWxDO0FBQ0EsSUFBTUMsT0FBTyxHQUFHRixpQkFBV0csT0FBM0I7QUFFTyxJQUFNQyxNQUFNLEdBQUcsNkJBQWY7O0FBR1AsSUFBTUMsVUFBVSxHQUFHO0FBQ2YsbUJBQWlCLHdCQURGO0FBRWYsZUFBYTtBQUZFLENBQW5COztBQU1BLElBQU1DLFNBQVM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFHLGlCQUFPQyxHQUFQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw2Q0FDUCxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDLHlDQUFNSCxHQUFOLEVBQVdJLElBQVgsQ0FBZ0IsVUFBQUMsR0FBRztB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LG1CQWVhTixXQUFXLENBQUNNLE9BQUQsRUFBU0MsV0FBVCxDQWZ4Qjs7QUFBQTtBQWVETSxZQUFBQSxPQWZDO0FBaUJQNUIsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksY0FBWixFQUE0QnFCLFdBQTVCOztBQWpCTztBQW1CWE8sWUFBQUEsT0FBTyxDQUFDLGdCQUFELENBQVA7O0FBbkJXO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEciLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhbmd6aGljaHVuL0Rlc2t0b3Avc3R1ZHkvdGVzdC1jbGkvc3JjL2NsaSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmZXRjaCBmcm9tICdub2RlLWZldGNoJ1xuaW1wb3J0IHJlcXVlc3QgZnJvbSAncmVxdWVzdCdcbmltcG9ydCBmcyBmcm9tICdmcy1leHRyYSdcbmltcG9ydCBkbFRneiBmcm9tICdkbC10Z3onXG5pbXBvcnQgY2hhbGsgZnJvbSAnY2hhbGsnXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuaW1wb3J0IE1pbmVDb25maWcgZnJvbSAnLi4vY29uZmlnL21pbmUnXG5cblxuY29uc3QgUmVnaXN0cnlTZXJ2ZXIgPSBNaW5lQ29uZmlnLnJlZ2lzdHJ5U2VydmVyO1xuY29uc3QgdGVtcERpciA9IE1pbmVDb25maWcudGVtcGRpcjtcblxuZXhwb3J0IGNvbnN0IGhlbHBlciA9ICd0ZXN0LWNsaSBpbml0IFtwcm9qZWN0TmFtZV0nXG5cblxuY29uc3QgcHJvamVjdE1hcCA9IHtcbiAgICBcInJlZHNrdWxsLWRlbW9cIjogJ0BsaWFuamlhL3JlZHNrdWxsLWRlbW8nLFxuICAgICdyZWFjdC1wcm8nOiAnQGxpYW5qaWEvcmVhY3RQcm9UZW1wbGF0ZScsXG59XG5cblxuY29uc3QgZ2V0RGV0YWlsID0gYXN5bmMgKHVybCkgPT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGZldGNoKHVybCkudGhlbihyZXMgPT4gcmVzLmpzb24oKSkudGhlbihqc29uID0+IHJlc29sdmUoanNvbikpLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhjaGFsay5yZWQoZXJyKSlcbiAgICAgICAgICAgIHByb2Nlc3MuZXhpdCgxKVxuICAgICAgICAgICAgcmVqZWN0KGVycilcbiAgICAgICAgfSlcbiAgICB9KVxuXG4gICAgLy8gcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAvLyAgICAgcmVxdWVzdCh1cmwsIChlcnIsIHJlc3BvbnNlLCBib2R5KSA9PiB7XG4gICAgLy8gICAgICAgICB0cnkge1xuICAgIC8vICAgICAgICAgICAgIHJlc29sdmUoSlNPTi5wYXJzZShib2R5KSlcbiAgICAvLyAgICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgLy8gICAgICAgICAgICAgcmVqZWN0KGV4KVxuICAgIC8vICAgICAgICAgfVxuICAgIC8vICAgICAgICAgcmVzb2x2ZShudWxsKVxuICAgIC8vICAgICB9KVxuXG4gICAgLy8gfSlcbn1cblxuXG4vL+iOt+WPluaooeadv+eahOacgOaWsOWcsOWdgFxuY29uc3QgZ2V0TGF0ZXN0RG93bmxvYWQgPSBhc3luYyAocGtnTmFtZSkgPT4ge1xuICAgIGNvbnN0IHJlcVVybCA9IGAke1JlZ2lzdHJ5U2VydmVyfS8ke3BrZ05hbWV9YFxuICAgIGNvbnN0IGRldGFpbCA9IGF3YWl0IGdldERldGFpbChyZXFVcmwpICAgIC8vIGRldGFpbOi/lOWbnueahOaYr+ihqOW+geivpeaooeadv+eahOS4gOS4quWvueixoVxuICAgIGlmICghZGV0YWlsKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyKGAke3BrZ05hbWV9IGlzIG5vdCBmb3VuZGApXG4gICAgICAgIHJldHVybiBudWxsXG4gICAgfVxuICAgIGNvbnN0IGxhdGVzdFZlcnNpb24gPSBkZXRhaWxbJ2Rpc3QtdGFncyddLmxhdGVzdFxuICAgIHJldHVybiBkZXRhaWwudmVyc2lvbnNbbGF0ZXN0VmVyc2lvbl0uZGlzdC50YXJiYWxsXG59XG5cbi8vIOS4i+i9veaooeadv1xuY29uc3QgZG93bmxvYWRQa2c9YXN5bmMgKHVybCxkaXN0UGF0aCk9PntcbiAgICBjb25zb2xlLmxvZygnZG93biB0ZW1wbGF0ZScpXG4gICAgLy8gcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PntcbiAgICAvLyAgICAgZGxUZ3oodXJsLGRpc3RQYXRoKS5zdWJzY3JpYmUoKCk9Pnt9KVxuICAgIC8vIH0pXG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIChwcm9wcykgPT4ge1xuICAgIGNvbnN0IHByb2plY3QgPSBwcm9wcy5fWzFdXG4gICAgY29uc3QgdGVtcGxhdGUgPSBwcm9qZWN0TWFwW3Byb2plY3RdXG4gICAgaWYgKCF0ZW1wbGF0ZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhjaGFsay5yZWQoYCR7cHJvamVjdH0gaXMgbm90IGZvdW5kYCkpXG4gICAgICAgIHByb2Nlc3MuZXhpdCgxKVxuICAgIH1cbiAgICBjb25zb2xlLmxvZygnc3RhcnQgcmVzb2x2ZSAuLi4uLi4nKVxuICAgIGNvbnN0IGRvd25VcmwgPSBhd2FpdCBnZXRMYXRlc3REb3dubG9hZCh0ZW1wbGF0ZSlcbiAgICBjb25zb2xlLmxvZygnZG93blVybCcsIGRvd25VcmwpXG4gICAgaWYgKGRvd25VcmwpIHtcbiAgICAgICAgY29uc3QgZGlzdERpclRlbXAgPSBwYXRoLmpvaW4odGVtcERpciwgcHJvamVjdClcbiAgICAgICAgYXdhaXQgZnMucmVtb3ZlKGRpc3REaXJUZW1wKTtcbiAgICAgICAgY29uc29sZS5sb2coY2hhbGsuZ3JlZW4oYGxvYWRpbmcgZnJvbSAke2Rvd25Vcmx9YCkpXG4gICAgICAgIFxuICAgICAgICBjb25zdCBkaXN0RGlyPWF3YWl0IGRvd25sb2FkUGtnKGRvd25VcmwsZGlzdERpclRlbXApXG5cbiAgICAgICAgY29uc29sZS5sb2coJy0tLS0tLS0tLS0tLScsIGRpc3REaXJUZW1wKVxuICAgIH1cbiAgICByZXF1aXJlKCcuLi9jb25maWcvbWluZScpXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "init.js"
      ],
      "names": [
        "RegistryServer",
        "MineConfig",
        "registryServer",
        "tempDir",
        "tempdir",
        "helper",
        "projectMap",
        "getDetail",
        "url",
        "Promise",
        "resolve",
        "reject",
        "then",
        "res",
        "json",
        "err",
        "console",
        "log",
        "chalk",
        "red",
        "process",
        "exit",
        "getLatestDownload",
        "pkgName",
        "reqUrl",
        "detail",
        "latestVersion",
        "latest",
        "versions",
        "dist",
        "tarball",
        "downloadPkg",
        "distPath",
        "props",
        "project",
        "_",
        "template",
        "downUrl",
        "distDirTemp",
        "path",
        "join",
        "fs",
        "remove",
        "green",
        "distDir",
        "require"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/cli",
      "sourcesContent": [
        "import fetch from 'node-fetch'\nimport request from 'request'\nimport fs from 'fs-extra'\nimport dlTgz from 'dl-tgz'\nimport chalk from 'chalk'\nimport path from 'path'\nimport MineConfig from '../config/mine'\n\n\nconst RegistryServer = MineConfig.registryServer;\nconst tempDir = MineConfig.tempdir;\n\nexport const helper = 'test-cli init [projectName]'\n\n\nconst projectMap = {\n    \"redskull-demo\": '@lianjia/redskull-demo',\n    'react-pro': '@lianjia/reactProTemplate',\n}\n\n\nconst getDetail = async (url) => {\n    return new Promise((resolve, reject) => {\n        fetch(url).then(res => res.json()).then(json => resolve(json)).catch(err => {\n            console.log(chalk.red(err))\n            process.exit(1)\n            reject(err)\n        })\n    })\n\n    // return new Promise((resolve, reject) => {\n    //     request(url, (err, response, body) => {\n    //         try {\n    //             resolve(JSON.parse(body))\n    //         } catch (ex) {\n    //             reject(ex)\n    //         }\n    //         resolve(null)\n    //     })\n\n    // })\n}\n\n\n//获取模板的最新地址\nconst getLatestDownload = async (pkgName) => {\n    const reqUrl = `${RegistryServer}/${pkgName}`\n    const detail = await getDetail(reqUrl)    // detail返回的是表征该模板的一个对象\n    if (!detail) {\n        console.err(`${pkgName} is not found`)\n        return null\n    }\n    const latestVersion = detail['dist-tags'].latest\n    return detail.versions[latestVersion].dist.tarball\n}\n\n// 下载模板\nconst downloadPkg=async (url,distPath)=>{\n    console.log('down template')\n    // return new Promise((resolve,reject)=>{\n    //     dlTgz(url,distPath).subscribe(()=>{})\n    // })\n}\n\nexport default async (props) => {\n    const project = props._[1]\n    const template = projectMap[project]\n    if (!template) {\n        console.log(chalk.red(`${project} is not found`))\n        process.exit(1)\n    }\n    console.log('start resolve ......')\n    const downUrl = await getLatestDownload(template)\n    console.log('downUrl', downUrl)\n    if (downUrl) {\n        const distDirTemp = path.join(tempDir, project)\n        await fs.remove(distDirTemp);\n        console.log(chalk.green(`loading from ${downUrl}`))\n        \n        const distDir=await downloadPkg(downUrl,distDirTemp)\n\n        console.log('------------', distDirTemp)\n    }\n    require('../config/mine')\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1566355111305
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/src/config\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/src/config/mine.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/config",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/config/mine.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/src/config/mine.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/config/mine.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/config",
        "sourceFileName": "mine.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _os = _interopRequireDefault(require(\"os\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//工具跟路径\nvar toolRoot = _path[\"default\"].resolve(__dirname, '../../'); //工具包路径\n\n\nvar toolModules = _path[\"default\"].resolve(toolRoot, './node_modules');\n\nvar _default = {\n  cliRoot: toolRoot,\n  nodeModulesPath: toolModules,\n  tempdir: _path[\"default\"].join(_os[\"default\"].homedir(), '.test-cli', 'temp'),\n  registryServer: 'http://registry.npmjs.lianjia.com:7001'\n};\nexports[\"default\"] = _default;\nconsole.log('__dirname', __dirname);\nconsole.log('toolRoot', toolRoot);\nconsole.log('os', _os[\"default\"].homedir);\nconsole.log('test', _path[\"default\"].join(_os[\"default\"].homedir(), '.test-cli', 'temp'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pbmUuanMiXSwibmFtZXMiOlsidG9vbFJvb3QiLCJwYXRoIiwicmVzb2x2ZSIsIl9fZGlybmFtZSIsInRvb2xNb2R1bGVzIiwiY2xpUm9vdCIsIm5vZGVNb2R1bGVzUGF0aCIsInRlbXBkaXIiLCJqb2luIiwib3MiLCJob21lZGlyIiwicmVnaXN0cnlTZXJ2ZXIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQTtBQUNBLElBQU1BLFFBQVEsR0FBQ0MsaUJBQUtDLE9BQUwsQ0FBYUMsU0FBYixFQUF1QixRQUF2QixDQUFmLEMsQ0FFQTs7O0FBQ0EsSUFBTUMsV0FBVyxHQUFDSCxpQkFBS0MsT0FBTCxDQUFhRixRQUFiLEVBQXNCLGdCQUF0QixDQUFsQjs7ZUFFYztBQUNWSyxFQUFBQSxPQUFPLEVBQUNMLFFBREU7QUFFVk0sRUFBQUEsZUFBZSxFQUFDRixXQUZOO0FBR1ZHLEVBQUFBLE9BQU8sRUFBQ04saUJBQUtPLElBQUwsQ0FBVUMsZUFBR0MsT0FBSCxFQUFWLEVBQXVCLFdBQXZCLEVBQW1DLE1BQW5DLENBSEU7QUFJVkMsRUFBQUEsY0FBYyxFQUFDO0FBSkwsQzs7QUFNZEMsT0FBTyxDQUFDQyxHQUFSLENBQVksV0FBWixFQUF3QlYsU0FBeEI7QUFDQVMsT0FBTyxDQUFDQyxHQUFSLENBQVksVUFBWixFQUF1QmIsUUFBdkI7QUFDQVksT0FBTyxDQUFDQyxHQUFSLENBQVksSUFBWixFQUFpQkosZUFBR0MsT0FBcEI7QUFDQUUsT0FBTyxDQUFDQyxHQUFSLENBQVksTUFBWixFQUFtQlosaUJBQUtPLElBQUwsQ0FBVUMsZUFBR0MsT0FBSCxFQUFWLEVBQXVCLFdBQXZCLEVBQW1DLE1BQW5DLENBQW5CIiwic291cmNlUm9vdCI6Ii9Vc2Vycy93YW5nemhpY2h1bi9EZXNrdG9wL3N0dWR5L3Rlc3QtY2xpL3NyYy9jb25maWciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuaW1wb3J0IG9zIGZyb20gJ29zJ1xuXG4vL+W3peWFt+i3n+i3r+W+hFxuY29uc3QgdG9vbFJvb3Q9cGF0aC5yZXNvbHZlKF9fZGlybmFtZSwnLi4vLi4vJykgXG5cbi8v5bel5YW35YyF6Lev5b6EXG5jb25zdCB0b29sTW9kdWxlcz1wYXRoLnJlc29sdmUodG9vbFJvb3QsJy4vbm9kZV9tb2R1bGVzJylcblxuZXhwb3J0IGRlZmF1bHR7XG4gICAgY2xpUm9vdDp0b29sUm9vdCxcbiAgICBub2RlTW9kdWxlc1BhdGg6dG9vbE1vZHVsZXMsXG4gICAgdGVtcGRpcjpwYXRoLmpvaW4ob3MuaG9tZWRpcigpLCcudGVzdC1jbGknLCd0ZW1wJyksXG4gICAgcmVnaXN0cnlTZXJ2ZXI6J2h0dHA6Ly9yZWdpc3RyeS5ucG1qcy5saWFuamlhLmNvbTo3MDAxJ1xufVxuY29uc29sZS5sb2coJ19fZGlybmFtZScsX19kaXJuYW1lLClcbmNvbnNvbGUubG9nKCd0b29sUm9vdCcsdG9vbFJvb3QsKVxuY29uc29sZS5sb2coJ29zJyxvcy5ob21lZGlyLClcbmNvbnNvbGUubG9nKCd0ZXN0JyxwYXRoLmpvaW4ob3MuaG9tZWRpcigpLCcudGVzdC1jbGknLCd0ZW1wJykpIl19",
    "map": {
      "version": 3,
      "sources": [
        "mine.js"
      ],
      "names": [
        "toolRoot",
        "path",
        "resolve",
        "__dirname",
        "toolModules",
        "cliRoot",
        "nodeModulesPath",
        "tempdir",
        "join",
        "os",
        "homedir",
        "registryServer",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;AACA,IAAMA,QAAQ,GAACC,iBAAKC,OAAL,CAAaC,SAAb,EAAuB,QAAvB,CAAf,C,CAEA;;;AACA,IAAMC,WAAW,GAACH,iBAAKC,OAAL,CAAaF,QAAb,EAAsB,gBAAtB,CAAlB;;eAEc;AACVK,EAAAA,OAAO,EAACL,QADE;AAEVM,EAAAA,eAAe,EAACF,WAFN;AAGVG,EAAAA,OAAO,EAACN,iBAAKO,IAAL,CAAUC,eAAGC,OAAH,EAAV,EAAuB,WAAvB,EAAmC,MAAnC,CAHE;AAIVC,EAAAA,cAAc,EAAC;AAJL,C;;AAMdC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBV,SAAxB;AACAS,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBb,QAAvB;AACAY,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBJ,eAAGC,OAApB;AACAE,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBZ,iBAAKO,IAAL,CAAUC,eAAGC,OAAH,EAAV,EAAuB,WAAvB,EAAmC,MAAnC,CAAnB",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/config",
      "sourcesContent": [
        "import path from 'path'\nimport os from 'os'\n\n//工具跟路径\nconst toolRoot=path.resolve(__dirname,'../../') \n\n//工具包路径\nconst toolModules=path.resolve(toolRoot,'./node_modules')\n\nexport default{\n    cliRoot:toolRoot,\n    nodeModulesPath:toolModules,\n    tempdir:path.join(os.homedir(),'.test-cli','temp'),\n    registryServer:'http://registry.npmjs.lianjia.com:7001'\n}\nconsole.log('__dirname',__dirname,)\nconsole.log('toolRoot',toolRoot,)\nconsole.log('os',os.homedir,)\nconsole.log('test',path.join(os.homedir(),'.test-cli','temp'))"
      ]
    },
    "sourceType": "script",
    "mtime": 1566296991342
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar path = require('path');\n\nvar minimist = require('minimist');\n\nvar wordwrap = require('wordwrap');\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n        require('optimist')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n        require('optimist').argv\n    to get a parsed version of process.argv.\n*/\n\n\nvar inst = Argv(process.argv.slice(2));\nObject.keys(inst).forEach(function (key) {\n  Argv[key] = typeof inst[key] == 'function' ? inst[key].bind(inst) : inst[key];\n});\n\nvar _exports = module.exports = Argv;\n\nfunction Argv(processArgs, cwd) {\n  var self = {};\n  if (!cwd) cwd = process.cwd();\n  self.$0 = process.argv.slice(0, 2).map(function (x) {\n    var b = rebase(cwd, x);\n    return x.match(/^\\//) && b.length < x.length ? b : x;\n  }).join(' ');\n\n  if (process.env._ != undefined && process.argv[1] == process.env._) {\n    self.$0 = process.env._.replace(path.dirname(process.execPath) + '/', '');\n  }\n\n  var options = {\n    \"boolean\": [],\n    string: [],\n    alias: {},\n    \"default\": []\n  };\n\n  self[\"boolean\"] = function (bools) {\n    options[\"boolean\"].push.apply(options[\"boolean\"], [].concat(bools));\n    return self;\n  };\n\n  self.string = function (strings) {\n    options.string.push.apply(options.string, [].concat(strings));\n    return self;\n  };\n\n  self[\"default\"] = function (key, value) {\n    if (_typeof(key) === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self[\"default\"](k, key[k]);\n      });\n    } else {\n      options[\"default\"][key] = value;\n    }\n\n    return self;\n  };\n\n  self.alias = function (x, y) {\n    if (_typeof(x) === 'object') {\n      Object.keys(x).forEach(function (key) {\n        self.alias(key, x[key]);\n      });\n    } else {\n      options.alias[x] = (options.alias[x] || []).concat(y);\n    }\n\n    return self;\n  };\n\n  var demanded = {};\n\n  self.demand = function (keys) {\n    if (typeof keys == 'number') {\n      if (!demanded._) demanded._ = 0;\n      demanded._ += keys;\n    } else if (Array.isArray(keys)) {\n      keys.forEach(function (key) {\n        self.demand(key);\n      });\n    } else {\n      demanded[keys] = true;\n    }\n\n    return self;\n  };\n\n  var usage;\n\n  self.usage = function (msg, opts) {\n    if (!opts && _typeof(msg) === 'object') {\n      opts = msg;\n      msg = null;\n    }\n\n    usage = msg;\n    if (opts) self.options(opts);\n    return self;\n  };\n\n  function fail(msg) {\n    self.showHelp();\n    if (msg) console.error(msg);\n    process.exit(1);\n  }\n\n  var checks = [];\n\n  self.check = function (f) {\n    checks.push(f);\n    return self;\n  };\n\n  var descriptions = {};\n\n  self.describe = function (key, desc) {\n    if (_typeof(key) === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.describe(k, key[k]);\n      });\n    } else {\n      descriptions[key] = desc;\n    }\n\n    return self;\n  };\n\n  self.parse = function (args) {\n    return parseArgs(args);\n  };\n\n  self.option = self.options = function (key, opt) {\n    if (_typeof(key) === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.options(k, key[k]);\n      });\n    } else {\n      if (opt.alias) self.alias(key, opt.alias);\n      if (opt.demand) self.demand(key);\n\n      if (typeof opt[\"default\"] !== 'undefined') {\n        self[\"default\"](key, opt[\"default\"]);\n      }\n\n      if (opt[\"boolean\"] || opt.type === 'boolean') {\n        self[\"boolean\"](key);\n      }\n\n      if (opt.string || opt.type === 'string') {\n        self.string(key);\n      }\n\n      var desc = opt.describe || opt.description || opt.desc;\n\n      if (desc) {\n        self.describe(key, desc);\n      }\n    }\n\n    return self;\n  };\n\n  var wrap = null;\n\n  self.wrap = function (cols) {\n    wrap = cols;\n    return self;\n  };\n\n  self.showHelp = function (fn) {\n    if (!fn) fn = console.error;\n    fn(self.help());\n  };\n\n  self.help = function () {\n    var keys = Object.keys(Object.keys(descriptions).concat(Object.keys(demanded)).concat(Object.keys(options[\"default\"])).reduce(function (acc, key) {\n      if (key !== '_') acc[key] = true;\n      return acc;\n    }, {}));\n    var help = keys.length ? ['Options:'] : [];\n\n    if (usage) {\n      help.unshift(usage.replace(/\\$0/g, self.$0), '');\n    }\n\n    var switches = keys.reduce(function (acc, key) {\n      acc[key] = [key].concat(options.alias[key] || []).map(function (sw) {\n        return (sw.length > 1 ? '--' : '-') + sw;\n      }).join(', ');\n      return acc;\n    }, {});\n    var switchlen = longest(Object.keys(switches).map(function (s) {\n      return switches[s] || '';\n    }));\n    var desclen = longest(Object.keys(descriptions).map(function (d) {\n      return descriptions[d] || '';\n    }));\n    keys.forEach(function (key) {\n      var kswitch = switches[key];\n      var desc = descriptions[key] || '';\n\n      if (wrap) {\n        desc = wordwrap(switchlen + 4, wrap)(desc).slice(switchlen + 4);\n      }\n\n      var spadding = new Array(Math.max(switchlen - kswitch.length + 3, 0)).join(' ');\n      var dpadding = new Array(Math.max(desclen - desc.length + 1, 0)).join(' ');\n      var type = null;\n      if (options[\"boolean\"][key]) type = '[boolean]';\n      if (options.string[key]) type = '[string]';\n\n      if (!wrap && dpadding.length > 0) {\n        desc += dpadding;\n      }\n\n      var prelude = '  ' + kswitch + spadding;\n      var extra = [type, demanded[key] ? '[required]' : null, options[\"default\"][key] !== undefined ? '[default: ' + JSON.stringify(options[\"default\"][key]) + ']' : null].filter(Boolean).join('  ');\n      var body = [desc, extra].filter(Boolean).join('  ');\n\n      if (wrap) {\n        var dlines = desc.split('\\n');\n        var dlen = dlines.slice(-1)[0].length + (dlines.length === 1 ? prelude.length : 0);\n        body = desc + (dlen + extra.length > wrap - 2 ? '\\n' + new Array(wrap - extra.length + 1).join(' ') + extra : new Array(wrap - extra.length - dlen + 1).join(' ') + extra);\n      }\n\n      help.push(prelude + body);\n    });\n    help.push('');\n    return help.join('\\n');\n  };\n\n  Object.defineProperty(self, 'argv', {\n    get: function get() {\n      return parseArgs(processArgs);\n    },\n    enumerable: true\n  });\n\n  function parseArgs(args) {\n    var argv = minimist(args, options);\n    argv.$0 = self.$0;\n\n    if (demanded._ && argv._.length < demanded._) {\n      fail('Not enough non-option arguments: got ' + argv._.length + ', need at least ' + demanded._);\n    }\n\n    var missing = [];\n    Object.keys(demanded).forEach(function (key) {\n      if (!argv[key]) missing.push(key);\n    });\n\n    if (missing.length) {\n      fail('Missing required arguments: ' + missing.join(', '));\n    }\n\n    checks.forEach(function (f) {\n      try {\n        if (f(argv) === false) {\n          fail('Argument check failed: ' + f.toString());\n        }\n      } catch (err) {\n        fail(err);\n      }\n    });\n    return argv;\n  }\n\n  function longest(xs) {\n    return Math.max.apply(null, xs.map(function (x) {\n      return x.length;\n    }));\n  }\n\n  return self;\n}\n\n; // rebase an absolute path to a relative one with respect to a base directory\n// exported for tests\n\n_exports.rebase = rebase;\n\nfunction rebase(base, dir) {\n  var ds = path.normalize(dir).split('/').slice(1);\n  var bs = path.normalize(base).split('/').slice(1);\n\n  for (var i = 0; ds[i] && ds[i] == bs[i]; i++) {\n    ;\n  }\n\n  ds.splice(0, i);\n  bs.splice(0, i);\n  var p = path.normalize(bs.map(function () {\n    return '..';\n  }).concat(ds).join('/')).replace(/\\/$/, '').replace(/^$/, '.');\n  return p.match(/^[.\\/]/) ? p : './' + p;\n}\n\n;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "path",
        "require",
        "minimist",
        "wordwrap",
        "inst",
        "Argv",
        "process",
        "argv",
        "slice",
        "Object",
        "keys",
        "forEach",
        "key",
        "bind",
        "exports",
        "module",
        "processArgs",
        "cwd",
        "self",
        "$0",
        "map",
        "x",
        "b",
        "rebase",
        "match",
        "length",
        "join",
        "env",
        "_",
        "undefined",
        "replace",
        "dirname",
        "execPath",
        "options",
        "string",
        "alias",
        "bools",
        "push",
        "apply",
        "concat",
        "strings",
        "value",
        "k",
        "y",
        "demanded",
        "demand",
        "Array",
        "isArray",
        "usage",
        "msg",
        "opts",
        "fail",
        "showHelp",
        "console",
        "error",
        "exit",
        "checks",
        "check",
        "f",
        "descriptions",
        "describe",
        "desc",
        "parse",
        "args",
        "parseArgs",
        "option",
        "opt",
        "type",
        "description",
        "wrap",
        "cols",
        "fn",
        "help",
        "reduce",
        "acc",
        "unshift",
        "switches",
        "sw",
        "switchlen",
        "longest",
        "s",
        "desclen",
        "d",
        "kswitch",
        "spadding",
        "Math",
        "max",
        "dpadding",
        "prelude",
        "extra",
        "JSON",
        "stringify",
        "filter",
        "Boolean",
        "body",
        "dlines",
        "split",
        "dlen",
        "defineProperty",
        "get",
        "enumerable",
        "missing",
        "toString",
        "err",
        "xs",
        "base",
        "dir",
        "ds",
        "normalize",
        "bs",
        "i",
        "splice",
        "p"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist",
      "sourcesContent": [
        "var path = require('path');\nvar minimist = require('minimist');\nvar wordwrap = require('wordwrap');\n\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n        require('optimist')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n        require('optimist').argv\n    to get a parsed version of process.argv.\n*/\n\nvar inst = Argv(process.argv.slice(2));\nObject.keys(inst).forEach(function (key) {\n    Argv[key] = typeof inst[key] == 'function'\n        ? inst[key].bind(inst)\n        : inst[key];\n});\n\nvar exports = module.exports = Argv;\nfunction Argv (processArgs, cwd) {\n    var self = {};\n    if (!cwd) cwd = process.cwd();\n    \n    self.$0 = process.argv\n        .slice(0,2)\n        .map(function (x) {\n            var b = rebase(cwd, x);\n            return x.match(/^\\//) && b.length < x.length\n                ? b : x\n        })\n        .join(' ')\n    ;\n    \n    if (process.env._ != undefined && process.argv[1] == process.env._) {\n        self.$0 = process.env._.replace(\n            path.dirname(process.execPath) + '/', ''\n        );\n    }\n    \n    var options = {\n        boolean: [],\n        string: [],\n        alias: {},\n        default: []\n    };\n    \n    self.boolean = function (bools) {\n        options.boolean.push.apply(options.boolean, [].concat(bools));\n        return self;\n    };\n    \n    self.string = function (strings) {\n        options.string.push.apply(options.string, [].concat(strings));\n        return self;\n    };\n    \n    self.default = function (key, value) {\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(function (k) {\n                self.default(k, key[k]);\n            });\n        }\n        else {\n            options.default[key] = value;\n        }\n        return self;\n    };\n    \n    self.alias = function (x, y) {\n        if (typeof x === 'object') {\n            Object.keys(x).forEach(function (key) {\n                self.alias(key, x[key]);\n            });\n        }\n        else {\n            options.alias[x] = (options.alias[x] || []).concat(y);\n        }\n        return self;\n    };\n    \n    var demanded = {};\n    self.demand = function (keys) {\n        if (typeof keys == 'number') {\n            if (!demanded._) demanded._ = 0;\n            demanded._ += keys;\n        }\n        else if (Array.isArray(keys)) {\n            keys.forEach(function (key) {\n                self.demand(key);\n            });\n        }\n        else {\n            demanded[keys] = true;\n        }\n        \n        return self;\n    };\n    \n    var usage;\n    self.usage = function (msg, opts) {\n        if (!opts && typeof msg === 'object') {\n            opts = msg;\n            msg = null;\n        }\n        \n        usage = msg;\n        \n        if (opts) self.options(opts);\n        \n        return self;\n    };\n    \n    function fail (msg) {\n        self.showHelp();\n        if (msg) console.error(msg);\n        process.exit(1);\n    }\n    \n    var checks = [];\n    self.check = function (f) {\n        checks.push(f);\n        return self;\n    };\n    \n    var descriptions = {};\n    self.describe = function (key, desc) {\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(function (k) {\n                self.describe(k, key[k]);\n            });\n        }\n        else {\n            descriptions[key] = desc;\n        }\n        return self;\n    };\n    \n    self.parse = function (args) {\n        return parseArgs(args);\n    };\n    \n    self.option = self.options = function (key, opt) {\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(function (k) {\n                self.options(k, key[k]);\n            });\n        }\n        else {\n            if (opt.alias) self.alias(key, opt.alias);\n            if (opt.demand) self.demand(key);\n            if (typeof opt.default !== 'undefined') {\n                self.default(key, opt.default);\n            }\n            \n            if (opt.boolean || opt.type === 'boolean') {\n                self.boolean(key);\n            }\n            if (opt.string || opt.type === 'string') {\n                self.string(key);\n            }\n            \n            var desc = opt.describe || opt.description || opt.desc;\n            if (desc) {\n                self.describe(key, desc);\n            }\n        }\n        \n        return self;\n    };\n    \n    var wrap = null;\n    self.wrap = function (cols) {\n        wrap = cols;\n        return self;\n    };\n    \n    self.showHelp = function (fn) {\n        if (!fn) fn = console.error;\n        fn(self.help());\n    };\n    \n    self.help = function () {\n        var keys = Object.keys(\n            Object.keys(descriptions)\n            .concat(Object.keys(demanded))\n            .concat(Object.keys(options.default))\n            .reduce(function (acc, key) {\n                if (key !== '_') acc[key] = true;\n                return acc;\n            }, {})\n        );\n        \n        var help = keys.length ? [ 'Options:' ] : [];\n        \n        if (usage) {\n            help.unshift(usage.replace(/\\$0/g, self.$0), '');\n        }\n        \n        var switches = keys.reduce(function (acc, key) {\n            acc[key] = [ key ].concat(options.alias[key] || [])\n                .map(function (sw) {\n                    return (sw.length > 1 ? '--' : '-') + sw\n                })\n                .join(', ')\n            ;\n            return acc;\n        }, {});\n        \n        var switchlen = longest(Object.keys(switches).map(function (s) {\n            return switches[s] || '';\n        }));\n        \n        var desclen = longest(Object.keys(descriptions).map(function (d) { \n            return descriptions[d] || '';\n        }));\n        \n        keys.forEach(function (key) {\n            var kswitch = switches[key];\n            var desc = descriptions[key] || '';\n            \n            if (wrap) {\n                desc = wordwrap(switchlen + 4, wrap)(desc)\n                    .slice(switchlen + 4)\n                ;\n            }\n            \n            var spadding = new Array(\n                Math.max(switchlen - kswitch.length + 3, 0)\n            ).join(' ');\n            \n            var dpadding = new Array(\n                Math.max(desclen - desc.length + 1, 0)\n            ).join(' ');\n            \n            var type = null;\n            \n            if (options.boolean[key]) type = '[boolean]';\n            if (options.string[key]) type = '[string]';\n            \n            if (!wrap && dpadding.length > 0) {\n                desc += dpadding;\n            }\n            \n            var prelude = '  ' + kswitch + spadding;\n            var extra = [\n                type,\n                demanded[key]\n                    ? '[required]'\n                    : null\n                ,\n                options.default[key] !== undefined\n                    ? '[default: ' + JSON.stringify(options.default[key]) + ']'\n                    : null\n                ,\n            ].filter(Boolean).join('  ');\n            \n            var body = [ desc, extra ].filter(Boolean).join('  ');\n            \n            if (wrap) {\n                var dlines = desc.split('\\n');\n                var dlen = dlines.slice(-1)[0].length\n                    + (dlines.length === 1 ? prelude.length : 0)\n                \n                body = desc + (dlen + extra.length > wrap - 2\n                    ? '\\n'\n                        + new Array(wrap - extra.length + 1).join(' ')\n                        + extra\n                    : new Array(wrap - extra.length - dlen + 1).join(' ')\n                        + extra\n                );\n            }\n            \n            help.push(prelude + body);\n        });\n        \n        help.push('');\n        return help.join('\\n');\n    };\n    \n    Object.defineProperty(self, 'argv', {\n        get : function () { return parseArgs(processArgs) },\n        enumerable : true,\n    });\n    \n    function parseArgs (args) {\n        var argv = minimist(args, options);\n        argv.$0 = self.$0;\n        \n        if (demanded._ && argv._.length < demanded._) {\n            fail('Not enough non-option arguments: got '\n                + argv._.length + ', need at least ' + demanded._\n            );\n        }\n        \n        var missing = [];\n        Object.keys(demanded).forEach(function (key) {\n            if (!argv[key]) missing.push(key);\n        });\n        \n        if (missing.length) {\n            fail('Missing required arguments: ' + missing.join(', '));\n        }\n        \n        checks.forEach(function (f) {\n            try {\n                if (f(argv) === false) {\n                    fail('Argument check failed: ' + f.toString());\n                }\n            }\n            catch (err) {\n                fail(err)\n            }\n        });\n        \n        return argv;\n    }\n    \n    function longest (xs) {\n        return Math.max.apply(\n            null,\n            xs.map(function (x) { return x.length })\n        );\n    }\n    \n    return self;\n};\n\n// rebase an absolute path to a relative one with respect to a base directory\n// exported for tests\nexports.rebase = rebase;\nfunction rebase (base, dir) {\n    var ds = path.normalize(dir).split('/').slice(1);\n    var bs = path.normalize(base).split('/').slice(1);\n    \n    for (var i = 0; ds[i] && ds[i] == bs[i]; i++);\n    ds.splice(0, i); bs.splice(0, i);\n    \n    var p = path.normalize(\n        bs.map(function () { return '..' }).concat(ds).join('/')\n    ).replace(/\\/$/,'').replace(/^$/, '.');\n    return p.match(/^[.\\/]/) ? p : './' + p;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1372150063000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (args, opts) {\n  if (!opts) opts = {};\n  var flags = {\n    bools: {},\n    strings: {}\n  };\n  [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n    flags.bools[key] = true;\n  });\n  var aliases = {};\n  Object.keys(opts.alias || {}).forEach(function (key) {\n    aliases[key] = [].concat(opts.alias[key]);\n    aliases[key].forEach(function (x) {\n      aliases[x] = [key].concat(aliases[key].filter(function (y) {\n        return x !== y;\n      }));\n    });\n  });\n  [].concat(opts.string).filter(Boolean).forEach(function (key) {\n    flags.strings[key] = true;\n\n    if (aliases[key]) {\n      flags.strings[aliases[key]] = true;\n    }\n  });\n  var defaults = opts['default'] || {};\n  var argv = {\n    _: []\n  };\n  Object.keys(flags.bools).forEach(function (key) {\n    setArg(key, defaults[key] === undefined ? false : defaults[key]);\n  });\n  var notFlags = [];\n\n  if (args.indexOf('--') !== -1) {\n    notFlags = args.slice(args.indexOf('--') + 1);\n    args = args.slice(0, args.indexOf('--'));\n  }\n\n  function setArg(key, val) {\n    var value = !flags.strings[key] && isNumber(val) ? Number(val) : val;\n    setKey(argv, key.split('.'), value);\n    (aliases[key] || []).forEach(function (x) {\n      setKey(argv, x.split('.'), value);\n    });\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n\n    if (/^--.+=/.test(arg)) {\n      // Using [\\s\\S] instead of . because js doesn't support the\n      // 'dotall' regex modifier. See:\n      // http://stackoverflow.com/a/1068308/13216\n      var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n      setArg(m[1], m[2]);\n    } else if (/^--no-.+/.test(arg)) {\n      var key = arg.match(/^--no-(.+)/)[1];\n      setArg(key, false);\n    } else if (/^--.+/.test(arg)) {\n      var key = arg.match(/^--(.+)/)[1];\n      var next = args[i + 1];\n\n      if (next !== undefined && !/^-/.test(next) && !flags.bools[key] && (aliases[key] ? !flags.bools[aliases[key]] : true)) {\n        setArg(key, next);\n        i++;\n      } else if (/^(true|false)$/.test(next)) {\n        setArg(key, next === 'true');\n        i++;\n      } else {\n        setArg(key, flags.strings[key] ? '' : true);\n      }\n    } else if (/^-[^-]+/.test(arg)) {\n      var letters = arg.slice(1, -1).split('');\n      var broken = false;\n\n      for (var j = 0; j < letters.length; j++) {\n        var next = arg.slice(j + 2);\n\n        if (next === '-') {\n          setArg(letters[j], next);\n          continue;\n        }\n\n        if (/[A-Za-z]/.test(letters[j]) && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n          setArg(letters[j], next);\n          broken = true;\n          break;\n        }\n\n        if (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n          setArg(letters[j], arg.slice(j + 2));\n          broken = true;\n          break;\n        } else {\n          setArg(letters[j], flags.strings[letters[j]] ? '' : true);\n        }\n      }\n\n      var key = arg.slice(-1)[0];\n\n      if (!broken && key !== '-') {\n        if (args[i + 1] && !/^(-|--)[^-]/.test(args[i + 1]) && !flags.bools[key] && (aliases[key] ? !flags.bools[aliases[key]] : true)) {\n          setArg(key, args[i + 1]);\n          i++;\n        } else if (args[i + 1] && /true|false/.test(args[i + 1])) {\n          setArg(key, args[i + 1] === 'true');\n          i++;\n        } else {\n          setArg(key, flags.strings[key] ? '' : true);\n        }\n      }\n    } else {\n      argv._.push(flags.strings['_'] || !isNumber(arg) ? arg : Number(arg));\n    }\n  }\n\n  Object.keys(defaults).forEach(function (key) {\n    if (!hasKey(argv, key.split('.'))) {\n      setKey(argv, key.split('.'), defaults[key]);\n      (aliases[key] || []).forEach(function (x) {\n        setKey(argv, x.split('.'), defaults[key]);\n      });\n    }\n  });\n  notFlags.forEach(function (key) {\n    argv._.push(key);\n  });\n  return argv;\n};\n\nfunction hasKey(obj, keys) {\n  var o = obj;\n  keys.slice(0, -1).forEach(function (key) {\n    o = o[key] || {};\n  });\n  var key = keys[keys.length - 1];\n  return key in o;\n}\n\nfunction setKey(obj, keys, value) {\n  var o = obj;\n  keys.slice(0, -1).forEach(function (key) {\n    if (o[key] === undefined) o[key] = {};\n    o = o[key];\n  });\n  var key = keys[keys.length - 1];\n\n  if (o[key] === undefined || typeof o[key] === 'boolean') {\n    o[key] = value;\n  } else if (Array.isArray(o[key])) {\n    o[key].push(value);\n  } else {\n    o[key] = [o[key], value];\n  }\n}\n\nfunction isNumber(x) {\n  if (typeof x === 'number') return true;\n  if (/^0x[0-9a-f]+$/i.test(x)) return true;\n  return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcmdzIiwib3B0cyIsImZsYWdzIiwiYm9vbHMiLCJzdHJpbmdzIiwiY29uY2F0IiwiZmlsdGVyIiwiQm9vbGVhbiIsImZvckVhY2giLCJrZXkiLCJhbGlhc2VzIiwiT2JqZWN0Iiwia2V5cyIsImFsaWFzIiwieCIsInkiLCJzdHJpbmciLCJkZWZhdWx0cyIsImFyZ3YiLCJfIiwic2V0QXJnIiwidW5kZWZpbmVkIiwibm90RmxhZ3MiLCJpbmRleE9mIiwic2xpY2UiLCJ2YWwiLCJ2YWx1ZSIsImlzTnVtYmVyIiwiTnVtYmVyIiwic2V0S2V5Iiwic3BsaXQiLCJpIiwibGVuZ3RoIiwiYXJnIiwidGVzdCIsIm0iLCJtYXRjaCIsIm5leHQiLCJsZXR0ZXJzIiwiYnJva2VuIiwiaiIsInB1c2giLCJoYXNLZXkiLCJvYmoiLCJvIiwiQXJyYXkiLCJpc0FycmF5Il0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsSUFBVixFQUFnQkMsSUFBaEIsRUFBc0I7QUFDbkMsTUFBSSxDQUFDQSxJQUFMLEVBQVdBLElBQUksR0FBRyxFQUFQO0FBRVgsTUFBSUMsS0FBSyxHQUFHO0FBQUVDLElBQUFBLEtBQUssRUFBRyxFQUFWO0FBQWNDLElBQUFBLE9BQU8sRUFBRztBQUF4QixHQUFaO0FBRUEsS0FBR0MsTUFBSCxDQUFVSixJQUFJLENBQUMsU0FBRCxDQUFkLEVBQTJCSyxNQUEzQixDQUFrQ0MsT0FBbEMsRUFBMkNDLE9BQTNDLENBQW1ELFVBQVVDLEdBQVYsRUFBZTtBQUM5RFAsSUFBQUEsS0FBSyxDQUFDQyxLQUFOLENBQVlNLEdBQVosSUFBbUIsSUFBbkI7QUFDSCxHQUZEO0FBSUEsTUFBSUMsT0FBTyxHQUFHLEVBQWQ7QUFDQUMsRUFBQUEsTUFBTSxDQUFDQyxJQUFQLENBQVlYLElBQUksQ0FBQ1ksS0FBTCxJQUFjLEVBQTFCLEVBQThCTCxPQUE5QixDQUFz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QixDQUFDLENBQUNuQyxHQUFELENBQVIsS0FBa0IsU0FBOUMsRUFBeUQ7QUFDckRtQyxJQUFBQSxDQUFDLENBQUNuQyxHQUFELENBQUQsR0FBU2lCLEtBQVQ7QUFDSCxHQUZELE1BR0ssSUFBSW1CLEtBQUssQ0FBQ0MsT0FBTixDQUFjRixDQUFDLENBQUNuQyxHQUFELENBQWYsQ0FBSixFQUEyQjtBQUM1Qm1DLElBQUFBLENBQUMsQ0FBQ25DLEdBQUQsQ0FBRCxDQUFPZ0MsSUFBUCxDQUFZZixLQUFaO0FBQ0gsR0FGSSxNQUdBO0FBQ0RrQixJQUFBQSxDQUFDLENBQUNuQyxHQUFELENBQUQsR0FBUyxDQUFFbUMsQ0FBQyxDQUFDbkMsR0FBRCxDQUFILEVBQVVpQixLQUFWLENBQVQ7QUFDSDtBQUNKOztBQUVELFNBQVNDLFFBQVQsQ0FBbUJiLENBQW5CLEVBQXNCO0FBQ2xCLE1BQUksT0FBT0EsQ0FBUCxLQUFhLFFBQWpCLEVBQTJCLE9BQU8sSUFBUDtBQUMzQixNQUFJLGlCQUFpQm9CLElBQWpCLENBQXNCcEIsQ0FBdEIsQ0FBSixFQUE4QixPQUFPLElBQVA7QUFDOUIsU0FBTyw2Q0FBNkNvQixJQUE3QyxDQUFrRHBCLENBQWxELENBQVA7QUFDSCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvd2FuZ3poaWNodW4vRGVza3RvcC9zdHVkeS90ZXN0LWNsaS9ub2RlX21vZHVsZXMvbWluaW1pc3QiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmdzLCBvcHRzKSB7XG4gICAgaWYgKCFvcHRzKSBvcHRzID0ge307XG4gICAgXG4gICAgdmFyIGZsYWdzID0geyBib29scyA6IHt9LCBzdHJpbmdzIDoge30gfTtcbiAgICBcbiAgICBbXS5jb25jYXQob3B0c1snYm9vbGVhbiddKS5maWx0ZXIoQm9vbGVhbikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGZsYWdzLmJvb2xzW2tleV0gPSB0cnVlO1xuICAgIH0pO1xuICAgIFxuICAgIHZhciBhbGlhc2VzID0ge307XG4gICAgT2JqZWN0LmtleXMob3B0cy5hbGlhcyB8fCB7fSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGFsaWFzZXNba2V5XSA9IFtdLmNvbmNhdChvcHRzLmFsaWFzW2tleV0pO1xuICAgICAgICBhbGlhc2VzW2tleV0uZm9yRWFjaChmdW5jdGlvbiAoeCkge1xuICAgICAgICAgICAgYWxpYXNlc1t4XSA9IFtrZXldLmNvbmNhdChhbGlhc2VzW2tleV0uZmlsdGVyKGZ1bmN0aW9uICh5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHggIT09IHk7XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgW10uY29uY2F0KG9wdHMuc3RyaW5nKS5maWx0ZXIoQm9vbGVhbikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGZsYWdzLnN0cmluZ3Nba2V5XSA9IHRydWU7XG4gICAgICAgIGlmIChhbGlhc2VzW2tleV0pIHtcbiAgICAgICAgICAgIGZsYWdzLnN0cmluZ3NbYWxpYXNlc1trZXldXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgfSk7XG5cbiAgICB2YXIgZGVmYXVsdHMgPSBvcHRzWydkZWZhdWx0J10gfHwge307XG4gICAgXG4gICAgdmFyIGFyZ3YgPSB7IF8gOiBbXSB9O1xuICAgIE9iamVjdC5rZXlzKGZsYWdzLmJvb2xzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgc2V0QXJnKGtleSwgZGVmYXVsdHNba2V5XSA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBkZWZhdWx0c1trZXldKTtcbiAgICB9KTtcbiAgICBcbiAgICB2YXIgbm90RmxhZ3MgPSBbXTtcblxuICAgIGlmIChhcmdzLmluZGV4T2YoJy0tJykgIT09IC0xKSB7XG4gICAgICAgIG5vdEZsYWdzID0gYXJncy5zbGljZShhcmdzLmluZGV4T2YoJy0tJykrMSk7XG4gICAgICAgIGFyZ3MgPSBhcmdzLnNsaWNlKDAsIGFyZ3MuaW5kZXhPZignLS0nKSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0QXJnIChrZXksIHZhbCkge1xuICAgICAgICB2YXIgdmFsdWUgPSAhZmxhZ3Muc3RyaW5nc1trZXldICYmIGlzTnVtYmVyKHZhbClcbiAgICAgICAgICAgID8gTnVtYmVyKHZhbCkgOiB2YWxcbiAgICAgICAgO1xuICAgICAgICBzZXRLZXkoYXJndiwga2V5LnNwbGl0KCcuJyksIHZhbHVlKTtcbiAgICAgICAgXG4gICAgICAgIChhbGlhc2VzW2tleV0gfHwgW10pLmZvckVhY2goZnVuY3Rpb24gKHgpIHtcbiAgICAgICAgICAgIHNldEtleShhcmd2LCB4LnNwbGl0KCcuJyksIHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgYXJnID0gYXJnc1tpXTtcbiAgICAgICAgXG4gICAgICAgIGlmICgvXi0tLis9Ly50ZXN0KGFyZykpIHtcbiAgICAgICAgICAgIC8vIFVzaW5nIFtcXHNcXFNdIGluc3RlYWQgb2YgLiBiZWNhdXNlIGpzIGRvZXNuJ3Qgc3VwcG9ydCB0aGVcbiAgICAgICAgICAgIC8vICdkb3RhbGwnIHJlZ2V4IG1vZGlmaWVyLiBTZWU6XG4gICAgICAgICAgICAvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8xMDY4MzA4LzEzMjE2XG4gICAgICAgICAgICB2YXIgbSA9IGFyZy5tYXRjaCgvXi0tKFtePV0rKT0oW1xcc1xcU10qKSQvKTtcbiAgICAgICAgICAgIHNldEFyZyhtWzFdLCBtWzJdKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICgvXi0tbm8tLisvLnRlc3QoYXJnKSkge1xuICAgICAgICAgICAgdmFyIGtleSA9IGFyZy5tYXRjaCgvXi0tbm8tKC4rKS8pWzFdO1xuICAgICAgICAgICAgc2V0QXJnKGtleSwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKC9eLS0uKy8udGVzdChhcmcpKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gYXJnLm1hdGNoKC9eLS0oLispLylbMV07XG4gICAgICAgICAgICB2YXIgbmV4dCA9IGFyZ3NbaSArIDFdO1xuICAgICAgICAgICAgaWYgKG5leHQgIT09IHVuZGVmaW5lZCAmJiAhL14tLy50ZXN0KG5leHQpXG4gICAgICAgICAgICAmJiAhZmxhZ3MuYm9vbHNba2V5XVxuICAgICAgICAgICAgJiYgKGFsaWFzZXNba2V5XSA/ICFmbGFncy5ib29sc1thbGlhc2VzW2tleV1dIDogdHJ1ZSkpIHtcbiAgICAgICAgICAgICAgICBzZXRBcmcoa2V5LCBuZXh0KTtcbiAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICgvXih0cnVlfGZhbHNlKSQvLnRlc3QobmV4dCkpIHtcbiAgICAgICAgICAgICAgICBzZXRBcmcoa2V5LCBuZXh0ID09PSAndHJ1ZScpO1xuICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHNldEFyZyhrZXksIGZsYWdzLnN0cmluZ3Nba2V5XSA/ICcnIDogdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoL14tW14tXSsvLnRlc3QoYXJnKSkge1xuICAgICAgICAgICAgdmFyIGxldHRlcnMgPSBhcmcuc2xpY2UoMSwtMSkuc3BsaXQoJycpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB2YXIgYnJva2VuID0gZmFsc2U7XG4gICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGxldHRlcnMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgbmV4dCA9IGFyZy5zbGljZShqKzIpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGlmIChuZXh0ID09PSAnLScpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0QXJnKGxldHRlcnNbal0sIG5leHQpXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAoL1tBLVphLXpdLy50ZXN0KGxldHRlcnNbal0pXG4gICAgICAgICAgICAgICAgJiYgLy0/XFxkKyhcXC5cXGQqKT8oZS0/XFxkKyk/JC8udGVzdChuZXh0KSkge1xuICAgICAgICAgICAgICAgICAgICBzZXRBcmcobGV0dGVyc1tqXSwgbmV4dCk7XG4gICAgICAgICAgICAgICAgICAgIGJyb2tlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAobGV0dGVyc1tqKzFdICYmIGxldHRlcnNbaisxXS5tYXRjaCgvXFxXLykpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0QXJnKGxldHRlcnNbal0sIGFyZy5zbGljZShqKzIpKTtcbiAgICAgICAgICAgICAgICAgICAgYnJva2VuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzZXRBcmcobGV0dGVyc1tqXSwgZmxhZ3Muc3RyaW5nc1tsZXR0ZXJzW2pdXSA/ICcnIDogdHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICB2YXIga2V5ID0gYXJnLnNsaWNlKC0xKVswXTtcbiAgICAgICAgICAgIGlmICghYnJva2VuICYmIGtleSAhPT0gJy0nKSB7XG4gICAgICAgICAgICAgICAgaWYgKGFyZ3NbaSsxXSAmJiAhL14oLXwtLSlbXi1dLy50ZXN0KGFyZ3NbaSsxXSlcbiAgICAgICAgICAgICAgICAmJiAhZmxhZ3MuYm9vbHNba2V5XVxuICAgICAgICAgICAgICAgICYmIChhbGlhc2VzW2tleV0gPyAhZmxhZ3MuYm9vbHNbYWxpYXNlc1trZXldXSA6IHRydWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldEFyZyhrZXksIGFyZ3NbaSsxXSk7XG4gICAgICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoYXJnc1tpKzFdICYmIC90cnVlfGZhbHNlLy50ZXN0KGFyZ3NbaSsxXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0QXJnKGtleSwgYXJnc1tpKzFdID09PSAndHJ1ZScpO1xuICAgICAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzZXRBcmcoa2V5LCBmbGFncy5zdHJpbmdzW2tleV0gPyAnJyA6IHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGFyZ3YuXy5wdXNoKFxuICAgICAgICAgICAgICAgIGZsYWdzLnN0cmluZ3NbJ18nXSB8fCAhaXNOdW1iZXIoYXJnKSA/IGFyZyA6IE51bWJlcihhcmcpXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIE9iamVjdC5rZXlzKGRlZmF1bHRzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgaWYgKCFoYXNLZXkoYXJndiwga2V5LnNwbGl0KCcuJykpKSB7XG4gICAgICAgICAgICBzZXRLZXkoYXJndiwga2V5LnNwbGl0KCcuJyksIGRlZmF1bHRzW2tleV0pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAoYWxpYXNlc1trZXldIHx8IFtdKS5mb3JFYWNoKGZ1bmN0aW9uICh4KSB7XG4gICAgICAgICAgICAgICAgc2V0S2V5KGFyZ3YsIHguc3BsaXQoJy4nKSwgZGVmYXVsdHNba2V5XSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIG5vdEZsYWdzLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgIGFyZ3YuXy5wdXNoKGtleSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gYXJndjtcbn07XG5cbmZ1bmN0aW9uIGhhc0tleSAob2JqLCBrZXlzKSB7XG4gICAgdmFyIG8gPSBvYmo7XG4gICAga2V5cy5zbGljZSgwLC0xKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgbyA9IChvW2tleV0gfHwge30pO1xuICAgIH0pO1xuXG4gICAgdmFyIGtleSA9IGtleXNba2V5cy5sZW5ndGggLSAxXTtcbiAgICByZXR1cm4ga2V5IGluIG87XG59XG5cbmZ1bmN0aW9uIHNldEtleSAob2JqLCBrZXlzLCB2YWx1ZSkge1xuICAgIHZhciBvID0gb2JqO1xuICAgIGtleXMuc2xpY2UoMCwtMSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmIChvW2tleV0gPT09IHVuZGVmaW5lZCkgb1trZXldID0ge307XG4gICAgICAgIG8gPSBvW2tleV07XG4gICAgfSk7XG4gICAgXG4gICAgdmFyIGtleSA9IGtleXNba2V5cy5sZW5ndGggLSAxXTtcbiAgICBpZiAob1trZXldID09PSB1bmRlZmluZWQgfHwgdHlwZW9mIG9ba2V5XSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIG9ba2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KG9ba2V5XSkpIHtcbiAgICAgICAgb1trZXldLnB1c2godmFsdWUpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgb1trZXldID0gWyBvW2tleV0sIHZhbHVlIF07XG4gICAgfVxufVxuXG5mdW5jdGlvbiBpc051bWJlciAoeCkge1xuICAgIGlmICh0eXBlb2YgeCA9PT0gJ251bWJlcicpIHJldHVybiB0cnVlO1xuICAgIGlmICgvXjB4WzAtOWEtZl0rJC9pLnRlc3QoeCkpIHJldHVybiB0cnVlO1xuICAgIHJldHVybiAvXlstK10/KD86XFxkKyg/OlxcLlxcZCopP3xcXC5cXGQrKShlWy0rXT9cXGQrKT8kLy50ZXN0KHgpO1xufVxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "args",
        "opts",
        "flags",
        "bools",
        "strings",
        "concat",
        "filter",
        "Boolean",
        "forEach",
        "key",
        "aliases",
        "Object",
        "keys",
        "alias",
        "x",
        "y",
        "string",
        "defaults",
        "argv",
        "_",
        "setArg",
        "undefined",
        "notFlags",
        "indexOf",
        "slice",
        "val",
        "value",
        "isNumber",
        "Number",
        "setKey",
        "split",
        "i",
        "length",
        "arg",
        "test",
        "m",
        "match",
        "next",
        "letters",
        "broken",
        "j",
        "push",
        "hasKey",
        "obj",
        "o",
        "Array",
        "isArray"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist",
      "sourcesContent": [
        "module.exports = function (args, opts) {\n    if (!opts) opts = {};\n    \n    var flags = { bools : {}, strings : {} };\n    \n    [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n        flags.bools[key] = true;\n    });\n    \n    var aliases = {};\n    Object.keys(opts.alias || {}).forEach(function (key) {\n        aliases[key] = [].concat(opts.alias[key]);\n        aliases[key].forEach(function (x) {\n            aliases[x] = [key].concat(aliases[key].filter(function (y) {\n                return x !== y;\n            }));\n        });\n    });\n\n    [].concat(opts.string).filter(Boolean).forEach(function (key) {\n        flags.strings[key] = true;\n        if (aliases[key]) {\n            flags.strings[aliases[key]] = true;\n        }\n     });\n\n    var defaults = opts['default'] || {};\n    \n    var argv = { _ : [] };\n    Object.keys(flags.bools).forEach(function (key) {\n        setArg(key, defaults[key] === undefined ? false : defaults[key]);\n    });\n    \n    var notFlags = [];\n\n    if (args.indexOf('--') !== -1) {\n        notFlags = args.slice(args.indexOf('--')+1);\n        args = args.slice(0, args.indexOf('--'));\n    }\n\n    function setArg (key, val) {\n        var value = !flags.strings[key] && isNumber(val)\n            ? Number(val) : val\n        ;\n        setKey(argv, key.split('.'), value);\n        \n        (aliases[key] || []).forEach(function (x) {\n            setKey(argv, x.split('.'), value);\n        });\n    }\n    \n    for (var i = 0; i < args.length; i++) {\n        var arg = args[i];\n        \n        if (/^--.+=/.test(arg)) {\n            // Using [\\s\\S] instead of . because js doesn't support the\n            // 'dotall' regex modifier. See:\n            // http://stackoverflow.com/a/1068308/13216\n            var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n            setArg(m[1], m[2]);\n        }\n        else if (/^--no-.+/.test(arg)) {\n            var key = arg.match(/^--no-(.+)/)[1];\n            setArg(key, false);\n        }\n        else if (/^--.+/.test(arg)) {\n            var key = arg.match(/^--(.+)/)[1];\n            var next = args[i + 1];\n            if (next !== undefined && !/^-/.test(next)\n            && !flags.bools[key]\n            && (aliases[key] ? !flags.bools[aliases[key]] : true)) {\n                setArg(key, next);\n                i++;\n            }\n            else if (/^(true|false)$/.test(next)) {\n                setArg(key, next === 'true');\n                i++;\n            }\n            else {\n                setArg(key, flags.strings[key] ? '' : true);\n            }\n        }\n        else if (/^-[^-]+/.test(arg)) {\n            var letters = arg.slice(1,-1).split('');\n            \n            var broken = false;\n            for (var j = 0; j < letters.length; j++) {\n                var next = arg.slice(j+2);\n                \n                if (next === '-') {\n                    setArg(letters[j], next)\n                    continue;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j])\n                && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n                    setArg(letters[j], next);\n                    broken = true;\n                    break;\n                }\n                \n                if (letters[j+1] && letters[j+1].match(/\\W/)) {\n                    setArg(letters[j], arg.slice(j+2));\n                    broken = true;\n                    break;\n                }\n                else {\n                    setArg(letters[j], flags.strings[letters[j]] ? '' : true);\n                }\n            }\n            \n            var key = arg.slice(-1)[0];\n            if (!broken && key !== '-') {\n                if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])\n                && !flags.bools[key]\n                && (aliases[key] ? !flags.bools[aliases[key]] : true)) {\n                    setArg(key, args[i+1]);\n                    i++;\n                }\n                else if (args[i+1] && /true|false/.test(args[i+1])) {\n                    setArg(key, args[i+1] === 'true');\n                    i++;\n                }\n                else {\n                    setArg(key, flags.strings[key] ? '' : true);\n                }\n            }\n        }\n        else {\n            argv._.push(\n                flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n            );\n        }\n    }\n    \n    Object.keys(defaults).forEach(function (key) {\n        if (!hasKey(argv, key.split('.'))) {\n            setKey(argv, key.split('.'), defaults[key]);\n            \n            (aliases[key] || []).forEach(function (x) {\n                setKey(argv, x.split('.'), defaults[key]);\n            });\n        }\n    });\n    \n    notFlags.forEach(function(key) {\n        argv._.push(key);\n    });\n\n    return argv;\n};\n\nfunction hasKey (obj, keys) {\n    var o = obj;\n    keys.slice(0,-1).forEach(function (key) {\n        o = (o[key] || {});\n    });\n\n    var key = keys[keys.length - 1];\n    return key in o;\n}\n\nfunction setKey (obj, keys, value) {\n    var o = obj;\n    keys.slice(0,-1).forEach(function (key) {\n        if (o[key] === undefined) o[key] = {};\n        o = o[key];\n    });\n    \n    var key = keys[keys.length - 1];\n    if (o[key] === undefined || typeof o[key] === 'boolean') {\n        o[key] = value;\n    }\n    else if (Array.isArray(o[key])) {\n        o[key].push(value);\n    }\n    else {\n        o[key] = [ o[key], value ];\n    }\n}\n\nfunction isNumber (x) {\n    if (typeof x === 'number') return true;\n    if (/^0x[0-9a-f]+$/i.test(x)) return true;\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1399844211000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar wordwrap = module.exports = function (start, stop, params) {\n  if (_typeof(start) === 'object') {\n    params = start;\n    start = params.start;\n    stop = params.stop;\n  }\n\n  if (_typeof(stop) === 'object') {\n    params = stop;\n    start = start || params.start;\n    stop = undefined;\n  }\n\n  if (!stop) {\n    stop = start;\n    start = 0;\n  }\n\n  if (!params) params = {};\n  var mode = params.mode || 'soft';\n  var re = mode === 'hard' ? /\\b/ : /(\\S+\\s+)/;\n  return function (text) {\n    var chunks = text.toString().split(re).reduce(function (acc, x) {\n      if (mode === 'hard') {\n        for (var i = 0; i < x.length; i += stop - start) {\n          acc.push(x.slice(i, i + stop - start));\n        }\n      } else acc.push(x);\n\n      return acc;\n    }, []);\n    return chunks.reduce(function (lines, rawChunk) {\n      if (rawChunk === '') return lines;\n      var chunk = rawChunk.replace(/\\t/g, '    ');\n      var i = lines.length - 1;\n\n      if (lines[i].length + chunk.length > stop) {\n        lines[i] = lines[i].replace(/\\s+$/, '');\n        chunk.split(/\\n/).forEach(function (c) {\n          lines.push(new Array(start + 1).join(' ') + c.replace(/^\\s+/, ''));\n        });\n      } else if (chunk.match(/\\n/)) {\n        var xs = chunk.split(/\\n/);\n        lines[i] += xs.shift();\n        xs.forEach(function (c) {\n          lines.push(new Array(start + 1).join(' ') + c.replace(/^\\s+/, ''));\n        });\n      } else {\n        lines[i] += chunk;\n      }\n\n      return lines;\n    }, [new Array(start + 1).join(' ')]).join('\\n');\n  };\n};\n\nwordwrap.soft = wordwrap;\n\nwordwrap.hard = function (start, stop) {\n  return wordwrap(start, stop, {\n    mode: 'hard'\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIndvcmR3cmFwIiwibW9kdWxlIiwiZXhwb3J0cyIsInN0YXJ0Iiwic3RvcCIsInBhcmFtcyIsInVuZGVmaW5lZCIsIm1vZGUiLCJyZSIsInRleHQiLCJjaHVua3MiLCJ0b1N0cmluZyIsInNwbGl0IiwicmVkdWNlIiwiYWNjIiwieCIsImkiLCJsZW5ndGgiLCJwdXNoIiwic2xpY2UiLCJsaW5lcyIsInJhd0NodW5rIiwiY2h1bmsiLCJyZXBsYWNlIiwiZm9yRWFjaCIsImMiLCJBcnJheSIsImpvaW4iLCJtYXRjaCIsInhzIiwic2hpZnQiLCJzb2Z0IiwiaGFyZCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLElBQUlBLFFBQVEsR0FBR0MsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVDLEtBQVYsRUFBaUJDLElBQWpCLEVBQXVCQyxNQUF2QixFQUErQjtBQUMzRCxNQUFJLFFBQU9GLEtBQVAsTUFBaUIsUUFBckIsRUFBK0I7QUFDM0JFLElBQUFBLE1BQU0sR0FBR0YsS0FBVDtBQUNBQSxJQUFBQSxLQUFLLEdBQUdFLE1BQU0sQ0FBQ0YsS0FBZjtBQUNBQyxJQUFBQSxJQUFJLEdBQUdDLE1BQU0sQ0FBQ0QsSUFBZDtBQUNIOztBQUVELE1BQUksUUFBT0EsSUFBUCxNQUFnQixRQUFwQixFQUE4QjtBQUMxQkMsSUFBQUEsTUFBTSxHQUFHRCxJQUFUO0FBQ0FELElBQUFBLEtBQUssR0FBR0EsS0FBSyxJQUFJRSxNQUFNLENBQUNGLEtBQXhCO0FBQ0FDLElBQUFBLElBQUksR0FBR0UsU0FBUDtBQUNIOztBQUVELE1BQUksQ0FBQ0YsSUFBTCxFQUFXO0FBQ1BBLElBQUFBLElBQUksR0FBR0QsS0FBUDtBQUNBQSxJQUFBQSxLQUFLLEdBQUcsQ0FBUjtBQUNIOztBQUVELE1BQUksQ0FBQ0UsTUFBTCxFQUFhQSxNQUFNLEdBQUcsRUFBVDtBQUNiLE1BQUlFLElBQUksR0FBR0YsTUFBTSxDQUFDRSxJQUFQLElBQWUsTUFBMUI7QUFDQSxN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QWhCOztBQUVBQSxRQUFRLENBQUNnQyxJQUFULEdBQWdCLFVBQVU3QixLQUFWLEVBQWlCQyxJQUFqQixFQUF1QjtBQUNuQyxTQUFPSixRQUFRLENBQUNHLEtBQUQsRUFBUUMsSUFBUixFQUFjO0FBQUVHLElBQUFBLElBQUksRUFBRztBQUFULEdBQWQsQ0FBZjtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhbmd6aGljaHVuL0Rlc2t0b3Avc3R1ZHkvdGVzdC1jbGkvbm9kZV9tb2R1bGVzL3dvcmR3cmFwIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHdvcmR3cmFwID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc3RhcnQsIHN0b3AsIHBhcmFtcykge1xuICAgIGlmICh0eXBlb2Ygc3RhcnQgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIHBhcmFtcyA9IHN0YXJ0O1xuICAgICAgICBzdGFydCA9IHBhcmFtcy5zdGFydDtcbiAgICAgICAgc3RvcCA9IHBhcmFtcy5zdG9wO1xuICAgIH1cbiAgICBcbiAgICBpZiAodHlwZW9mIHN0b3AgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIHBhcmFtcyA9IHN0b3A7XG4gICAgICAgIHN0YXJ0ID0gc3RhcnQgfHwgcGFyYW1zLnN0YXJ0O1xuICAgICAgICBzdG9wID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBcbiAgICBpZiAoIXN0b3ApIHtcbiAgICAgICAgc3RvcCA9IHN0YXJ0O1xuICAgICAgICBzdGFydCA9IDA7XG4gICAgfVxuICAgIFxuICAgIGlmICghcGFyYW1zKSBwYXJhbXMgPSB7fTtcbiAgICB2YXIgbW9kZSA9IHBhcmFtcy5tb2RlIHx8ICdzb2Z0JztcbiAgICB2YXIgcmUgPSBtb2RlID09PSAnaGFyZCcgPyAvXFxiLyA6IC8oXFxTK1xccyspLztcbiAgICBcbiAgICByZXR1cm4gZnVuY3Rpb24gKHRleHQpIHtcbiAgICAgICAgdmFyIGNodW5rcyA9IHRleHQudG9TdHJpbmcoKVxuICAgICAgICAgICAgLnNwbGl0KHJlKVxuICAgICAgICAgICAgLnJlZHVjZShmdW5jdGlvbiAoYWNjLCB4KSB7XG4gICAgICAgICAgICAgICAgaWYgKG1vZGUgPT09ICdoYXJkJykge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHgubGVuZ3RoOyBpICs9IHN0b3AgLSBzdGFydCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWNjLnB1c2goeC5zbGljZShpLCBpICsgc3RvcCAtIHN0YXJ0KSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBhY2MucHVzaCh4KVxuICAgICAgICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgICAgICB9LCBbXSlcbiAgICAgICAgO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGNodW5rcy5yZWR1Y2UoZnVuY3Rpb24gKGxpbmVzLCByYXdDaHVuaykge1xuICAgICAgICAgICAgaWYgKHJhd0NodW5rID09PSAnJykgcmV0dXJuIGxpbmVzO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB2YXIgY2h1bmsgPSByYXdDaHVuay5yZXBsYWNlKC9cXHQvZywgJyAgICAnKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdmFyIGkgPSBsaW5lcy5sZW5ndGggLSAxO1xuICAgICAgICAgICAgaWYgKGxpbmVzW2ldLmxlbmd0aCArIGNodW5rLmxlbmd0aCA+IHN0b3ApIHtcbiAgICAgICAgICAgICAgICBsaW5lc1tpXSA9IGxpbmVzW2ldLnJlcGxhY2UoL1xccyskLywgJycpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNodW5rLnNwbGl0KC9cXG4vKS5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7XG4gICAgICAgICAgICAgICAgICAgIGxpbmVzLnB1c2goXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgQXJyYXkoc3RhcnQgKyAxKS5qb2luKCcgJylcbiAgICAgICAgICAgICAgICAgICAgICAgICsgYy5yZXBsYWNlKC9eXFxzKy8sICcnKVxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY2h1bmsubWF0Y2goL1xcbi8pKSB7XG4gICAgICAgICAgICAgICAgdmFyIHhzID0gY2h1bmsuc3BsaXQoL1xcbi8pO1xuICAgICAgICAgICAgICAgIGxpbmVzW2ldICs9IHhzLnNoaWZ0KCk7XG4gICAgICAgICAgICAgICAgeHMuZm9yRWFjaChmdW5jdGlvbiAoYykge1xuICAgICAgICAgICAgICAgICAgICBsaW5lcy5wdXNoKFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3IEFycmF5KHN0YXJ0ICsgMSkuam9pbignICcpXG4gICAgICAgICAgICAgICAgICAgICAgICArIGMucmVwbGFjZSgvXlxccysvLCAnJylcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGxpbmVzW2ldICs9IGNodW5rO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICByZXR1cm4gbGluZXM7XG4gICAgICAgIH0sIFsgbmV3IEFycmF5KHN0YXJ0ICsgMSkuam9pbignICcpIF0pLmpvaW4oJ1xcbicpO1xuICAgIH07XG59O1xuXG53b3Jkd3JhcC5zb2Z0ID0gd29yZHdyYXA7XG5cbndvcmR3cmFwLmhhcmQgPSBmdW5jdGlvbiAoc3RhcnQsIHN0b3ApIHtcbiAgICByZXR1cm4gd29yZHdyYXAoc3RhcnQsIHN0b3AsIHsgbW9kZSA6ICdoYXJkJyB9KTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "wordwrap",
        "module",
        "exports",
        "start",
        "stop",
        "params",
        "undefined",
        "mode",
        "re",
        "text",
        "chunks",
        "toString",
        "split",
        "reduce",
        "acc",
        "x",
        "i",
        "length",
        "push",
        "slice",
        "lines",
        "rawChunk",
        "chunk",
        "replace",
        "forEach",
        "c",
        "Array",
        "join",
        "match",
        "xs",
        "shift",
        "soft",
        "hard"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap",
      "sourcesContent": [
        "var wordwrap = module.exports = function (start, stop, params) {\n    if (typeof start === 'object') {\n        params = start;\n        start = params.start;\n        stop = params.stop;\n    }\n    \n    if (typeof stop === 'object') {\n        params = stop;\n        start = start || params.start;\n        stop = undefined;\n    }\n    \n    if (!stop) {\n        stop = start;\n        start = 0;\n    }\n    \n    if (!params) params = {};\n    var mode = params.mode || 'soft';\n    var re = mode === 'hard' ? /\\b/ : /(\\S+\\s+)/;\n    \n    return function (text) {\n        var chunks = text.toString()\n            .split(re)\n            .reduce(function (acc, x) {\n                if (mode === 'hard') {\n                    for (var i = 0; i < x.length; i += stop - start) {\n                        acc.push(x.slice(i, i + stop - start));\n                    }\n                }\n                else acc.push(x)\n                return acc;\n            }, [])\n        ;\n        \n        return chunks.reduce(function (lines, rawChunk) {\n            if (rawChunk === '') return lines;\n            \n            var chunk = rawChunk.replace(/\\t/g, '    ');\n            \n            var i = lines.length - 1;\n            if (lines[i].length + chunk.length > stop) {\n                lines[i] = lines[i].replace(/\\s+$/, '');\n                \n                chunk.split(/\\n/).forEach(function (c) {\n                    lines.push(\n                        new Array(start + 1).join(' ')\n                        + c.replace(/^\\s+/, '')\n                    );\n                });\n            }\n            else if (chunk.match(/\\n/)) {\n                var xs = chunk.split(/\\n/);\n                lines[i] += xs.shift();\n                xs.forEach(function (c) {\n                    lines.push(\n                        new Array(start + 1).join(' ')\n                        + c.replace(/^\\s+/, '')\n                    );\n                });\n            }\n            else {\n                lines[i] += chunk;\n            }\n            \n            return lines;\n        }, [ new Array(start + 1).join(' ') ]).join('\\n');\n    };\n};\n\nwordwrap.soft = wordwrap;\n\nwordwrap.hard = function (start, stop) {\n    return wordwrap(start, stop, { mode : 'hard' });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1431018454000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar escapeStringRegexp = require('escape-string-regexp');\n\nvar ansiStyles = require('ansi-styles');\n\nvar stdoutColor = require('supports-color').stdout;\n\nvar template = require('./templates.js');\n\nvar isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm'); // `supportsColor.level` → `ansiStyles.color[name]` mapping\n\nvar levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m']; // `color-convert` models to exclude from the Chalk API due to conflicts and such\n\nvar skipModels = new Set(['gray']);\nvar styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n  options = options || {}; // Detect level if not set manually\n\n  var scLevel = stdoutColor ? stdoutColor.level : 0;\n  obj.level = options.level === undefined ? scLevel : options.level;\n  obj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n  // We check for this.template here since calling `chalk.constructor()`\n  // by itself will have a `this` of a previously constructed chalk object\n  if (!this || !(this instanceof Chalk) || this.template) {\n    var chalk = {};\n    applyOptions(chalk, options);\n\n    chalk.template = function () {\n      var args = [].slice.call(arguments);\n      return chalkTag.apply(null, [chalk.template].concat(args));\n    };\n\n    Object.setPrototypeOf(chalk, Chalk.prototype);\n    Object.setPrototypeOf(chalk.template, chalk);\n    chalk.template.constructor = Chalk;\n    return chalk.template;\n  }\n\n  applyOptions(this, options);\n} // Use bright blue on Windows as the normal blue color is illegible\n\n\nif (isSimpleWindowsTerm) {\n  ansiStyles.blue.open = \"\\x1B[94m\";\n}\n\nvar _loop = function _loop() {\n  var key = _Object$keys[_i];\n  ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n  styles[key] = {\n    get: function get() {\n      var codes = ansiStyles[key];\n      return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n    }\n  };\n};\n\nfor (var _i = 0, _Object$keys = Object.keys(ansiStyles); _i < _Object$keys.length; _i++) {\n  _loop();\n}\n\nstyles.visible = {\n  get: function get() {\n    return build.call(this, this._styles || [], true, 'visible');\n  }\n};\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\n\nvar _loop2 = function _loop2() {\n  var model = _Object$keys2[_i2];\n\n  if (skipModels.has(model)) {\n    return \"continue\";\n  }\n\n  styles[model] = {\n    get: function get() {\n      var level = this.level;\n      return function () {\n        var open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n        var codes = {\n          open: open,\n          close: ansiStyles.color.close,\n          closeRe: ansiStyles.color.closeRe\n        };\n        return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n      };\n    }\n  };\n};\n\nfor (var _i2 = 0, _Object$keys2 = Object.keys(ansiStyles.color.ansi); _i2 < _Object$keys2.length; _i2++) {\n  var _ret = _loop2();\n\n  if (_ret === \"continue\") continue;\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\n\nvar _loop3 = function _loop3() {\n  var model = _Object$keys3[_i3];\n\n  if (skipModels.has(model)) {\n    return \"continue\";\n  }\n\n  var bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n  styles[bgModel] = {\n    get: function get() {\n      var level = this.level;\n      return function () {\n        var open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n        var codes = {\n          open: open,\n          close: ansiStyles.bgColor.close,\n          closeRe: ansiStyles.bgColor.closeRe\n        };\n        return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n      };\n    }\n  };\n};\n\nfor (var _i3 = 0, _Object$keys3 = Object.keys(ansiStyles.bgColor.ansi); _i3 < _Object$keys3.length; _i3++) {\n  var _ret2 = _loop3();\n\n  if (_ret2 === \"continue\") continue;\n}\n\nvar proto = Object.defineProperties(function () {}, styles);\n\nfunction build(_styles, _empty, key) {\n  var builder = function builder() {\n    return applyStyle.apply(builder, arguments);\n  };\n\n  builder._styles = _styles;\n  builder._empty = _empty;\n  var self = this;\n  Object.defineProperty(builder, 'level', {\n    enumerable: true,\n    get: function get() {\n      return self.level;\n    },\n    set: function set(level) {\n      self.level = level;\n    }\n  });\n  Object.defineProperty(builder, 'enabled', {\n    enumerable: true,\n    get: function get() {\n      return self.enabled;\n    },\n    set: function set(enabled) {\n      self.enabled = enabled;\n    }\n  }); // See below for fix regarding invisible grey/dim combination on Windows\n\n  builder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey'; // `__proto__` is used because we must return a function, but there is\n  // no way to create a function with a different prototype\n\n  builder.__proto__ = proto; // eslint-disable-line no-proto\n\n  return builder;\n}\n\nfunction applyStyle() {\n  // Support varags, but simply cast to string in case there's only one arg\n  var args = arguments;\n  var argsLen = args.length;\n  var str = String(arguments[0]);\n\n  if (argsLen === 0) {\n    return '';\n  }\n\n  if (argsLen > 1) {\n    // Don't slice `arguments`, it prevents V8 optimizations\n    for (var a = 1; a < argsLen; a++) {\n      str += ' ' + args[a];\n    }\n  }\n\n  if (!this.enabled || this.level <= 0 || !str) {\n    return this._empty ? '' : str;\n  } // Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n  // see https://github.com/chalk/chalk/issues/58\n  // If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\n\n  var originalDim = ansiStyles.dim.open;\n\n  if (isSimpleWindowsTerm && this.hasGrey) {\n    ansiStyles.dim.open = '';\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = this._styles.slice().reverse()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var code = _step.value;\n      // Replace any instances already present with a re-opening code\n      // otherwise only the part of the string until said closing code\n      // will be colored, and the rest will simply be 'plain'.\n      str = code.open + str.replace(code.closeRe, code.open) + code.close; // Close the styling before a linebreak and reopen\n      // after next line to fix a bleed issue on macOS\n      // https://github.com/chalk/chalk/pull/92\n\n      str = str.replace(/\\r?\\n/g, \"\".concat(code.close, \"$&\").concat(code.open));\n    } // Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  ansiStyles.dim.open = originalDim;\n  return str;\n}\n\nfunction chalkTag(chalk, strings) {\n  if (!Array.isArray(strings)) {\n    // If chalk() was called by itself or with a string,\n    // return the string itself as a string.\n    return [].slice.call(arguments, 1).join(' ');\n  }\n\n  var args = [].slice.call(arguments, 2);\n  var parts = [strings.raw[0]];\n\n  for (var i = 1; i < strings.length; i++) {\n    parts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n    parts.push(String(strings.raw[i]));\n  }\n\n  return template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\nmodule.exports = Chalk(); // eslint-disable-line new-cap\n\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports[\"default\"] = module.exports; // For TypeScript\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "escapeStringRegexp",
        "require",
        "ansiStyles",
        "stdoutColor",
        "stdout",
        "template",
        "isSimpleWindowsTerm",
        "process",
        "platform",
        "env",
        "TERM",
        "toLowerCase",
        "startsWith",
        "levelMapping",
        "skipModels",
        "Set",
        "styles",
        "Object",
        "create",
        "applyOptions",
        "obj",
        "options",
        "scLevel",
        "level",
        "undefined",
        "enabled",
        "Chalk",
        "chalk",
        "args",
        "slice",
        "call",
        "arguments",
        "chalkTag",
        "apply",
        "concat",
        "setPrototypeOf",
        "prototype",
        "constructor",
        "blue",
        "open",
        "key",
        "closeRe",
        "RegExp",
        "close",
        "get",
        "codes",
        "build",
        "_styles",
        "_empty",
        "keys",
        "visible",
        "color",
        "model",
        "has",
        "ansi",
        "bgColor",
        "bgModel",
        "toUpperCase",
        "proto",
        "defineProperties",
        "builder",
        "applyStyle",
        "self",
        "defineProperty",
        "enumerable",
        "set",
        "hasGrey",
        "__proto__",
        "argsLen",
        "length",
        "str",
        "String",
        "a",
        "originalDim",
        "dim",
        "reverse",
        "code",
        "replace",
        "strings",
        "Array",
        "isArray",
        "join",
        "parts",
        "raw",
        "i",
        "push",
        "module",
        "exports",
        "supportsColor"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk",
      "sourcesContent": [
        "'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  return str.replace(matchOperatorsRe, '\\\\$&');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1hdGNoT3BlcmF0b3JzUmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic3RyIiwiVHlwZUVycm9yIiwicmVwbGFjZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsZ0JBQWdCLEdBQUcscUJBQXZCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlO0FBQy9CLE1BQUksT0FBT0EsR0FBUCxLQUFlLFFBQW5CLEVBQTZCO0FBQzVCLFVBQU0sSUFBSUMsU0FBSixDQUFjLG1CQUFkLENBQU47QUFDQTs7QUFFRCxTQUFPRCxHQUFHLENBQUNFLE9BQUosQ0FBWUwsZ0JBQVosRUFBOEIsTUFBOUIsQ0FBUDtBQUNBLENBTkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhbmd6aGljaHVuL0Rlc2t0b3Avc3R1ZHkvdGVzdC1jbGkvbm9kZV9tb2R1bGVzL2VzY2FwZS1zdHJpbmctcmVnZXhwIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgbWF0Y2hPcGVyYXRvcnNSZSA9IC9bfFxcXFx7fSgpW1xcXV4kKyo/Ll0vZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc3RyKSB7XG5cdGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGEgc3RyaW5nJyk7XG5cdH1cblxuXHRyZXR1cm4gc3RyLnJlcGxhY2UobWF0Y2hPcGVyYXRvcnNSZSwgJ1xcXFwkJicpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "matchOperatorsRe",
        "module",
        "exports",
        "str",
        "TypeError",
        "replace"
      ],
      "mappings": "AAAA;;AAEA,IAAIA,gBAAgB,GAAG,qBAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAe;AAC/B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC5B,UAAM,IAAIC,SAAJ,CAAc,mBAAd,CAAN;AACA;;AAED,SAAOD,GAAG,CAACE,OAAJ,CAAYL,gBAAZ,EAA8B,MAA9B,CAAP;AACA,CAND",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp",
      "sourcesContent": [
        "'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1456057032000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar colorConvert = require('color-convert');\n\nvar wrapAnsi16 = function wrapAnsi16(fn, offset) {\n  return function () {\n    var code = fn.apply(colorConvert, arguments);\n    return \"\\x1B[\".concat(code + offset, \"m\");\n  };\n};\n\nvar wrapAnsi256 = function wrapAnsi256(fn, offset) {\n  return function () {\n    var code = fn.apply(colorConvert, arguments);\n    return \"\\x1B[\".concat(38 + offset, \";5;\").concat(code, \"m\");\n  };\n};\n\nvar wrapAnsi16m = function wrapAnsi16m(fn, offset) {\n  return function () {\n    var rgb = fn.apply(colorConvert, arguments);\n    return \"\\x1B[\".concat(38 + offset, \";2;\").concat(rgb[0], \";\").concat(rgb[1], \";\").concat(rgb[2], \"m\");\n  };\n};\n\nfunction assembleStyles() {\n  var codes = new Map();\n  var styles = {\n    modifier: {\n      reset: [0, 0],\n      // 21 isn't widely supported and 22 does the same thing\n      bold: [1, 22],\n      dim: [2, 22],\n      italic: [3, 23],\n      underline: [4, 24],\n      inverse: [7, 27],\n      hidden: [8, 28],\n      strikethrough: [9, 29]\n    },\n    color: {\n      black: [30, 39],\n      red: [31, 39],\n      green: [32, 39],\n      yellow: [33, 39],\n      blue: [34, 39],\n      magenta: [35, 39],\n      cyan: [36, 39],\n      white: [37, 39],\n      gray: [90, 39],\n      // Bright color\n      redBright: [91, 39],\n      greenBright: [92, 39],\n      yellowBright: [93, 39],\n      blueBright: [94, 39],\n      magentaBright: [95, 39],\n      cyanBright: [96, 39],\n      whiteBright: [97, 39]\n    },\n    bgColor: {\n      bgBlack: [40, 49],\n      bgRed: [41, 49],\n      bgGreen: [42, 49],\n      bgYellow: [43, 49],\n      bgBlue: [44, 49],\n      bgMagenta: [45, 49],\n      bgCyan: [46, 49],\n      bgWhite: [47, 49],\n      // Bright color\n      bgBlackBright: [100, 49],\n      bgRedBright: [101, 49],\n      bgGreenBright: [102, 49],\n      bgYellowBright: [103, 49],\n      bgBlueBright: [104, 49],\n      bgMagentaBright: [105, 49],\n      bgCyanBright: [106, 49],\n      bgWhiteBright: [107, 49]\n    }\n  }; // Fix humans\n\n  styles.color.grey = styles.color.gray;\n\n  for (var _i = 0, _Object$keys = Object.keys(styles); _i < _Object$keys.length; _i++) {\n    var groupName = _Object$keys[_i];\n    var group = styles[groupName];\n\n    for (var _i3 = 0, _Object$keys3 = Object.keys(group); _i3 < _Object$keys3.length; _i3++) {\n      var styleName = _Object$keys3[_i3];\n      var style = group[styleName];\n      styles[styleName] = {\n        open: \"\\x1B[\".concat(style[0], \"m\"),\n        close: \"\\x1B[\".concat(style[1], \"m\")\n      };\n      group[styleName] = styles[styleName];\n      codes.set(style[0], style[1]);\n    }\n\n    Object.defineProperty(styles, groupName, {\n      value: group,\n      enumerable: false\n    });\n    Object.defineProperty(styles, 'codes', {\n      value: codes,\n      enumerable: false\n    });\n  }\n\n  var ansi2ansi = function ansi2ansi(n) {\n    return n;\n  };\n\n  var rgb2rgb = function rgb2rgb(r, g, b) {\n    return [r, g, b];\n  };\n\n  styles.color.close = \"\\x1B[39m\";\n  styles.bgColor.close = \"\\x1B[49m\";\n  styles.color.ansi = {\n    ansi: wrapAnsi16(ansi2ansi, 0)\n  };\n  styles.color.ansi256 = {\n    ansi256: wrapAnsi256(ansi2ansi, 0)\n  };\n  styles.color.ansi16m = {\n    rgb: wrapAnsi16m(rgb2rgb, 0)\n  };\n  styles.bgColor.ansi = {\n    ansi: wrapAnsi16(ansi2ansi, 10)\n  };\n  styles.bgColor.ansi256 = {\n    ansi256: wrapAnsi256(ansi2ansi, 10)\n  };\n  styles.bgColor.ansi16m = {\n    rgb: wrapAnsi16m(rgb2rgb, 10)\n  };\n\n  for (var _i2 = 0, _Object$keys2 = Object.keys(colorConvert); _i2 < _Object$keys2.length; _i2++) {\n    var key = _Object$keys2[_i2];\n\n    if (_typeof(colorConvert[key]) !== 'object') {\n      continue;\n    }\n\n    var suite = colorConvert[key];\n\n    if (key === 'ansi16') {\n      key = 'ansi';\n    }\n\n    if ('ansi16' in suite) {\n      styles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n      styles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n    }\n\n    if ('ansi256' in suite) {\n      styles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n      styles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n    }\n\n    if ('rgb' in suite) {\n      styles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n      styles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n    }\n  }\n\n  return styles;\n} // Make the export immutable\n\n\nObject.defineProperty(module, 'exports', {\n  enumerable: true,\n  get: assembleStyles\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "colorConvert",
        "require",
        "wrapAnsi16",
        "fn",
        "offset",
        "code",
        "apply",
        "arguments",
        "wrapAnsi256",
        "wrapAnsi16m",
        "rgb",
        "assembleStyles",
        "codes",
        "Map",
        "styles",
        "modifier",
        "reset",
        "bold",
        "dim",
        "italic",
        "underline",
        "inverse",
        "hidden",
        "strikethrough",
        "color",
        "black",
        "red",
        "green",
        "yellow",
        "blue",
        "magenta",
        "cyan",
        "white",
        "gray",
        "redBright",
        "greenBright",
        "yellowBright",
        "blueBright",
        "magentaBright",
        "cyanBright",
        "whiteBright",
        "bgColor",
        "bgBlack",
        "bgRed",
        "bgGreen",
        "bgYellow",
        "bgBlue",
        "bgMagenta",
        "bgCyan",
        "bgWhite",
        "bgBlackBright",
        "bgRedBright",
        "bgGreenBright",
        "bgYellowBright",
        "bgBlueBright",
        "bgMagentaBright",
        "bgCyanBright",
        "bgWhiteBright",
        "grey",
        "Object",
        "keys",
        "groupName",
        "group",
        "styleName",
        "style",
        "open",
        "close",
        "set",
        "defineProperty",
        "value",
        "enumerable",
        "ansi2ansi",
        "n",
        "rgb2rgb",
        "r",
        "g",
        "b",
        "ansi",
        "ansi256",
        "ansi16m",
        "key",
        "suite",
        "ansi16",
        "module",
        "get"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles",
      "sourcesContent": [
        "'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1519983217000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar conversions = require('./conversions');\n\nvar route = require('./route');\n\nvar convert = {};\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n  var wrappedFn = function wrappedFn(args) {\n    if (args === undefined || args === null) {\n      return args;\n    }\n\n    if (arguments.length > 1) {\n      args = Array.prototype.slice.call(arguments);\n    }\n\n    return fn(args);\n  }; // preserve .conversion property if there is one\n\n\n  if ('conversion' in fn) {\n    wrappedFn.conversion = fn.conversion;\n  }\n\n  return wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n  var wrappedFn = function wrappedFn(args) {\n    if (args === undefined || args === null) {\n      return args;\n    }\n\n    if (arguments.length > 1) {\n      args = Array.prototype.slice.call(arguments);\n    }\n\n    var result = fn(args); // we're assuming the result is an array here.\n    // see notice in conversions.js; don't use box types\n    // in conversion functions.\n\n    if (_typeof(result) === 'object') {\n      for (var len = result.length, i = 0; i < len; i++) {\n        result[i] = Math.round(result[i]);\n      }\n    }\n\n    return result;\n  }; // preserve .conversion property if there is one\n\n\n  if ('conversion' in fn) {\n    wrappedFn.conversion = fn.conversion;\n  }\n\n  return wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n  convert[fromModel] = {};\n  Object.defineProperty(convert[fromModel], 'channels', {\n    value: conversions[fromModel].channels\n  });\n  Object.defineProperty(convert[fromModel], 'labels', {\n    value: conversions[fromModel].labels\n  });\n  var routes = route(fromModel);\n  var routeModels = Object.keys(routes);\n  routeModels.forEach(function (toModel) {\n    var fn = routes[toModel];\n    convert[fromModel][toModel] = wrapRounded(fn);\n    convert[fromModel][toModel].raw = wrapRaw(fn);\n  });\n});\nmodule.exports = convert;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbnZlcnNpb25zIiwicmVxdWlyZSIsInJvdXRlIiwiY29udmVydCIsIm1vZGVscyIsIk9iamVjdCIsImtleXMiLCJ3cmFwUmF3IiwiZm4iLCJ3cmFwcGVkRm4iLCJhcmdzIiwidW5kZWZpbmVkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJzbGljZSIsImNhbGwiLCJjb252ZXJzaW9uIiwid3JhcFJvdW5kZWQiLCJyZXN1bHQiLCJsZW4iLCJpIiwiTWF0aCIsInJvdW5kIiwiZm9yRWFjaCIsImZyb21Nb2RlbCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJjaGFubmVscyIsImxhYmVscyIsInJvdXRlcyIsInJvdXRlTW9kZWxzIiwidG9Nb2RlbCIsInJhdyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFJQSxXQUFXLEdBQUdDLE9BQU8sQ0FBQyxlQUFELENBQXpCOztBQUNBLElBQUlDLEtBQUssR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBbkI7O0FBRUEsSUFBSUUsT0FBTyxHQUFHLEVBQWQ7QUFFQSxJQUFJQyxNQUFNLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZTixXQUFaLENBQWI7O0FBRUEsU0FBU08sT0FBVCxDQUFpQkMsRUFBakIsRUFBcUI7QUFDcEIsTUFBSUMsU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBVUMsSUFBVixFQUFnQjtBQUMvQixRQUFJQSxJQUFJLEtBQUtDLFNBQVQsSUFBc0JELElBQUksS0FBSyxJQUFuQyxFQUF5QztBQUN4QyxhQUFPQSxJQUFQO0FBQ0E7O0FBRUQsUUFBSUUsU0FBUyxDQUFDQyxNQUFWLEdBQW1CLENBQXZCLEVBQTBCO0FBQ3pCSCxNQUFBQSxJQUFJLEdBQUdJLEtBQUssQ0FBQ0MsU0FBTixDQUFnQkMsS0FBaEIsQ0FBc0JDLElBQXRCLENBQTJCTCxTQUEzQixDQUFQO0FBQ0E7O0FBRUQsV0FBT0osRUFB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ZXMvY29sb3ItY29udmVydCIsInNvdXJjZXNDb250ZW50IjpbInZhciBjb252ZXJzaW9ucyA9IHJlcXVpcmUoJy4vY29udmVyc2lvbnMnKTtcbnZhciByb3V0ZSA9IHJlcXVpcmUoJy4vcm91dGUnKTtcblxudmFyIGNvbnZlcnQgPSB7fTtcblxudmFyIG1vZGVscyA9IE9iamVjdC5rZXlzKGNvbnZlcnNpb25zKTtcblxuZnVuY3Rpb24gd3JhcFJhdyhmbikge1xuXHR2YXIgd3JhcHBlZEZuID0gZnVuY3Rpb24gKGFyZ3MpIHtcblx0XHRpZiAoYXJncyA9PT0gdW5kZWZpbmVkIHx8IGFyZ3MgPT09IG51bGwpIHtcblx0XHRcdHJldHVybiBhcmdzO1xuXHRcdH1cblxuXHRcdGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuXHRcdFx0YXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZuKGFyZ3MpO1xuXHR9O1xuXG5cdC8vIHByZXNlcnZlIC5jb252ZXJzaW9uIHByb3BlcnR5IGlmIHRoZXJlIGlzIG9uZVxuXHRpZiAoJ2NvbnZlcnNpb24nIGluIGZuKSB7XG5cdFx0d3JhcHBlZEZuLmNvbnZlcnNpb24gPSBmbi5jb252ZXJzaW9uO1xuXHR9XG5cblx0cmV0dXJuIHdyYXBwZWRGbjtcbn1cblxuZnVuY3Rpb24gd3JhcFJvdW5kZWQoZm4pIHtcblx0dmFyIHdyYXBwZWRGbiA9IGZ1bmN0aW9uIChhcmdzKSB7XG5cdFx0aWYgKGFyZ3MgPT09IHVuZGVmaW5lZCB8fCBhcmdzID09PSBudWxsKSB7XG5cdFx0XHRyZXR1cm4gYXJncztcblx0XHR9XG5cblx0XHRpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcblx0XHRcdGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuXHRcdH1cblxuXHRcdHZhciByZXN1bHQgPSBmbihhcmdzKTtcblxuXHRcdC8vIHdlJ3JlIGFzc3VtaW5nIHRoZSByZXN1bHQgaXMgYW4gYXJyYXkgaGVyZS5cblx0XHQvLyBzZWUgbm90aWNlIGluIGNvbnZlcnNpb25zLmpzOyBkb24ndCB1c2UgYm94IHR5cGVzXG5cdFx0Ly8gaW4gY29udmVyc2lvbiBmdW5jdGlvbnMuXG5cdFx0aWYgKHR5cGVvZiByZXN1bHQgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRmb3IgKHZhciBsZW4gPSByZXN1bHQubGVuZ3RoLCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG5cdFx0XHRcdHJlc3VsdFtpXSA9IE1hdGgucm91bmQocmVzdWx0W2ldKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gcmVzdWx0O1xuXHR9O1xuXG5cdC8vIHByZXNlcnZlIC5jb252ZXJzaW9uIHByb3BlcnR5IGlmIHRoZXJlIGlzIG9uZVxuXHRpZiAoJ2NvbnZlcnNpb24nIGluIGZuKSB7XG5cdFx0d3JhcHBlZEZuLmNvbnZlcnNpb24gPSBmbi5jb252ZXJzaW9uO1xuXHR9XG5cblx0cmV0dXJuIHdyYXBwZWRGbjtcbn1cblxubW9kZWxzLmZvckVhY2goZnVuY3Rpb24gKGZyb21Nb2RlbCkge1xuXHRjb252ZXJ0W2Zyb21Nb2RlbF0gPSB7fTtcblxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoY29udmVydFtmcm9tTW9kZWxdLCAnY2hhbm5lbHMnLCB7dmFsdWU6IGNvbnZlcnNpb25zW2Zyb21Nb2RlbF0uY2hhbm5lbHN9KTtcblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGNvbnZlcnRbZnJvbU1vZGVsXSwgJ2xhYmVscycsIHt2YWx1ZTogY29udmVyc2lvbnNbZnJvbU1vZGVsXS5sYWJlbHN9KTtcblxuXHR2YXIgcm91dGVzID0gcm91dGUoZnJvbU1vZGVsKTtcblx0dmFyIHJvdXRlTW9kZWxzID0gT2JqZWN0LmtleXMocm91dGVzKTtcblxuXHRyb3V0ZU1vZGVscy5mb3JFYWNoKGZ1bmN0aW9uICh0b01vZGVsKSB7XG5cdFx0dmFyIGZuID0gcm91dGVzW3RvTW9kZWxdO1xuXG5cdFx0Y29udmVydFtmcm9tTW9kZWxdW3RvTW9kZWxdID0gd3JhcFJvdW5kZWQoZm4pO1xuXHRcdGNvbnZlcnRbZnJvbU1vZGVsXVt0b01vZGVsXS5yYXcgPSB3cmFwUmF3KGZuKTtcblx0fSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBjb252ZXJ0O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "conversions",
        "require",
        "route",
        "convert",
        "models",
        "Object",
        "keys",
        "wrapRaw",
        "fn",
        "wrappedFn",
        "args",
        "undefined",
        "arguments",
        "length",
        "Array",
        "prototype",
        "slice",
        "call",
        "conversion",
        "wrapRounded",
        "result",
        "len",
        "i",
        "Math",
        "round",
        "forEach",
        "fromModel",
        "defineProperty",
        "value",
        "channels",
        "labels",
        "routes",
        "routeModels",
        "toModel",
        "raw",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
      "sourcesContent": [
        "var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/conversions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/conversions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/conversions.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/conversions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
        "sourceFileName": "conversions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* MIT license */\nvar cssKeywords = require('color-name'); // NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\n\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  if (cssKeywords.hasOwnProperty(key)) {\n    reverseKeywords[cssKeywords[key]] = key;\n  }\n}\n\nvar convert = module.exports = {\n  rgb: {\n    channels: 3,\n    labels: 'rgb'\n  },\n  hsl: {\n    channels: 3,\n    labels: 'hsl'\n  },\n  hsv: {\n    channels: 3,\n    labels: 'hsv'\n  },\n  hwb: {\n    channels: 3,\n    labels: 'hwb'\n  },\n  cmyk: {\n    channels: 4,\n    labels: 'cmyk'\n  },\n  xyz: {\n    channels: 3,\n    labels: 'xyz'\n  },\n  lab: {\n    channels: 3,\n    labels: 'lab'\n  },\n  lch: {\n    channels: 3,\n    labels: 'lch'\n  },\n  hex: {\n    channels: 1,\n    labels: ['hex']\n  },\n  keyword: {\n    channels: 1,\n    labels: ['keyword']\n  },\n  ansi16: {\n    channels: 1,\n    labels: ['ansi16']\n  },\n  ansi256: {\n    channels: 1,\n    labels: ['ansi256']\n  },\n  hcg: {\n    channels: 3,\n    labels: ['h', 'c', 'g']\n  },\n  apple: {\n    channels: 3,\n    labels: ['r16', 'g16', 'b16']\n  },\n  gray: {\n    channels: 1,\n    labels: ['gray']\n  }\n}; // hide .channels and .labels properties\n\nfor (var model in convert) {\n  if (convert.hasOwnProperty(model)) {\n    if (!('channels' in convert[model])) {\n      throw new Error('missing channels property: ' + model);\n    }\n\n    if (!('labels' in convert[model])) {\n      throw new Error('missing channel labels property: ' + model);\n    }\n\n    if (convert[model].labels.length !== convert[model].channels) {\n      throw new Error('channel and label counts mismatch: ' + model);\n    }\n\n    var channels = convert[model].channels;\n    var labels = convert[model].labels;\n    delete convert[model].channels;\n    delete convert[model].labels;\n    Object.defineProperty(convert[model], 'channels', {\n      value: channels\n    });\n    Object.defineProperty(convert[model], 'labels', {\n      value: labels\n    });\n  }\n}\n\nconvert.rgb.hsl = function (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var min = Math.min(r, g, b);\n  var max = Math.max(r, g, b);\n  var delta = max - min;\n  var h;\n  var s;\n  var l;\n\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  l = (min + max) / 2;\n\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n\n  return [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n  var rdif;\n  var gdif;\n  var bdif;\n  var h;\n  var s;\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var v = Math.max(r, g, b);\n  var diff = v - Math.min(r, g, b);\n\n  var diffc = function diffc(c) {\n    return (v - c) / 6 / diff + 1 / 2;\n  };\n\n  if (diff === 0) {\n    h = s = 0;\n  } else {\n    s = diff / v;\n    rdif = diffc(r);\n    gdif = diffc(g);\n    bdif = diffc(b);\n\n    if (r === v) {\n      h = bdif - gdif;\n    } else if (g === v) {\n      h = 1 / 3 + rdif - bdif;\n    } else if (b === v) {\n      h = 2 / 3 + gdif - rdif;\n    }\n\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n  }\n\n  return [h * 360, s * 100, v * 100];\n};\n\nconvert.rgb.hwb = function (rgb) {\n  var r = rgb[0];\n  var g = rgb[1];\n  var b = rgb[2];\n  var h = convert.rgb.hsl(rgb)[0];\n  var w = 1 / 255 * Math.min(r, Math.min(g, b));\n  b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var c;\n  var m;\n  var y;\n  var k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n};\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\n\n\nfunction comparativeDistance(x, y) {\n  return Math.pow(x[0] - y[0], 2) + Math.pow(x[1] - y[1], 2) + Math.pow(x[2] - y[2], 2);\n}\n\nconvert.rgb.keyword = function (rgb) {\n  var reversed = reverseKeywords[rgb];\n\n  if (reversed) {\n    return reversed;\n  }\n\n  var currentClosestDistance = Infinity;\n  var currentClosestKeyword;\n\n  for (var keyword in cssKeywords) {\n    if (cssKeywords.hasOwnProperty(keyword)) {\n      var value = cssKeywords[keyword]; // Compute comparative distance\n\n      var distance = comparativeDistance(rgb, value); // Check if its less, if so set as closest\n\n      if (distance < currentClosestDistance) {\n        currentClosestDistance = distance;\n        currentClosestKeyword = keyword;\n      }\n    }\n  }\n\n  return currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n  return cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n  var xyz = convert.rgb.xyz(rgb);\n  var x = xyz[0];\n  var y = xyz[1];\n  var z = xyz[2];\n  var l;\n  var a;\n  var b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n  var h = hsl[0] / 360;\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n  var t1;\n  var t2;\n  var t3;\n  var rgb;\n  var val;\n\n  if (s === 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) {\n    t2 = l * (1 + s);\n  } else {\n    t2 = l + s - l * s;\n  }\n\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n\n    if (t3 < 0) {\n      t3++;\n    }\n\n    if (t3 > 1) {\n      t3--;\n    }\n\n    if (6 * t3 < 1) {\n      val = t1 + (t2 - t1) * 6 * t3;\n    } else if (2 * t3 < 1) {\n      val = t2;\n    } else if (3 * t3 < 2) {\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    } else {\n      val = t1;\n    }\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n  var h = hsl[0];\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n  var smin = s;\n  var lmin = Math.max(l, 0.01);\n  var sv;\n  var v;\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  smin *= lmin <= 1 ? lmin : 2 - lmin;\n  v = (l + s) / 2;\n  sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n  var h = hsv[0] / 60;\n  var s = hsv[1] / 100;\n  var v = hsv[2] / 100;\n  var hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h);\n  var p = 255 * v * (1 - s);\n  var q = 255 * v * (1 - s * f);\n  var t = 255 * v * (1 - s * (1 - f));\n  v *= 255;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n};\n\nconvert.hsv.hsl = function (hsv) {\n  var h = hsv[0];\n  var s = hsv[1] / 100;\n  var v = hsv[2] / 100;\n  var vmin = Math.max(v, 0.01);\n  var lmin;\n  var sl;\n  var l;\n  l = (2 - s) * v;\n  lmin = (2 - s) * vmin;\n  sl = s * vmin;\n  sl /= lmin <= 1 ? lmin : 2 - lmin;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}; // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nconvert.hwb.rgb = function (hwb) {\n  var h = hwb[0] / 360;\n  var wh = hwb[1] / 100;\n  var bl = hwb[2] / 100;\n  var ratio = wh + bl;\n  var i;\n  var v;\n  var f;\n  var n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) !== 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  var r;\n  var g;\n  var b;\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n  var c = cmyk[0] / 100;\n  var m = cmyk[1] / 100;\n  var y = cmyk[2] / 100;\n  var k = cmyk[3] / 100;\n  var r;\n  var g;\n  var b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n  var x = xyz[0] / 100;\n  var y = xyz[1] / 100;\n  var z = xyz[2] / 100;\n  var r;\n  var g;\n  var b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n  var x = xyz[0];\n  var y = xyz[1];\n  var z = xyz[2];\n  var l;\n  var a;\n  var b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n  var l = lab[0];\n  var a = lab[1];\n  var b = lab[2];\n  var x;\n  var y;\n  var z;\n  y = (l + 16) / 116;\n  x = a / 500 + y;\n  z = y - b / 200;\n  var y2 = Math.pow(y, 3);\n  var x2 = Math.pow(x, 3);\n  var z2 = Math.pow(z, 3);\n  y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n  x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n  z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n  x *= 95.047;\n  y *= 100;\n  z *= 108.883;\n  return [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n  var l = lab[0];\n  var a = lab[1];\n  var b = lab[2];\n  var hr;\n  var h;\n  var c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n  var l = lch[0];\n  var c = lch[1];\n  var h = lch[2];\n  var a;\n  var b;\n  var hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n  var r = args[0];\n  var g = args[1];\n  var b = args[2];\n  var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n  value = Math.round(value / 50);\n\n  if (value === 0) {\n    return 30;\n  }\n\n  var ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));\n\n  if (value === 2) {\n    ansi += 60;\n  }\n\n  return ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n  // optimization here; we already know the value and don't need to get\n  // it converted for us.\n  return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n  var r = args[0];\n  var g = args[1];\n  var b = args[2]; // we use the extended greyscale palette here, with the exception of\n  // black and white. normal palette only has 4 greyscale shades.\n\n  if (r === g && g === b) {\n    if (r < 8) {\n      return 16;\n    }\n\n    if (r > 248) {\n      return 231;\n    }\n\n    return Math.round((r - 8) / 247 * 24) + 232;\n  }\n\n  var ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);\n  return ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n  var color = args % 10; // handle greyscale\n\n  if (color === 0 || color === 7) {\n    if (args > 50) {\n      color += 3.5;\n    }\n\n    color = color / 10.5 * 255;\n    return [color, color, color];\n  }\n\n  var mult = (~~(args > 50) + 1) * 0.5;\n  var r = (color & 1) * mult * 255;\n  var g = (color >> 1 & 1) * mult * 255;\n  var b = (color >> 2 & 1) * mult * 255;\n  return [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n  // handle greyscale\n  if (args >= 232) {\n    var c = (args - 232) * 10 + 8;\n    return [c, c, c];\n  }\n\n  args -= 16;\n  var rem;\n  var r = Math.floor(args / 36) / 5 * 255;\n  var g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n  var b = rem % 6 / 5 * 255;\n  return [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n  var integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);\n  var string = integer.toString(16).toUpperCase();\n  return '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n  var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\n  if (!match) {\n    return [0, 0, 0];\n  }\n\n  var colorString = match[0];\n\n  if (match[0].length === 3) {\n    colorString = colorString.split('').map(function (_char) {\n      return _char + _char;\n    }).join('');\n  }\n\n  var integer = parseInt(colorString, 16);\n  var r = integer >> 16 & 0xFF;\n  var g = integer >> 8 & 0xFF;\n  var b = integer & 0xFF;\n  return [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var max = Math.max(Math.max(r, g), b);\n  var min = Math.min(Math.min(r, g), b);\n  var chroma = max - min;\n  var grayscale;\n  var hue;\n\n  if (chroma < 1) {\n    grayscale = min / (1 - chroma);\n  } else {\n    grayscale = 0;\n  }\n\n  if (chroma <= 0) {\n    hue = 0;\n  } else if (max === r) {\n    hue = (g - b) / chroma % 6;\n  } else if (max === g) {\n    hue = 2 + (b - r) / chroma;\n  } else {\n    hue = 4 + (r - g) / chroma + 4;\n  }\n\n  hue /= 6;\n  hue %= 1;\n  return [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n  var c = 1;\n  var f = 0;\n\n  if (l < 0.5) {\n    c = 2.0 * s * l;\n  } else {\n    c = 2.0 * s * (1.0 - l);\n  }\n\n  if (c < 1.0) {\n    f = (l - 0.5 * c) / (1.0 - c);\n  }\n\n  return [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n  var s = hsv[1] / 100;\n  var v = hsv[2] / 100;\n  var c = s * v;\n  var f = 0;\n\n  if (c < 1.0) {\n    f = (v - c) / (1 - c);\n  }\n\n  return [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n  var h = hcg[0] / 360;\n  var c = hcg[1] / 100;\n  var g = hcg[2] / 100;\n\n  if (c === 0.0) {\n    return [g * 255, g * 255, g * 255];\n  }\n\n  var pure = [0, 0, 0];\n  var hi = h % 1 * 6;\n  var v = hi % 1;\n  var w = 1 - v;\n  var mg = 0;\n\n  switch (Math.floor(hi)) {\n    case 0:\n      pure[0] = 1;\n      pure[1] = v;\n      pure[2] = 0;\n      break;\n\n    case 1:\n      pure[0] = w;\n      pure[1] = 1;\n      pure[2] = 0;\n      break;\n\n    case 2:\n      pure[0] = 0;\n      pure[1] = 1;\n      pure[2] = v;\n      break;\n\n    case 3:\n      pure[0] = 0;\n      pure[1] = w;\n      pure[2] = 1;\n      break;\n\n    case 4:\n      pure[0] = v;\n      pure[1] = 0;\n      pure[2] = 1;\n      break;\n\n    default:\n      pure[0] = 1;\n      pure[1] = 0;\n      pure[2] = w;\n  }\n\n  mg = (1.0 - c) * g;\n  return [(c * pure[0] + mg) * 255, (c * pure[1] + mg) * 255, (c * pure[2] + mg) * 255];\n};\n\nconvert.hcg.hsv = function (hcg) {\n  var c = hcg[1] / 100;\n  var g = hcg[2] / 100;\n  var v = c + g * (1.0 - c);\n  var f = 0;\n\n  if (v > 0.0) {\n    f = c / v;\n  }\n\n  return [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n  var c = hcg[1] / 100;\n  var g = hcg[2] / 100;\n  var l = g * (1.0 - c) + 0.5 * c;\n  var s = 0;\n\n  if (l > 0.0 && l < 0.5) {\n    s = c / (2 * l);\n  } else if (l >= 0.5 && l < 1.0) {\n    s = c / (2 * (1 - l));\n  }\n\n  return [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n  var c = hcg[1] / 100;\n  var g = hcg[2] / 100;\n  var v = c + g * (1.0 - c);\n  return [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n  var w = hwb[1] / 100;\n  var b = hwb[2] / 100;\n  var v = 1 - b;\n  var c = v - w;\n  var g = 0;\n\n  if (c < 1) {\n    g = (v - c) / (1 - c);\n  }\n\n  return [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n  return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n  return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n  return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n  return [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n  return [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n  return [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n  return [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n  var val = Math.round(gray[0] / 100 * 255) & 0xFF;\n  var integer = (val << 16) + (val << 8) + val;\n  var string = integer.toString(16).toUpperCase();\n  return '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n  var val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n  return [val / 255 * 100];\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "conversions.js"
      ],
      "names": [
        "cssKeywords",
        "require",
        "reverseKeywords",
        "key",
        "hasOwnProperty",
        "convert",
        "module",
        "exports",
        "rgb",
        "channels",
        "labels",
        "hsl",
        "hsv",
        "hwb",
        "cmyk",
        "xyz",
        "lab",
        "lch",
        "hex",
        "keyword",
        "ansi16",
        "ansi256",
        "hcg",
        "apple",
        "gray",
        "model",
        "Error",
        "length",
        "Object",
        "defineProperty",
        "value",
        "r",
        "g",
        "b",
        "min",
        "Math",
        "max",
        "delta",
        "h",
        "s",
        "l",
        "rdif",
        "gdif",
        "bdif",
        "v",
        "diff",
        "diffc",
        "c",
        "w",
        "m",
        "y",
        "k",
        "comparativeDistance",
        "x",
        "pow",
        "reversed",
        "currentClosestDistance",
        "Infinity",
        "currentClosestKeyword",
        "distance",
        "z",
        "a",
        "t1",
        "t2",
        "t3",
        "val",
        "i",
        "smin",
        "lmin",
        "sv",
        "hi",
        "floor",
        "f",
        "p",
        "q",
        "t",
        "vmin",
        "sl",
        "wh",
        "bl",
        "ratio",
        "n",
        "y2",
        "x2",
        "z2",
        "hr",
        "atan2",
        "PI",
        "sqrt",
        "cos",
        "sin",
        "args",
        "arguments",
        "round",
        "ansi",
        "color",
        "mult",
        "rem",
        "integer",
        "string",
        "toString",
        "toUpperCase",
        "substring",
        "match",
        "colorString",
        "split",
        "map",
        "char",
        "join",
        "parseInt",
        "chroma",
        "grayscale",
        "hue",
        "pure",
        "mg"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
      "sourcesContent": [
        "/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name",
      "sourcesContent": [
        "'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1500156807000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/route.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
        "sourceFileName": "route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar conversions = require('./conversions');\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\n\nfunction buildGraph() {\n  var graph = {}; // https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\n  var models = Object.keys(conversions);\n\n  for (var len = models.length, i = 0; i < len; i++) {\n    graph[models[i]] = {\n      // http://jsperf.com/1-vs-infinity\n      // micro-opt, but this is simple.\n      distance: -1,\n      parent: null\n    };\n  }\n\n  return graph;\n} // https://en.wikipedia.org/wiki/Breadth-first_search\n\n\nfunction deriveBFS(fromModel) {\n  var graph = buildGraph();\n  var queue = [fromModel]; // unshift -> queue -> pop\n\n  graph[fromModel].distance = 0;\n\n  while (queue.length) {\n    var current = queue.pop();\n    var adjacents = Object.keys(conversions[current]);\n\n    for (var len = adjacents.length, i = 0; i < len; i++) {\n      var adjacent = adjacents[i];\n      var node = graph[adjacent];\n\n      if (node.distance === -1) {\n        node.distance = graph[current].distance + 1;\n        node.parent = current;\n        queue.unshift(adjacent);\n      }\n    }\n  }\n\n  return graph;\n}\n\nfunction link(from, to) {\n  return function (args) {\n    return to(from(args));\n  };\n}\n\nfunction wrapConversion(toModel, graph) {\n  var path = [graph[toModel].parent, toModel];\n  var fn = conversions[graph[toModel].parent][toModel];\n  var cur = graph[toModel].parent;\n\n  while (graph[cur].parent) {\n    path.unshift(graph[cur].parent);\n    fn = link(conversions[graph[cur].parent][cur], fn);\n    cur = graph[cur].parent;\n  }\n\n  fn.conversion = path;\n  return fn;\n}\n\nmodule.exports = function (fromModel) {\n  var graph = deriveBFS(fromModel);\n  var conversion = {};\n  var models = Object.keys(graph);\n\n  for (var len = models.length, i = 0; i < len; i++) {\n    var toModel = models[i];\n    var node = graph[toModel];\n\n    if (node.parent === null) {\n      // no possible conversion, or this node is the source model.\n      continue;\n    }\n\n    conversion[toModel] = wrapConversion(toModel, graph);\n  }\n\n  return conversion;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlLmpzIl0sIm5hbWVzIjpbImNvbnZlcnNpb25zIiwicmVxdWlyZSIsImJ1aWxkR3JhcGgiLCJncmFwaCIsIm1vZGVscyIsIk9iamVjdCIsImtleXMiLCJsZW4iLCJsZW5ndGgiLCJpIiwiZGlzdGFuY2UiLCJwYXJlbnQiLCJkZXJpdmVCRlMiLCJmcm9tTW9kZWwiLCJxdWV1ZSIsImN1cnJlbnQiLCJwb3AiLCJhZGphY2VudHMiLCJhZGphY2VudCIsIm5vZGUiLCJ1bnNoaWZ0IiwibGluayIsImZyb20iLCJ0byIsImFyZ3MiLCJ3cmFwQ29udmVyc2lvbiIsInRvTW9kZWwiLCJwYXRoIiwiZm4iLCJjdXIiLCJjb252ZXJzaW9uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxXQUFXLEdBQUdDLE9BQU8sQ0FBQyxlQUFELENBQXpCO0FBRUE7Ozs7Ozs7Ozs7OztBQVdBLFNBQVNDLFVBQVQsR0FBc0I7QUFDckIsTUFBSUMsS0FBSyxHQUFHLEVBQVosQ0FEcUIsQ0FFckI7O0FBQ0EsTUFBSUMsTUFBTSxHQUFHQyxNQUFNLENBQUNDLElBQVAsQ0FBWU4sV0FBWixDQUFiOztBQUVBLE9BQUssSUFBSU8sR0FBRyxHQUFHSCxNQUFNLENBQUNJLE1BQWpCLEVBQXlCQyxDQUFDLEdBQUcsQ0FBbEMsRUFBcUNBLENBQUMsR0FBR0YsR0FBekMsRUFBOENFLENBQUMsRUFBL0MsRUFBbUQ7QUFDbEROLElBQUFBLEtBQUssQ0FBQ0MsTUFBTSxDQUFDSyxDQUFELENBQVAsQ0FBTCxHQUFtQjtBQUNsQjtBQUNBO0FBQ0FDLE1BQUFBLFFBQVEsRUFBRSxDQUFDLENBSE87QUFJbEJDLE1BQUFBLE1BQU0sRUFBRTtBQUpVLEtBQW5CO0FBTUE7O0FBRUQsU0FBT1IsS0FBUDtBQUNBLEMsQ0FFRDs7O0FBQ0EsU0FBU1MsU0FBVCxDQUFtQkMsU0FBbkIsRUFBOEI7QUFDN0IsTUFBSVYsS0FBSyxHQUFHRCxVQUFVLEVBQXRCO0FBQ0EsTUFBSVks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QUFPLEdBQUd0QixNQUFNLENBQUNLLENBQUQsQ0FBcEI7QUFDQSxRQUFJVSxJQUFJLEdBQUdoQixLQUFLLENBQUN1QixPQUFELENBQWhCOztBQUVBLFFBQUlQLElBQUksQ0FBQ1IsTUFBTCxLQUFnQixJQUFwQixFQUEwQjtBQUN6QjtBQUNBO0FBQ0E7O0FBRURtQixJQUFBQSxVQUFVLENBQUNKLE9BQUQsQ0FBVixHQUFzQkQsY0FBYyxDQUFDQyxPQUFELEVBQVV2QixLQUFWLENBQXBDO0FBQ0E7O0FBRUQsU0FBTzJCLFVBQVA7QUFDQSxDQWxCRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvd2FuZ3poaWNodW4vRGVza3RvcC9zdHVkeS90ZXN0LWNsaS9ub2RlX21vZHVsZXMvY29sb3ItY29udmVydCIsInNvdXJjZXNDb250ZW50IjpbInZhciBjb252ZXJzaW9ucyA9IHJlcXVpcmUoJy4vY29udmVyc2lvbnMnKTtcblxuLypcblx0dGhpcyBmdW5jdGlvbiByb3V0ZXMgYSBtb2RlbCB0byBhbGwgb3RoZXIgbW9kZWxzLlxuXG5cdGFsbCBmdW5jdGlvbnMgdGhhdCBhcmUgcm91dGVkIGhhdmUgYSBwcm9wZXJ0eSBgLmNvbnZlcnNpb25gIGF0dGFjaGVkXG5cdHRvIHRoZSByZXR1cm5lZCBzeW50aGV0aWMgZnVuY3Rpb24uIFRoaXMgcHJvcGVydHkgaXMgYW4gYXJyYXlcblx0b2Ygc3RyaW5ncywgZWFjaCB3aXRoIHRoZSBzdGVwcyBpbiBiZXR3ZWVuIHRoZSAnZnJvbScgYW5kICd0bydcblx0Y29sb3IgbW9kZWxzIChpbmNsdXNpdmUpLlxuXG5cdGNvbnZlcnNpb25zIHRoYXQgYXJlIG5vdCBwb3NzaWJsZSBzaW1wbHkgYXJlIG5vdCBpbmNsdWRlZC5cbiovXG5cbmZ1bmN0aW9uIGJ1aWxkR3JhcGgoKSB7XG5cdHZhciBncmFwaCA9IHt9O1xuXHQvLyBodHRwczovL2pzcGVyZi5jb20vb2JqZWN0LWtleXMtdnMtZm9yLWluLXdpdGgtY2xvc3VyZS8zXG5cdHZhciBtb2RlbHMgPSBPYmplY3Qua2V5cyhjb252ZXJzaW9ucyk7XG5cblx0Zm9yICh2YXIgbGVuID0gbW9kZWxzLmxlbmd0aCwgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuXHRcdGdyYXBoW21vZGVsc1tpXV0gPSB7XG5cdFx0XHQvLyBodHRwOi8vanNwZXJmLmNvbS8xLXZzLWluZmluaXR5XG5cdFx0XHQvLyBtaWNyby1vcHQsIGJ1dCB0aGlzIGlzIHNpbXBsZS5cblx0XHRcdGRpc3RhbmNlOiAtMSxcblx0XHRcdHBhcmVudDogbnVsbFxuXHRcdH07XG5cdH1cblxuXHRyZXR1cm4gZ3JhcGg7XG59XG5cbi8vIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0JyZWFkdGgtZmlyc3Rfc2VhcmNoXG5mdW5jdGlvbiBkZXJpdmVCRlMoZnJvbU1vZGVsKSB7XG5cdHZhciBncmFwaCA9IGJ1aWxkR3JhcGgoKTtcblx0dmFyIHF1ZXVlID0gW2Zyb21Nb2RlbF07IC8vIHVuc2hpZnQgLT4gcXVldWUgLT4gcG9wXG5cblx0Z3JhcGhbZnJvbU1vZGVsXS5kaXN0YW5jZSA9IDA7XG5cblx0d2hpbGUgKHF1ZXVlLmxlbmd0aCkge1xuXHRcdHZhciBjdXJyZW50ID0gcXVldWUucG9wKCk7XG5cdFx0dmFyIGFkamFjZW50cyA9IE9iamVjdC5rZXlzKGNvbnZlcnNpb25zW2N1cnJlbnRdKTtcblxuXHRcdGZvciAodmFyIGxlbiA9IGFkamFjZW50cy5sZW5ndGgsIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0XHRcdHZhciBhZGphY2VudCA9IGFkamFjZW50c1tpXTtcblx0XHRcdHZhciBub2RlID0gZ3JhcGhbYWRqYWNlbnRdO1xuXG5cdFx0XHRpZiAobm9kZS5kaXN0YW5jZSA9PT0gLTEpIHtcblx0XHRcdFx0bm9kZS5kaXN0YW5jZSA9IGdyYXBoW2N1cnJlbnRdLmRpc3RhbmNlICsgMTtcblx0XHRcdFx0bm9kZS5wYXJlbnQgPSBjdXJyZW50O1xuXHRcdFx0XHRxdWV1ZS51bnNoaWZ0KGFkamFjZW50KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZ3JhcGg7XG59XG5cbmZ1bmN0aW9uIGxpbmsoZnJvbSwgdG8pIHtcblx0cmV0dXJuIGZ1bmN0aW9uIChhcmdzKSB7XG5cdFx0cmV0dXJuIHRvKGZyb20oYXJncykpO1xuXHR9O1xufVxuXG5mdW5jdGlvbiB3cmFwQ29udmVyc2lvbih0b01vZGVsLCBncmFwaCkge1xuXHR2YXIgcGF0aCA9IFtncmFwaFt0b01vZGVsXS5wYXJlbnQsIHRvTW9kZWxdO1xuXHR2YXIgZm4gPSBjb252ZXJzaW9uc1tncmFwaFt0b01vZGVsXS5wYXJlbnRdW3RvTW9kZWxdO1xuXG5cdHZhciBjdXIgPSBncmFwaFt0b01vZGVsXS5wYXJlbnQ7XG5cdHdoaWxlIChncmFwaFtjdXJdLnBhcmVudCkge1xuXHRcdHBhdGgudW5zaGlmdChncmFwaFtjdXJdLnBhcmVudCk7XG5cdFx0Zm4gPSBsaW5rKGNvbnZlcnNpb25zW2dyYXBoW2N1cl0ucGFyZW50XVtjdXJdLCBmbik7XG5cdFx0Y3VyID0gZ3JhcGhbY3VyXS5wYXJlbnQ7XG5cdH1cblxuXHRmbi5jb252ZXJzaW9uID0gcGF0aDtcblx0cmV0dXJuIGZuO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmcm9tTW9kZWwpIHtcblx0dmFyIGdyYXBoID0gZGVyaXZlQkZTKGZyb21Nb2RlbCk7XG5cdHZhciBjb252ZXJzaW9uID0ge307XG5cblx0dmFyIG1vZGVscyA9IE9iamVjdC5rZXlzKGdyYXBoKTtcblx0Zm9yICh2YXIgbGVuID0gbW9kZWxzLmxlbmd0aCwgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuXHRcdHZhciB0b01vZGVsID0gbW9kZWxzW2ldO1xuXHRcdHZhciBub2RlID0gZ3JhcGhbdG9Nb2RlbF07XG5cblx0XHRpZiAobm9kZS5wYXJlbnQgPT09IG51bGwpIHtcblx0XHRcdC8vIG5vIHBvc3NpYmxlIGNvbnZlcnNpb24sIG9yIHRoaXMgbm9kZSBpcyB0aGUgc291cmNlIG1vZGVsLlxuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0Y29udmVyc2lvblt0b01vZGVsXSA9IHdyYXBDb252ZXJzaW9uKHRvTW9kZWwsIGdyYXBoKTtcblx0fVxuXG5cdHJldHVybiBjb252ZXJzaW9uO1xufTtcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "route.js"
      ],
      "names": [
        "conversions",
        "require",
        "buildGraph",
        "graph",
        "models",
        "Object",
        "keys",
        "len",
        "length",
        "i",
        "distance",
        "parent",
        "deriveBFS",
        "fromModel",
        "queue",
        "current",
        "pop",
        "adjacents",
        "adjacent",
        "node",
        "unshift",
        "link",
        "from",
        "to",
        "args",
        "wrapConversion",
        "toModel",
        "path",
        "fn",
        "cur",
        "conversion",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
      "sourcesContent": [
        "var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/templates.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/templates.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/templates.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/templates.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk",
        "sourceFileName": "templates.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nvar STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nvar STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nvar ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\nvar ESCAPES = new Map([['n', '\\n'], ['r', '\\r'], ['t', '\\t'], ['b', '\\b'], ['f', '\\f'], ['v', '\\v'], ['0', '\\0'], ['\\\\', '\\\\'], ['e', \"\\x1B\"], ['a', \"\\x07\"]]);\n\nfunction unescape(c) {\n  if (c[0] === 'u' && c.length === 5 || c[0] === 'x' && c.length === 3) {\n    return String.fromCharCode(parseInt(c.slice(1), 16));\n  }\n\n  return ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n  var results = [];\n  var chunks = args.trim().split(/\\s*,\\s*/g);\n  var matches;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = chunks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var chunk = _step.value;\n\n      if (!isNaN(chunk)) {\n        results.push(Number(chunk));\n      } else if (matches = chunk.match(STRING_REGEX)) {\n        results.push(matches[2].replace(ESCAPE_REGEX, function (m, escape, chr) {\n          return escape ? unescape(escape) : chr;\n        }));\n      } else {\n        throw new Error(\"Invalid Chalk template style argument: \".concat(chunk, \" (in style '\").concat(name, \"')\"));\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction parseStyle(style) {\n  STYLE_REGEX.lastIndex = 0;\n  var results = [];\n  var matches;\n\n  while ((matches = STYLE_REGEX.exec(style)) !== null) {\n    var name = matches[1];\n\n    if (matches[2]) {\n      var args = parseArguments(name, matches[2]);\n      results.push([name].concat(args));\n    } else {\n      results.push([name]);\n    }\n  }\n\n  return results;\n}\n\nfunction buildStyle(chalk, styles) {\n  var enabled = {};\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = styles[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var layer = _step2.value;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = layer.styles[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var style = _step3.value;\n          enabled[style[0]] = layer.inverse ? null : style.slice(1);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n        _iterator2[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  var current = chalk;\n\n  for (var _i = 0, _Object$keys = Object.keys(enabled); _i < _Object$keys.length; _i++) {\n    var styleName = _Object$keys[_i];\n\n    if (Array.isArray(enabled[styleName])) {\n      if (!(styleName in current)) {\n        throw new Error(\"Unknown Chalk style: \".concat(styleName));\n      }\n\n      if (enabled[styleName].length > 0) {\n        current = current[styleName].apply(current, enabled[styleName]);\n      } else {\n        current = current[styleName];\n      }\n    }\n  }\n\n  return current;\n}\n\nmodule.exports = function (chalk, tmp) {\n  var styles = [];\n  var chunks = [];\n  var chunk = []; // eslint-disable-next-line max-params\n\n  tmp.replace(TEMPLATE_REGEX, function (m, escapeChar, inverse, style, close, chr) {\n    if (escapeChar) {\n      chunk.push(unescape(escapeChar));\n    } else if (style) {\n      var str = chunk.join('');\n      chunk = [];\n      chunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n      styles.push({\n        inverse: inverse,\n        styles: parseStyle(style)\n      });\n    } else if (close) {\n      if (styles.length === 0) {\n        throw new Error('Found extraneous } in Chalk template literal');\n      }\n\n      chunks.push(buildStyle(chalk, styles)(chunk.join('')));\n      chunk = [];\n      styles.pop();\n    } else {\n      chunk.push(chr);\n    }\n  });\n  chunks.push(chunk.join(''));\n\n  if (styles.length > 0) {\n    var errMsg = \"Chalk template literal is missing \".concat(styles.length, \" closing bracket\").concat(styles.length === 1 ? '' : 's', \" (`}`)\");\n    throw new Error(errMsg);\n  }\n\n  return chunks.join('');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "templates.js"
      ],
      "names": [
        "TEMPLATE_REGEX",
        "STYLE_REGEX",
        "STRING_REGEX",
        "ESCAPE_REGEX",
        "ESCAPES",
        "Map",
        "unescape",
        "c",
        "length",
        "String",
        "fromCharCode",
        "parseInt",
        "slice",
        "get",
        "parseArguments",
        "name",
        "args",
        "results",
        "chunks",
        "trim",
        "split",
        "matches",
        "chunk",
        "isNaN",
        "push",
        "Number",
        "match",
        "replace",
        "m",
        "escape",
        "chr",
        "Error",
        "parseStyle",
        "style",
        "lastIndex",
        "exec",
        "concat",
        "buildStyle",
        "chalk",
        "styles",
        "enabled",
        "layer",
        "inverse",
        "current",
        "Object",
        "keys",
        "styleName",
        "Array",
        "isArray",
        "apply",
        "module",
        "exports",
        "tmp",
        "escapeChar",
        "close",
        "str",
        "join",
        "pop",
        "errMsg"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk",
      "sourcesContent": [
        "'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "var path = require('path');\n\nvar minimist = require('minimist');\n\nvar wordwrap = require('wordwrap');\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n        require('optimist')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n        require('optimist').argv\n    to get a parsed version of process.argv.\n*/\n\n\nvar inst = Argv(process.argv.slice(2));\nObject.keys(inst).forEach(function (key) {\n  Argv[key] = typeof inst[key] == 'function' ? inst[key].bind(inst) : inst[key];\n});\nvar exports = module.exports = Argv;\n\nfunction Argv(processArgs, cwd) {\n  var self = {};\n  if (!cwd) cwd = process.cwd();\n  self.$0 = process.argv.slice(0, 2).map(function (x) {\n    var b = rebase(cwd, x);\n    return x.match(/^\\//) && b.length < x.length ? b : x;\n  }).join(' ');\n\n  if (process.env._ != undefined && process.argv[1] == process.env._) {\n    self.$0 = process.env._.replace(path.dirname(process.execPath) + '/', '');\n  }\n\n  var options = {\n    boolean: [],\n    string: [],\n    alias: {},\n    default: []\n  };\n\n  self.boolean = function (bools) {\n    options.boolean.push.apply(options.boolean, [].concat(bools));\n    return self;\n  };\n\n  self.string = function (strings) {\n    options.string.push.apply(options.string, [].concat(strings));\n    return self;\n  };\n\n  self.default = function (key, value) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.default(k, key[k]);\n      });\n    } else {\n      options.default[key] = value;\n    }\n\n    return self;\n  };\n\n  self.alias = function (x, y) {\n    if (typeof x === 'object') {\n      Object.keys(x).forEach(function (key) {\n        self.alias(key, x[key]);\n      });\n    } else {\n      options.alias[x] = (options.alias[x] || []).concat(y);\n    }\n\n    return self;\n  };\n\n  var demanded = {};\n\n  self.demand = function (keys) {\n    if (typeof keys == 'number') {\n      if (!demanded._) demanded._ = 0;\n      demanded._ += keys;\n    } else if (Array.isArray(keys)) {\n      keys.forEach(function (key) {\n        self.demand(key);\n      });\n    } else {\n      demanded[keys] = true;\n    }\n\n    return self;\n  };\n\n  var usage;\n\n  self.usage = function (msg, opts) {\n    if (!opts && typeof msg === 'object') {\n      opts = msg;\n      msg = null;\n    }\n\n    usage = msg;\n    if (opts) self.options(opts);\n    return self;\n  };\n\n  function fail(msg) {\n    self.showHelp();\n    if (msg) console.error(msg);\n    process.exit(1);\n  }\n\n  var checks = [];\n\n  self.check = function (f) {\n    checks.push(f);\n    return self;\n  };\n\n  var descriptions = {};\n\n  self.describe = function (key, desc) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.describe(k, key[k]);\n      });\n    } else {\n      descriptions[key] = desc;\n    }\n\n    return self;\n  };\n\n  self.parse = function (args) {\n    return parseArgs(args);\n  };\n\n  self.option = self.options = function (key, opt) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.options(k, key[k]);\n      });\n    } else {\n      if (opt.alias) self.alias(key, opt.alias);\n      if (opt.demand) self.demand(key);\n\n      if (typeof opt.default !== 'undefined') {\n        self.default(key, opt.default);\n      }\n\n      if (opt.boolean || opt.type === 'boolean') {\n        self.boolean(key);\n      }\n\n      if (opt.string || opt.type === 'string') {\n        self.string(key);\n      }\n\n      var desc = opt.describe || opt.description || opt.desc;\n\n      if (desc) {\n        self.describe(key, desc);\n      }\n    }\n\n    return self;\n  };\n\n  var wrap = null;\n\n  self.wrap = function (cols) {\n    wrap = cols;\n    return self;\n  };\n\n  self.showHelp = function (fn) {\n    if (!fn) fn = console.error;\n    fn(self.help());\n  };\n\n  self.help = function () {\n    var keys = Object.keys(Object.keys(descriptions).concat(Object.keys(demanded)).concat(Object.keys(options.default)).reduce(function (acc, key) {\n      if (key !== '_') acc[key] = true;\n      return acc;\n    }, {}));\n    var help = keys.length ? ['Options:'] : [];\n\n    if (usage) {\n      help.unshift(usage.replace(/\\$0/g, self.$0), '');\n    }\n\n    var switches = keys.reduce(function (acc, key) {\n      acc[key] = [key].concat(options.alias[key] || []).map(function (sw) {\n        return (sw.length > 1 ? '--' : '-') + sw;\n      }).join(', ');\n      return acc;\n    }, {});\n    var switchlen = longest(Object.keys(switches).map(function (s) {\n      return switches[s] || '';\n    }));\n    var desclen = longest(Object.keys(descriptions).map(function (d) {\n      return descriptions[d] || '';\n    }));\n    keys.forEach(function (key) {\n      var kswitch = switches[key];\n      var desc = descriptions[key] || '';\n\n      if (wrap) {\n        desc = wordwrap(switchlen + 4, wrap)(desc).slice(switchlen + 4);\n      }\n\n      var spadding = new Array(Math.max(switchlen - kswitch.length + 3, 0)).join(' ');\n      var dpadding = new Array(Math.max(desclen - desc.length + 1, 0)).join(' ');\n      var type = null;\n      if (options.boolean[key]) type = '[boolean]';\n      if (options.string[key]) type = '[string]';\n\n      if (!wrap && dpadding.length > 0) {\n        desc += dpadding;\n      }\n\n      var prelude = '  ' + kswitch + spadding;\n      var extra = [type, demanded[key] ? '[required]' : null, options.default[key] !== undefined ? '[default: ' + JSON.stringify(options.default[key]) + ']' : null].filter(Boolean).join('  ');\n      var body = [desc, extra].filter(Boolean).join('  ');\n\n      if (wrap) {\n        var dlines = desc.split('\\n');\n        var dlen = dlines.slice(-1)[0].length + (dlines.length === 1 ? prelude.length : 0);\n        body = desc + (dlen + extra.length > wrap - 2 ? '\\n' + new Array(wrap - extra.length + 1).join(' ') + extra : new Array(wrap - extra.length - dlen + 1).join(' ') + extra);\n      }\n\n      help.push(prelude + body);\n    });\n    help.push('');\n    return help.join('\\n');\n  };\n\n  Object.defineProperty(self, 'argv', {\n    get: function () {\n      return parseArgs(processArgs);\n    },\n    enumerable: true\n  });\n\n  function parseArgs(args) {\n    var argv = minimist(args, options);\n    argv.$0 = self.$0;\n\n    if (demanded._ && argv._.length < demanded._) {\n      fail('Not enough non-option arguments: got ' + argv._.length + ', need at least ' + demanded._);\n    }\n\n    var missing = [];\n    Object.keys(demanded).forEach(function (key) {\n      if (!argv[key]) missing.push(key);\n    });\n\n    if (missing.length) {\n      fail('Missing required arguments: ' + missing.join(', '));\n    }\n\n    checks.forEach(function (f) {\n      try {\n        if (f(argv) === false) {\n          fail('Argument check failed: ' + f.toString());\n        }\n      } catch (err) {\n        fail(err);\n      }\n    });\n    return argv;\n  }\n\n  function longest(xs) {\n    return Math.max.apply(null, xs.map(function (x) {\n      return x.length;\n    }));\n  }\n\n  return self;\n}\n\n; // rebase an absolute path to a relative one with respect to a base directory\n// exported for tests\n\nexports.rebase = rebase;\n\nfunction rebase(base, dir) {\n  var ds = path.normalize(dir).split('/').slice(1);\n  var bs = path.normalize(base).split('/').slice(1);\n\n  for (var i = 0; ds[i] && ds[i] == bs[i]; i++);\n\n  ds.splice(0, i);\n  bs.splice(0, i);\n  var p = path.normalize(bs.map(function () {\n    return '..';\n  }).concat(ds).join('/')).replace(/\\/$/, '').replace(/^$/, '.');\n  return p.match(/^[.\\/]/) ? p : './' + p;\n}\n\n;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "path",
        "require",
        "minimist",
        "wordwrap",
        "inst",
        "Argv",
        "process",
        "argv",
        "slice",
        "Object",
        "keys",
        "forEach",
        "key",
        "bind",
        "exports",
        "module",
        "processArgs",
        "cwd",
        "self",
        "$0",
        "map",
        "x",
        "b",
        "rebase",
        "match",
        "length",
        "join",
        "env",
        "_",
        "undefined",
        "replace",
        "dirname",
        "execPath",
        "options",
        "boolean",
        "string",
        "alias",
        "default",
        "bools",
        "push",
        "apply",
        "concat",
        "strings",
        "value",
        "k",
        "y",
        "demanded",
        "demand",
        "Array",
        "isArray",
        "usage",
        "msg",
        "opts",
        "fail",
        "showHelp",
        "console",
        "error",
        "exit",
        "checks",
        "check",
        "f",
        "descriptions",
        "describe",
        "desc",
        "parse",
        "args",
        "parseArgs",
        "option",
        "opt",
        "type",
        "description",
        "wrap",
        "cols",
        "fn",
        "help",
        "reduce",
        "acc",
        "unshift",
        "switches",
        "sw",
        "switchlen",
        "longest",
        "s",
        "desclen",
        "d",
        "kswitch",
        "spadding",
        "Math",
        "max",
        "dpadding",
        "prelude",
        "extra",
        "JSON",
        "stringify",
        "filter",
        "Boolean",
        "body",
        "dlines",
        "split",
        "dlen",
        "defineProperty",
        "get",
        "enumerable",
        "missing",
        "toString",
        "err",
        "xs",
        "base",
        "dir",
        "ds",
        "normalize",
        "bs",
        "i",
        "splice",
        "p"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/optimist",
      "sourcesContent": [
        "var path = require('path');\nvar minimist = require('minimist');\nvar wordwrap = require('wordwrap');\n\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n        require('optimist')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n        require('optimist').argv\n    to get a parsed version of process.argv.\n*/\n\nvar inst = Argv(process.argv.slice(2));\nObject.keys(inst).forEach(function (key) {\n    Argv[key] = typeof inst[key] == 'function'\n        ? inst[key].bind(inst)\n        : inst[key];\n});\n\nvar exports = module.exports = Argv;\nfunction Argv (processArgs, cwd) {\n    var self = {};\n    if (!cwd) cwd = process.cwd();\n    \n    self.$0 = process.argv\n        .slice(0,2)\n        .map(function (x) {\n            var b = rebase(cwd, x);\n            return x.match(/^\\//) && b.length < x.length\n                ? b : x\n        })\n        .join(' ')\n    ;\n    \n    if (process.env._ != undefined && process.argv[1] == process.env._) {\n        self.$0 = process.env._.replace(\n            path.dirname(process.execPath) + '/', ''\n        );\n    }\n    \n    var options = {\n        boolean: [],\n        string: [],\n        alias: {},\n        default: []\n    };\n    \n    self.boolean = function (bools) {\n        options.boolean.push.apply(options.boolean, [].concat(bools));\n        return self;\n    };\n    \n    self.string = function (strings) {\n        options.string.push.apply(options.string, [].concat(strings));\n        return self;\n    };\n    \n    self.default = function (key, value) {\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(function (k) {\n                self.default(k, key[k]);\n            });\n        }\n        else {\n            options.default[key] = value;\n        }\n        return self;\n    };\n    \n    self.alias = function (x, y) {\n        if (typeof x === 'object') {\n            Object.keys(x).forEach(function (key) {\n                self.alias(key, x[key]);\n            });\n        }\n        else {\n            options.alias[x] = (options.alias[x] || []).concat(y);\n        }\n        return self;\n    };\n    \n    var demanded = {};\n    self.demand = function (keys) {\n        if (typeof keys == 'number') {\n            if (!demanded._) demanded._ = 0;\n            demanded._ += keys;\n        }\n        else if (Array.isArray(keys)) {\n            keys.forEach(function (key) {\n                self.demand(key);\n            });\n        }\n        else {\n            demanded[keys] = true;\n        }\n        \n        return self;\n    };\n    \n    var usage;\n    self.usage = function (msg, opts) {\n        if (!opts && typeof msg === 'object') {\n            opts = msg;\n            msg = null;\n        }\n        \n        usage = msg;\n        \n        if (opts) self.options(opts);\n        \n        return self;\n    };\n    \n    function fail (msg) {\n        self.showHelp();\n        if (msg) console.error(msg);\n        process.exit(1);\n    }\n    \n    var checks = [];\n    self.check = function (f) {\n        checks.push(f);\n        return self;\n    };\n    \n    var descriptions = {};\n    self.describe = function (key, desc) {\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(function (k) {\n                self.describe(k, key[k]);\n            });\n        }\n        else {\n            descriptions[key] = desc;\n        }\n        return self;\n    };\n    \n    self.parse = function (args) {\n        return parseArgs(args);\n    };\n    \n    self.option = self.options = function (key, opt) {\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(function (k) {\n                self.options(k, key[k]);\n            });\n        }\n        else {\n            if (opt.alias) self.alias(key, opt.alias);\n            if (opt.demand) self.demand(key);\n            if (typeof opt.default !== 'undefined') {\n                self.default(key, opt.default);\n            }\n            \n            if (opt.boolean || opt.type === 'boolean') {\n                self.boolean(key);\n            }\n            if (opt.string || opt.type === 'string') {\n                self.string(key);\n            }\n            \n            var desc = opt.describe || opt.description || opt.desc;\n            if (desc) {\n                self.describe(key, desc);\n            }\n        }\n        \n        return self;\n    };\n    \n    var wrap = null;\n    self.wrap = function (cols) {\n        wrap = cols;\n        return self;\n    };\n    \n    self.showHelp = function (fn) {\n        if (!fn) fn = console.error;\n        fn(self.help());\n    };\n    \n    self.help = function () {\n        var keys = Object.keys(\n            Object.keys(descriptions)\n            .concat(Object.keys(demanded))\n            .concat(Object.keys(options.default))\n            .reduce(function (acc, key) {\n                if (key !== '_') acc[key] = true;\n                return acc;\n            }, {})\n        );\n        \n        var help = keys.length ? [ 'Options:' ] : [];\n        \n        if (usage) {\n            help.unshift(usage.replace(/\\$0/g, self.$0), '');\n        }\n        \n        var switches = keys.reduce(function (acc, key) {\n            acc[key] = [ key ].concat(options.alias[key] || [])\n                .map(function (sw) {\n                    return (sw.length > 1 ? '--' : '-') + sw\n                })\n                .join(', ')\n            ;\n            return acc;\n        }, {});\n        \n        var switchlen = longest(Object.keys(switches).map(function (s) {\n            return switches[s] || '';\n        }));\n        \n        var desclen = longest(Object.keys(descriptions).map(function (d) { \n            return descriptions[d] || '';\n        }));\n        \n        keys.forEach(function (key) {\n            var kswitch = switches[key];\n            var desc = descriptions[key] || '';\n            \n            if (wrap) {\n                desc = wordwrap(switchlen + 4, wrap)(desc)\n                    .slice(switchlen + 4)\n                ;\n            }\n            \n            var spadding = new Array(\n                Math.max(switchlen - kswitch.length + 3, 0)\n            ).join(' ');\n            \n            var dpadding = new Array(\n                Math.max(desclen - desc.length + 1, 0)\n            ).join(' ');\n            \n            var type = null;\n            \n            if (options.boolean[key]) type = '[boolean]';\n            if (options.string[key]) type = '[string]';\n            \n            if (!wrap && dpadding.length > 0) {\n                desc += dpadding;\n            }\n            \n            var prelude = '  ' + kswitch + spadding;\n            var extra = [\n                type,\n                demanded[key]\n                    ? '[required]'\n                    : null\n                ,\n                options.default[key] !== undefined\n                    ? '[default: ' + JSON.stringify(options.default[key]) + ']'\n                    : null\n                ,\n            ].filter(Boolean).join('  ');\n            \n            var body = [ desc, extra ].filter(Boolean).join('  ');\n            \n            if (wrap) {\n                var dlines = desc.split('\\n');\n                var dlen = dlines.slice(-1)[0].length\n                    + (dlines.length === 1 ? prelude.length : 0)\n                \n                body = desc + (dlen + extra.length > wrap - 2\n                    ? '\\n'\n                        + new Array(wrap - extra.length + 1).join(' ')\n                        + extra\n                    : new Array(wrap - extra.length - dlen + 1).join(' ')\n                        + extra\n                );\n            }\n            \n            help.push(prelude + body);\n        });\n        \n        help.push('');\n        return help.join('\\n');\n    };\n    \n    Object.defineProperty(self, 'argv', {\n        get : function () { return parseArgs(processArgs) },\n        enumerable : true,\n    });\n    \n    function parseArgs (args) {\n        var argv = minimist(args, options);\n        argv.$0 = self.$0;\n        \n        if (demanded._ && argv._.length < demanded._) {\n            fail('Not enough non-option arguments: got '\n                + argv._.length + ', need at least ' + demanded._\n            );\n        }\n        \n        var missing = [];\n        Object.keys(demanded).forEach(function (key) {\n            if (!argv[key]) missing.push(key);\n        });\n        \n        if (missing.length) {\n            fail('Missing required arguments: ' + missing.join(', '));\n        }\n        \n        checks.forEach(function (f) {\n            try {\n                if (f(argv) === false) {\n                    fail('Argument check failed: ' + f.toString());\n                }\n            }\n            catch (err) {\n                fail(err)\n            }\n        });\n        \n        return argv;\n    }\n    \n    function longest (xs) {\n        return Math.max.apply(\n            null,\n            xs.map(function (x) { return x.length })\n        );\n    }\n    \n    return self;\n};\n\n// rebase an absolute path to a relative one with respect to a base directory\n// exported for tests\nexports.rebase = rebase;\nfunction rebase (base, dir) {\n    var ds = path.normalize(dir).split('/').slice(1);\n    var bs = path.normalize(base).split('/').slice(1);\n    \n    for (var i = 0; ds[i] && ds[i] == bs[i]; i++);\n    ds.splice(0, i); bs.splice(0, i);\n    \n    var p = path.normalize(\n        bs.map(function () { return '..' }).concat(ds).join('/')\n    ).replace(/\\/$/,'').replace(/^$/, '.');\n    return p.match(/^[.\\/]/) ? p : './' + p;\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1372150063000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "module.exports = function (args, opts) {\n  if (!opts) opts = {};\n  var flags = {\n    bools: {},\n    strings: {}\n  };\n  [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n    flags.bools[key] = true;\n  });\n  var aliases = {};\n  Object.keys(opts.alias || {}).forEach(function (key) {\n    aliases[key] = [].concat(opts.alias[key]);\n    aliases[key].forEach(function (x) {\n      aliases[x] = [key].concat(aliases[key].filter(function (y) {\n        return x !== y;\n      }));\n    });\n  });\n  [].concat(opts.string).filter(Boolean).forEach(function (key) {\n    flags.strings[key] = true;\n\n    if (aliases[key]) {\n      flags.strings[aliases[key]] = true;\n    }\n  });\n  var defaults = opts['default'] || {};\n  var argv = {\n    _: []\n  };\n  Object.keys(flags.bools).forEach(function (key) {\n    setArg(key, defaults[key] === undefined ? false : defaults[key]);\n  });\n  var notFlags = [];\n\n  if (args.indexOf('--') !== -1) {\n    notFlags = args.slice(args.indexOf('--') + 1);\n    args = args.slice(0, args.indexOf('--'));\n  }\n\n  function setArg(key, val) {\n    var value = !flags.strings[key] && isNumber(val) ? Number(val) : val;\n    setKey(argv, key.split('.'), value);\n    (aliases[key] || []).forEach(function (x) {\n      setKey(argv, x.split('.'), value);\n    });\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n\n    if (/^--.+=/.test(arg)) {\n      // Using [\\s\\S] instead of . because js doesn't support the\n      // 'dotall' regex modifier. See:\n      // http://stackoverflow.com/a/1068308/13216\n      var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n      setArg(m[1], m[2]);\n    } else if (/^--no-.+/.test(arg)) {\n      var key = arg.match(/^--no-(.+)/)[1];\n      setArg(key, false);\n    } else if (/^--.+/.test(arg)) {\n      var key = arg.match(/^--(.+)/)[1];\n      var next = args[i + 1];\n\n      if (next !== undefined && !/^-/.test(next) && !flags.bools[key] && (aliases[key] ? !flags.bools[aliases[key]] : true)) {\n        setArg(key, next);\n        i++;\n      } else if (/^(true|false)$/.test(next)) {\n        setArg(key, next === 'true');\n        i++;\n      } else {\n        setArg(key, flags.strings[key] ? '' : true);\n      }\n    } else if (/^-[^-]+/.test(arg)) {\n      var letters = arg.slice(1, -1).split('');\n      var broken = false;\n\n      for (var j = 0; j < letters.length; j++) {\n        var next = arg.slice(j + 2);\n\n        if (next === '-') {\n          setArg(letters[j], next);\n          continue;\n        }\n\n        if (/[A-Za-z]/.test(letters[j]) && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n          setArg(letters[j], next);\n          broken = true;\n          break;\n        }\n\n        if (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n          setArg(letters[j], arg.slice(j + 2));\n          broken = true;\n          break;\n        } else {\n          setArg(letters[j], flags.strings[letters[j]] ? '' : true);\n        }\n      }\n\n      var key = arg.slice(-1)[0];\n\n      if (!broken && key !== '-') {\n        if (args[i + 1] && !/^(-|--)[^-]/.test(args[i + 1]) && !flags.bools[key] && (aliases[key] ? !flags.bools[aliases[key]] : true)) {\n          setArg(key, args[i + 1]);\n          i++;\n        } else if (args[i + 1] && /true|false/.test(args[i + 1])) {\n          setArg(key, args[i + 1] === 'true');\n          i++;\n        } else {\n          setArg(key, flags.strings[key] ? '' : true);\n        }\n      }\n    } else {\n      argv._.push(flags.strings['_'] || !isNumber(arg) ? arg : Number(arg));\n    }\n  }\n\n  Object.keys(defaults).forEach(function (key) {\n    if (!hasKey(argv, key.split('.'))) {\n      setKey(argv, key.split('.'), defaults[key]);\n      (aliases[key] || []).forEach(function (x) {\n        setKey(argv, x.split('.'), defaults[key]);\n      });\n    }\n  });\n  notFlags.forEach(function (key) {\n    argv._.push(key);\n  });\n  return argv;\n};\n\nfunction hasKey(obj, keys) {\n  var o = obj;\n  keys.slice(0, -1).forEach(function (key) {\n    o = o[key] || {};\n  });\n  var key = keys[keys.length - 1];\n  return key in o;\n}\n\nfunction setKey(obj, keys, value) {\n  var o = obj;\n  keys.slice(0, -1).forEach(function (key) {\n    if (o[key] === undefined) o[key] = {};\n    o = o[key];\n  });\n  var key = keys[keys.length - 1];\n\n  if (o[key] === undefined || typeof o[key] === 'boolean') {\n    o[key] = value;\n  } else if (Array.isArray(o[key])) {\n    o[key].push(value);\n  } else {\n    o[key] = [o[key], value];\n  }\n}\n\nfunction isNumber(x) {\n  if (typeof x === 'number') return true;\n  if (/^0x[0-9a-f]+$/i.test(x)) return true;\n  return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "args",
        "opts",
        "flags",
        "bools",
        "strings",
        "concat",
        "filter",
        "Boolean",
        "forEach",
        "key",
        "aliases",
        "Object",
        "keys",
        "alias",
        "x",
        "y",
        "string",
        "defaults",
        "argv",
        "_",
        "setArg",
        "undefined",
        "notFlags",
        "indexOf",
        "slice",
        "val",
        "value",
        "isNumber",
        "Number",
        "setKey",
        "split",
        "i",
        "length",
        "arg",
        "test",
        "m",
        "match",
        "next",
        "letters",
        "broken",
        "j",
        "push",
        "hasKey",
        "obj",
        "o",
        "Array",
        "isArray"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/minimist",
      "sourcesContent": [
        "module.exports = function (args, opts) {\n    if (!opts) opts = {};\n    \n    var flags = { bools : {}, strings : {} };\n    \n    [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n        flags.bools[key] = true;\n    });\n    \n    var aliases = {};\n    Object.keys(opts.alias || {}).forEach(function (key) {\n        aliases[key] = [].concat(opts.alias[key]);\n        aliases[key].forEach(function (x) {\n            aliases[x] = [key].concat(aliases[key].filter(function (y) {\n                return x !== y;\n            }));\n        });\n    });\n\n    [].concat(opts.string).filter(Boolean).forEach(function (key) {\n        flags.strings[key] = true;\n        if (aliases[key]) {\n            flags.strings[aliases[key]] = true;\n        }\n     });\n\n    var defaults = opts['default'] || {};\n    \n    var argv = { _ : [] };\n    Object.keys(flags.bools).forEach(function (key) {\n        setArg(key, defaults[key] === undefined ? false : defaults[key]);\n    });\n    \n    var notFlags = [];\n\n    if (args.indexOf('--') !== -1) {\n        notFlags = args.slice(args.indexOf('--')+1);\n        args = args.slice(0, args.indexOf('--'));\n    }\n\n    function setArg (key, val) {\n        var value = !flags.strings[key] && isNumber(val)\n            ? Number(val) : val\n        ;\n        setKey(argv, key.split('.'), value);\n        \n        (aliases[key] || []).forEach(function (x) {\n            setKey(argv, x.split('.'), value);\n        });\n    }\n    \n    for (var i = 0; i < args.length; i++) {\n        var arg = args[i];\n        \n        if (/^--.+=/.test(arg)) {\n            // Using [\\s\\S] instead of . because js doesn't support the\n            // 'dotall' regex modifier. See:\n            // http://stackoverflow.com/a/1068308/13216\n            var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n            setArg(m[1], m[2]);\n        }\n        else if (/^--no-.+/.test(arg)) {\n            var key = arg.match(/^--no-(.+)/)[1];\n            setArg(key, false);\n        }\n        else if (/^--.+/.test(arg)) {\n            var key = arg.match(/^--(.+)/)[1];\n            var next = args[i + 1];\n            if (next !== undefined && !/^-/.test(next)\n            && !flags.bools[key]\n            && (aliases[key] ? !flags.bools[aliases[key]] : true)) {\n                setArg(key, next);\n                i++;\n            }\n            else if (/^(true|false)$/.test(next)) {\n                setArg(key, next === 'true');\n                i++;\n            }\n            else {\n                setArg(key, flags.strings[key] ? '' : true);\n            }\n        }\n        else if (/^-[^-]+/.test(arg)) {\n            var letters = arg.slice(1,-1).split('');\n            \n            var broken = false;\n            for (var j = 0; j < letters.length; j++) {\n                var next = arg.slice(j+2);\n                \n                if (next === '-') {\n                    setArg(letters[j], next)\n                    continue;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j])\n                && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n                    setArg(letters[j], next);\n                    broken = true;\n                    break;\n                }\n                \n                if (letters[j+1] && letters[j+1].match(/\\W/)) {\n                    setArg(letters[j], arg.slice(j+2));\n                    broken = true;\n                    break;\n                }\n                else {\n                    setArg(letters[j], flags.strings[letters[j]] ? '' : true);\n                }\n            }\n            \n            var key = arg.slice(-1)[0];\n            if (!broken && key !== '-') {\n                if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])\n                && !flags.bools[key]\n                && (aliases[key] ? !flags.bools[aliases[key]] : true)) {\n                    setArg(key, args[i+1]);\n                    i++;\n                }\n                else if (args[i+1] && /true|false/.test(args[i+1])) {\n                    setArg(key, args[i+1] === 'true');\n                    i++;\n                }\n                else {\n                    setArg(key, flags.strings[key] ? '' : true);\n                }\n            }\n        }\n        else {\n            argv._.push(\n                flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n            );\n        }\n    }\n    \n    Object.keys(defaults).forEach(function (key) {\n        if (!hasKey(argv, key.split('.'))) {\n            setKey(argv, key.split('.'), defaults[key]);\n            \n            (aliases[key] || []).forEach(function (x) {\n                setKey(argv, x.split('.'), defaults[key]);\n            });\n        }\n    });\n    \n    notFlags.forEach(function(key) {\n        argv._.push(key);\n    });\n\n    return argv;\n};\n\nfunction hasKey (obj, keys) {\n    var o = obj;\n    keys.slice(0,-1).forEach(function (key) {\n        o = (o[key] || {});\n    });\n\n    var key = keys[keys.length - 1];\n    return key in o;\n}\n\nfunction setKey (obj, keys, value) {\n    var o = obj;\n    keys.slice(0,-1).forEach(function (key) {\n        if (o[key] === undefined) o[key] = {};\n        o = o[key];\n    });\n    \n    var key = keys[keys.length - 1];\n    if (o[key] === undefined || typeof o[key] === 'boolean') {\n        o[key] = value;\n    }\n    else if (Array.isArray(o[key])) {\n        o[key].push(value);\n    }\n    else {\n        o[key] = [ o[key], value ];\n    }\n}\n\nfunction isNumber (x) {\n    if (typeof x === 'number') return true;\n    if (/^0x[0-9a-f]+$/i.test(x)) return true;\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1399844211000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "var wordwrap = module.exports = function (start, stop, params) {\n  if (typeof start === 'object') {\n    params = start;\n    start = params.start;\n    stop = params.stop;\n  }\n\n  if (typeof stop === 'object') {\n    params = stop;\n    start = start || params.start;\n    stop = undefined;\n  }\n\n  if (!stop) {\n    stop = start;\n    start = 0;\n  }\n\n  if (!params) params = {};\n  var mode = params.mode || 'soft';\n  var re = mode === 'hard' ? /\\b/ : /(\\S+\\s+)/;\n  return function (text) {\n    var chunks = text.toString().split(re).reduce(function (acc, x) {\n      if (mode === 'hard') {\n        for (var i = 0; i < x.length; i += stop - start) {\n          acc.push(x.slice(i, i + stop - start));\n        }\n      } else acc.push(x);\n\n      return acc;\n    }, []);\n    return chunks.reduce(function (lines, rawChunk) {\n      if (rawChunk === '') return lines;\n      var chunk = rawChunk.replace(/\\t/g, '    ');\n      var i = lines.length - 1;\n\n      if (lines[i].length + chunk.length > stop) {\n        lines[i] = lines[i].replace(/\\s+$/, '');\n        chunk.split(/\\n/).forEach(function (c) {\n          lines.push(new Array(start + 1).join(' ') + c.replace(/^\\s+/, ''));\n        });\n      } else if (chunk.match(/\\n/)) {\n        var xs = chunk.split(/\\n/);\n        lines[i] += xs.shift();\n        xs.forEach(function (c) {\n          lines.push(new Array(start + 1).join(' ') + c.replace(/^\\s+/, ''));\n        });\n      } else {\n        lines[i] += chunk;\n      }\n\n      return lines;\n    }, [new Array(start + 1).join(' ')]).join('\\n');\n  };\n};\n\nwordwrap.soft = wordwrap;\n\nwordwrap.hard = function (start, stop) {\n  return wordwrap(start, stop, {\n    mode: 'hard'\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIndvcmR3cmFwIiwibW9kdWxlIiwiZXhwb3J0cyIsInN0YXJ0Iiwic3RvcCIsInBhcmFtcyIsInVuZGVmaW5lZCIsIm1vZGUiLCJyZSIsInRleHQiLCJjaHVua3MiLCJ0b1N0cmluZyIsInNwbGl0IiwicmVkdWNlIiwiYWNjIiwieCIsImkiLCJsZW5ndGgiLCJwdXNoIiwic2xpY2UiLCJsaW5lcyIsInJhd0NodW5rIiwiY2h1bmsiLCJyZXBsYWNlIiwiZm9yRWFjaCIsImMiLCJBcnJheSIsImpvaW4iLCJtYXRjaCIsInhzIiwic2hpZnQiLCJzb2Z0IiwiaGFyZCJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsS0FBVixFQUFpQkMsSUFBakIsRUFBdUJDLE1BQXZCLEVBQStCO0FBQzNELE1BQUksT0FBT0YsS0FBUCxLQUFpQixRQUFyQixFQUErQjtBQUMzQkUsSUFBQUEsTUFBTSxHQUFHRixLQUFUO0FBQ0FBLElBQUFBLEtBQUssR0FBR0UsTUFBTSxDQUFDRixLQUFmO0FBQ0FDLElBQUFBLElBQUksR0FBR0MsTUFBTSxDQUFDRCxJQUFkO0FBQ0g7O0FBRUQsTUFBSSxPQUFPQSxJQUFQLEtBQWdCLFFBQXBCLEVBQThCO0FBQzFCQyxJQUFBQSxNQUFNLEdBQUdELElBQVQ7QUFDQUQsSUFBQUEsS0FBSyxHQUFHQSxLQUFLLElBQUlFLE1BQU0sQ0FBQ0YsS0FBeEI7QUFDQUMsSUFBQUEsSUFBSSxHQUFHRSxTQUFQO0FBQ0g7O0FBRUQsTUFBSSxDQUFDRixJQUFMLEVBQVc7QUFDUEEsSUFBQUEsSUFBSSxHQUFHRCxLQUFQO0FBQ0FBLElBQUFBLEtBQUssR0FBRyxDQUFSO0FBQ0g7O0FBRUQsTUFBSSxDQUFDRSxNQUFMLEVBQWFBLE1BQU0sR0FBRyxFQUFUO0FBQ2IsTUFBSUUsSUFBSSxHQUFHRixNQUFNLENBQUNFLElBQVAsSUFBZSxNQUExQjtBQUNBLE1BQUlD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O0FBRUFBLFFBQVEsQ0FBQ2dDLElBQVQsR0FBZ0IsVUFBVTdCLEtBQVYsRUFBaUJDLElBQWpCLEVBQXVCO0FBQ25DLFNBQU9KLFFBQVEsQ0FBQ0csS0FBRCxFQUFRQyxJQUFSLEVBQWM7QUFBRUcsSUFBQUEsSUFBSSxFQUFHO0FBQVQsR0FBZCxDQUFmO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvd2FuZ3poaWNodW4vRGVza3RvcC9zdHVkeS90ZXN0LWNsaS9ub2RlX21vZHVsZXMvd29yZHdyYXAiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgd29yZHdyYXAgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzdGFydCwgc3RvcCwgcGFyYW1zKSB7XG4gICAgaWYgKHR5cGVvZiBzdGFydCA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcGFyYW1zID0gc3RhcnQ7XG4gICAgICAgIHN0YXJ0ID0gcGFyYW1zLnN0YXJ0O1xuICAgICAgICBzdG9wID0gcGFyYW1zLnN0b3A7XG4gICAgfVxuICAgIFxuICAgIGlmICh0eXBlb2Ygc3RvcCA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcGFyYW1zID0gc3RvcDtcbiAgICAgICAgc3RhcnQgPSBzdGFydCB8fCBwYXJhbXMuc3RhcnQ7XG4gICAgICAgIHN0b3AgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIFxuICAgIGlmICghc3RvcCkge1xuICAgICAgICBzdG9wID0gc3RhcnQ7XG4gICAgICAgIHN0YXJ0ID0gMDtcbiAgICB9XG4gICAgXG4gICAgaWYgKCFwYXJhbXMpIHBhcmFtcyA9IHt9O1xuICAgIHZhciBtb2RlID0gcGFyYW1zLm1vZGUgfHwgJ3NvZnQnO1xuICAgIHZhciByZSA9IG1vZGUgPT09ICdoYXJkJyA/IC9cXGIvIDogLyhcXFMrXFxzKykvO1xuICAgIFxuICAgIHJldHVybiBmdW5jdGlvbiAodGV4dCkge1xuICAgICAgICB2YXIgY2h1bmtzID0gdGV4dC50b1N0cmluZygpXG4gICAgICAgICAgICAuc3BsaXQocmUpXG4gICAgICAgICAgICAucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHgpIHtcbiAgICAgICAgICAgICAgICBpZiAobW9kZSA9PT0gJ2hhcmQnKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgeC5sZW5ndGg7IGkgKz0gc3RvcCAtIHN0YXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhY2MucHVzaCh4LnNsaWNlKGksIGkgKyBzdG9wIC0gc3RhcnQpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGFjYy5wdXNoKHgpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgICAgIH0sIFtdKVxuICAgICAgICA7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gY2h1bmtzLnJlZHVjZShmdW5jdGlvbiAobGluZXMsIHJhd0NodW5rKSB7XG4gICAgICAgICAgICBpZiAocmF3Q2h1bmsgPT09ICcnKSByZXR1cm4gbGluZXM7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHZhciBjaHVuayA9IHJhd0NodW5rLnJlcGxhY2UoL1xcdC9nLCAnICAgICcpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB2YXIgaSA9IGxpbmVzLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICBpZiAobGluZXNbaV0ubGVuZ3RoICsgY2h1bmsubGVuZ3RoID4gc3RvcCkge1xuICAgICAgICAgICAgICAgIGxpbmVzW2ldID0gbGluZXNbaV0ucmVwbGFjZSgvXFxzKyQvLCAnJyk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY2h1bmsuc3BsaXQoL1xcbi8pLmZvckVhY2goZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgICAgICAgICAgICAgbGluZXMucHVzaChcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBBcnJheShzdGFydCArIDEpLmpvaW4oJyAnKVxuICAgICAgICAgICAgICAgICAgICAgICAgKyBjLnJlcGxhY2UoL15cXHMrLywgJycpXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChjaHVuay5tYXRjaCgvXFxuLykpIHtcbiAgICAgICAgICAgICAgICB2YXIgeHMgPSBjaHVuay5zcGxpdCgvXFxuLyk7XG4gICAgICAgICAgICAgICAgbGluZXNbaV0gKz0geHMuc2hpZnQoKTtcbiAgICAgICAgICAgICAgICB4cy5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7XG4gICAgICAgICAgICAgICAgICAgIGxpbmVzLnB1c2goXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgQXJyYXkoc3RhcnQgKyAxKS5qb2luKCcgJylcbiAgICAgICAgICAgICAgICAgICAgICAgICsgYy5yZXBsYWNlKC9eXFxzKy8sICcnKVxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbGluZXNbaV0gKz0gY2h1bms7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiBsaW5lcztcbiAgICAgICAgfSwgWyBuZXcgQXJyYXkoc3RhcnQgKyAxKS5qb2luKCcgJykgXSkuam9pbignXFxuJyk7XG4gICAgfTtcbn07XG5cbndvcmR3cmFwLnNvZnQgPSB3b3Jkd3JhcDtcblxud29yZHdyYXAuaGFyZCA9IGZ1bmN0aW9uIChzdGFydCwgc3RvcCkge1xuICAgIHJldHVybiB3b3Jkd3JhcChzdGFydCwgc3RvcCwgeyBtb2RlIDogJ2hhcmQnIH0pO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "wordwrap",
        "module",
        "exports",
        "start",
        "stop",
        "params",
        "undefined",
        "mode",
        "re",
        "text",
        "chunks",
        "toString",
        "split",
        "reduce",
        "acc",
        "x",
        "i",
        "length",
        "push",
        "slice",
        "lines",
        "rawChunk",
        "chunk",
        "replace",
        "forEach",
        "c",
        "Array",
        "join",
        "match",
        "xs",
        "shift",
        "soft",
        "hard"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/wordwrap",
      "sourcesContent": [
        "var wordwrap = module.exports = function (start, stop, params) {\n    if (typeof start === 'object') {\n        params = start;\n        start = params.start;\n        stop = params.stop;\n    }\n    \n    if (typeof stop === 'object') {\n        params = stop;\n        start = start || params.start;\n        stop = undefined;\n    }\n    \n    if (!stop) {\n        stop = start;\n        start = 0;\n    }\n    \n    if (!params) params = {};\n    var mode = params.mode || 'soft';\n    var re = mode === 'hard' ? /\\b/ : /(\\S+\\s+)/;\n    \n    return function (text) {\n        var chunks = text.toString()\n            .split(re)\n            .reduce(function (acc, x) {\n                if (mode === 'hard') {\n                    for (var i = 0; i < x.length; i += stop - start) {\n                        acc.push(x.slice(i, i + stop - start));\n                    }\n                }\n                else acc.push(x)\n                return acc;\n            }, [])\n        ;\n        \n        return chunks.reduce(function (lines, rawChunk) {\n            if (rawChunk === '') return lines;\n            \n            var chunk = rawChunk.replace(/\\t/g, '    ');\n            \n            var i = lines.length - 1;\n            if (lines[i].length + chunk.length > stop) {\n                lines[i] = lines[i].replace(/\\s+$/, '');\n                \n                chunk.split(/\\n/).forEach(function (c) {\n                    lines.push(\n                        new Array(start + 1).join(' ')\n                        + c.replace(/^\\s+/, '')\n                    );\n                });\n            }\n            else if (chunk.match(/\\n/)) {\n                var xs = chunk.split(/\\n/);\n                lines[i] += xs.shift();\n                xs.forEach(function (c) {\n                    lines.push(\n                        new Array(start + 1).join(' ')\n                        + c.replace(/^\\s+/, '')\n                    );\n                });\n            }\n            else {\n                lines[i] += chunk;\n            }\n            \n            return lines;\n        }, [ new Array(start + 1).join(' ') ]).join('\\n');\n    };\n};\n\nwordwrap.soft = wordwrap;\n\nwordwrap.hard = function (start, stop) {\n    return wordwrap(start, stop, { mode : 'hard' });\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1431018454000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst ansiStyles = require('ansi-styles');\n\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm'); // `supportsColor.level` → `ansiStyles.color[name]` mapping\n\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m']; // `color-convert` models to exclude from the Chalk API due to conflicts and such\n\nconst skipModels = new Set(['gray']);\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n  options = options || {}; // Detect level if not set manually\n\n  const scLevel = stdoutColor ? stdoutColor.level : 0;\n  obj.level = options.level === undefined ? scLevel : options.level;\n  obj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n  // We check for this.template here since calling `chalk.constructor()`\n  // by itself will have a `this` of a previously constructed chalk object\n  if (!this || !(this instanceof Chalk) || this.template) {\n    const chalk = {};\n    applyOptions(chalk, options);\n\n    chalk.template = function () {\n      const args = [].slice.call(arguments);\n      return chalkTag.apply(null, [chalk.template].concat(args));\n    };\n\n    Object.setPrototypeOf(chalk, Chalk.prototype);\n    Object.setPrototypeOf(chalk.template, chalk);\n    chalk.template.constructor = Chalk;\n    return chalk.template;\n  }\n\n  applyOptions(this, options);\n} // Use bright blue on Windows as the normal blue color is illegible\n\n\nif (isSimpleWindowsTerm) {\n  ansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n  ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n  styles[key] = {\n    get() {\n      const codes = ansiStyles[key];\n      return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n    }\n\n  };\n}\n\nstyles.visible = {\n  get() {\n    return build.call(this, this._styles || [], true, 'visible');\n  }\n\n};\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\n\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n  if (skipModels.has(model)) {\n    continue;\n  }\n\n  styles[model] = {\n    get() {\n      const level = this.level;\n      return function () {\n        const open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n        const codes = {\n          open,\n          close: ansiStyles.color.close,\n          closeRe: ansiStyles.color.closeRe\n        };\n        return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n      };\n    }\n\n  };\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\n\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n  if (skipModels.has(model)) {\n    continue;\n  }\n\n  const bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n  styles[bgModel] = {\n    get() {\n      const level = this.level;\n      return function () {\n        const open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n        const codes = {\n          open,\n          close: ansiStyles.bgColor.close,\n          closeRe: ansiStyles.bgColor.closeRe\n        };\n        return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n      };\n    }\n\n  };\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n  const builder = function () {\n    return applyStyle.apply(builder, arguments);\n  };\n\n  builder._styles = _styles;\n  builder._empty = _empty;\n  const self = this;\n  Object.defineProperty(builder, 'level', {\n    enumerable: true,\n\n    get() {\n      return self.level;\n    },\n\n    set(level) {\n      self.level = level;\n    }\n\n  });\n  Object.defineProperty(builder, 'enabled', {\n    enumerable: true,\n\n    get() {\n      return self.enabled;\n    },\n\n    set(enabled) {\n      self.enabled = enabled;\n    }\n\n  }); // See below for fix regarding invisible grey/dim combination on Windows\n\n  builder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey'; // `__proto__` is used because we must return a function, but there is\n  // no way to create a function with a different prototype\n\n  builder.__proto__ = proto; // eslint-disable-line no-proto\n\n  return builder;\n}\n\nfunction applyStyle() {\n  // Support varags, but simply cast to string in case there's only one arg\n  const args = arguments;\n  const argsLen = args.length;\n  let str = String(arguments[0]);\n\n  if (argsLen === 0) {\n    return '';\n  }\n\n  if (argsLen > 1) {\n    // Don't slice `arguments`, it prevents V8 optimizations\n    for (let a = 1; a < argsLen; a++) {\n      str += ' ' + args[a];\n    }\n  }\n\n  if (!this.enabled || this.level <= 0 || !str) {\n    return this._empty ? '' : str;\n  } // Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n  // see https://github.com/chalk/chalk/issues/58\n  // If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\n\n  const originalDim = ansiStyles.dim.open;\n\n  if (isSimpleWindowsTerm && this.hasGrey) {\n    ansiStyles.dim.open = '';\n  }\n\n  for (const code of this._styles.slice().reverse()) {\n    // Replace any instances already present with a re-opening code\n    // otherwise only the part of the string until said closing code\n    // will be colored, and the rest will simply be 'plain'.\n    str = code.open + str.replace(code.closeRe, code.open) + code.close; // Close the styling before a linebreak and reopen\n    // after next line to fix a bleed issue on macOS\n    // https://github.com/chalk/chalk/pull/92\n\n    str = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n  } // Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\n\n  ansiStyles.dim.open = originalDim;\n  return str;\n}\n\nfunction chalkTag(chalk, strings) {\n  if (!Array.isArray(strings)) {\n    // If chalk() was called by itself or with a string,\n    // return the string itself as a string.\n    return [].slice.call(arguments, 1).join(' ');\n  }\n\n  const args = [].slice.call(arguments, 2);\n  const parts = [strings.raw[0]];\n\n  for (let i = 1; i < strings.length; i++) {\n    parts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n    parts.push(String(strings.raw[i]));\n  }\n\n  return template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\nmodule.exports = Chalk(); // eslint-disable-line new-cap\n\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "escapeStringRegexp",
        "require",
        "ansiStyles",
        "stdoutColor",
        "stdout",
        "template",
        "isSimpleWindowsTerm",
        "process",
        "platform",
        "env",
        "TERM",
        "toLowerCase",
        "startsWith",
        "levelMapping",
        "skipModels",
        "Set",
        "styles",
        "Object",
        "create",
        "applyOptions",
        "obj",
        "options",
        "scLevel",
        "level",
        "undefined",
        "enabled",
        "Chalk",
        "chalk",
        "args",
        "slice",
        "call",
        "arguments",
        "chalkTag",
        "apply",
        "concat",
        "setPrototypeOf",
        "prototype",
        "constructor",
        "blue",
        "open",
        "key",
        "keys",
        "closeRe",
        "RegExp",
        "close",
        "get",
        "codes",
        "build",
        "_styles",
        "_empty",
        "visible",
        "color",
        "model",
        "ansi",
        "has",
        "bgColor",
        "bgModel",
        "toUpperCase",
        "proto",
        "defineProperties",
        "builder",
        "applyStyle",
        "self",
        "defineProperty",
        "enumerable",
        "set",
        "hasGrey",
        "__proto__",
        "argsLen",
        "length",
        "str",
        "String",
        "a",
        "originalDim",
        "dim",
        "code",
        "reverse",
        "replace",
        "strings",
        "Array",
        "isArray",
        "join",
        "parts",
        "raw",
        "i",
        "push",
        "module",
        "exports",
        "supportsColor",
        "default"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk",
      "sourcesContent": [
        "'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n"
      ]
    },
    "sourceType": "module",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  return str.replace(matchOperatorsRe, '\\\\$&');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1hdGNoT3BlcmF0b3JzUmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic3RyIiwiVHlwZUVycm9yIiwicmVwbGFjZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsZ0JBQWdCLEdBQUcscUJBQXZCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlO0FBQy9CLE1BQUksT0FBT0EsR0FBUCxLQUFlLFFBQW5CLEVBQTZCO0FBQzVCLFVBQU0sSUFBSUMsU0FBSixDQUFjLG1CQUFkLENBQU47QUFDQTs7QUFFRCxTQUFPRCxHQUFHLENBQUNFLE9BQUosQ0FBWUwsZ0JBQVosRUFBOEIsTUFBOUIsQ0FBUDtBQUNBLENBTkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhbmd6aGljaHVuL0Rlc2t0b3Avc3R1ZHkvdGVzdC1jbGkvbm9kZV9tb2R1bGVzL2VzY2FwZS1zdHJpbmctcmVnZXhwIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgbWF0Y2hPcGVyYXRvcnNSZSA9IC9bfFxcXFx7fSgpW1xcXV4kKyo/Ll0vZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc3RyKSB7XG5cdGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGEgc3RyaW5nJyk7XG5cdH1cblxuXHRyZXR1cm4gc3RyLnJlcGxhY2UobWF0Y2hPcGVyYXRvcnNSZSwgJ1xcXFwkJicpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "matchOperatorsRe",
        "module",
        "exports",
        "str",
        "TypeError",
        "replace"
      ],
      "mappings": "AAAA;;AAEA,IAAIA,gBAAgB,GAAG,qBAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAe;AAC/B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC5B,UAAM,IAAIC,SAAJ,CAAc,mBAAd,CAAN;AACA;;AAED,SAAOD,GAAG,CAACE,OAAJ,CAAYL,gBAAZ,EAA8B,MAA9B,CAAP;AACA,CAND",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/escape-string-regexp",
      "sourcesContent": [
        "'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1456057032000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n  const code = fn.apply(colorConvert, arguments);\n  return `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n  const code = fn.apply(colorConvert, arguments);\n  return `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n  const rgb = fn.apply(colorConvert, arguments);\n  return `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n  const codes = new Map();\n  const styles = {\n    modifier: {\n      reset: [0, 0],\n      // 21 isn't widely supported and 22 does the same thing\n      bold: [1, 22],\n      dim: [2, 22],\n      italic: [3, 23],\n      underline: [4, 24],\n      inverse: [7, 27],\n      hidden: [8, 28],\n      strikethrough: [9, 29]\n    },\n    color: {\n      black: [30, 39],\n      red: [31, 39],\n      green: [32, 39],\n      yellow: [33, 39],\n      blue: [34, 39],\n      magenta: [35, 39],\n      cyan: [36, 39],\n      white: [37, 39],\n      gray: [90, 39],\n      // Bright color\n      redBright: [91, 39],\n      greenBright: [92, 39],\n      yellowBright: [93, 39],\n      blueBright: [94, 39],\n      magentaBright: [95, 39],\n      cyanBright: [96, 39],\n      whiteBright: [97, 39]\n    },\n    bgColor: {\n      bgBlack: [40, 49],\n      bgRed: [41, 49],\n      bgGreen: [42, 49],\n      bgYellow: [43, 49],\n      bgBlue: [44, 49],\n      bgMagenta: [45, 49],\n      bgCyan: [46, 49],\n      bgWhite: [47, 49],\n      // Bright color\n      bgBlackBright: [100, 49],\n      bgRedBright: [101, 49],\n      bgGreenBright: [102, 49],\n      bgYellowBright: [103, 49],\n      bgBlueBright: [104, 49],\n      bgMagentaBright: [105, 49],\n      bgCyanBright: [106, 49],\n      bgWhiteBright: [107, 49]\n    }\n  }; // Fix humans\n\n  styles.color.grey = styles.color.gray;\n\n  for (const groupName of Object.keys(styles)) {\n    const group = styles[groupName];\n\n    for (const styleName of Object.keys(group)) {\n      const style = group[styleName];\n      styles[styleName] = {\n        open: `\\u001B[${style[0]}m`,\n        close: `\\u001B[${style[1]}m`\n      };\n      group[styleName] = styles[styleName];\n      codes.set(style[0], style[1]);\n    }\n\n    Object.defineProperty(styles, groupName, {\n      value: group,\n      enumerable: false\n    });\n    Object.defineProperty(styles, 'codes', {\n      value: codes,\n      enumerable: false\n    });\n  }\n\n  const ansi2ansi = n => n;\n\n  const rgb2rgb = (r, g, b) => [r, g, b];\n\n  styles.color.close = '\\u001B[39m';\n  styles.bgColor.close = '\\u001B[49m';\n  styles.color.ansi = {\n    ansi: wrapAnsi16(ansi2ansi, 0)\n  };\n  styles.color.ansi256 = {\n    ansi256: wrapAnsi256(ansi2ansi, 0)\n  };\n  styles.color.ansi16m = {\n    rgb: wrapAnsi16m(rgb2rgb, 0)\n  };\n  styles.bgColor.ansi = {\n    ansi: wrapAnsi16(ansi2ansi, 10)\n  };\n  styles.bgColor.ansi256 = {\n    ansi256: wrapAnsi256(ansi2ansi, 10)\n  };\n  styles.bgColor.ansi16m = {\n    rgb: wrapAnsi16m(rgb2rgb, 10)\n  };\n\n  for (let key of Object.keys(colorConvert)) {\n    if (typeof colorConvert[key] !== 'object') {\n      continue;\n    }\n\n    const suite = colorConvert[key];\n\n    if (key === 'ansi16') {\n      key = 'ansi';\n    }\n\n    if ('ansi16' in suite) {\n      styles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n      styles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n    }\n\n    if ('ansi256' in suite) {\n      styles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n      styles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n    }\n\n    if ('rgb' in suite) {\n      styles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n      styles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n    }\n  }\n\n  return styles;\n} // Make the export immutable\n\n\nObject.defineProperty(module, 'exports', {\n  enumerable: true,\n  get: assembleStyles\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "colorConvert",
        "require",
        "wrapAnsi16",
        "fn",
        "offset",
        "code",
        "apply",
        "arguments",
        "wrapAnsi256",
        "wrapAnsi16m",
        "rgb",
        "assembleStyles",
        "codes",
        "Map",
        "styles",
        "modifier",
        "reset",
        "bold",
        "dim",
        "italic",
        "underline",
        "inverse",
        "hidden",
        "strikethrough",
        "color",
        "black",
        "red",
        "green",
        "yellow",
        "blue",
        "magenta",
        "cyan",
        "white",
        "gray",
        "redBright",
        "greenBright",
        "yellowBright",
        "blueBright",
        "magentaBright",
        "cyanBright",
        "whiteBright",
        "bgColor",
        "bgBlack",
        "bgRed",
        "bgGreen",
        "bgYellow",
        "bgBlue",
        "bgMagenta",
        "bgCyan",
        "bgWhite",
        "bgBlackBright",
        "bgRedBright",
        "bgGreenBright",
        "bgYellowBright",
        "bgBlueBright",
        "bgMagentaBright",
        "bgCyanBright",
        "bgWhiteBright",
        "grey",
        "groupName",
        "Object",
        "keys",
        "group",
        "styleName",
        "style",
        "open",
        "close",
        "set",
        "defineProperty",
        "value",
        "enumerable",
        "ansi2ansi",
        "n",
        "rgb2rgb",
        "r",
        "g",
        "b",
        "ansi",
        "ansi256",
        "ansi16m",
        "key",
        "suite",
        "ansi16",
        "module",
        "get"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/ansi-styles",
      "sourcesContent": [
        "'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1519983217000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "var conversions = require('./conversions');\n\nvar route = require('./route');\n\nvar convert = {};\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n  var wrappedFn = function (args) {\n    if (args === undefined || args === null) {\n      return args;\n    }\n\n    if (arguments.length > 1) {\n      args = Array.prototype.slice.call(arguments);\n    }\n\n    return fn(args);\n  }; // preserve .conversion property if there is one\n\n\n  if ('conversion' in fn) {\n    wrappedFn.conversion = fn.conversion;\n  }\n\n  return wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n  var wrappedFn = function (args) {\n    if (args === undefined || args === null) {\n      return args;\n    }\n\n    if (arguments.length > 1) {\n      args = Array.prototype.slice.call(arguments);\n    }\n\n    var result = fn(args); // we're assuming the result is an array here.\n    // see notice in conversions.js; don't use box types\n    // in conversion functions.\n\n    if (typeof result === 'object') {\n      for (var len = result.length, i = 0; i < len; i++) {\n        result[i] = Math.round(result[i]);\n      }\n    }\n\n    return result;\n  }; // preserve .conversion property if there is one\n\n\n  if ('conversion' in fn) {\n    wrappedFn.conversion = fn.conversion;\n  }\n\n  return wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n  convert[fromModel] = {};\n  Object.defineProperty(convert[fromModel], 'channels', {\n    value: conversions[fromModel].channels\n  });\n  Object.defineProperty(convert[fromModel], 'labels', {\n    value: conversions[fromModel].labels\n  });\n  var routes = route(fromModel);\n  var routeModels = Object.keys(routes);\n  routeModels.forEach(function (toModel) {\n    var fn = routes[toModel];\n    convert[fromModel][toModel] = wrapRounded(fn);\n    convert[fromModel][toModel].raw = wrapRaw(fn);\n  });\n});\nmodule.exports = convert;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbnZlcnNpb25zIiwicmVxdWlyZSIsInJvdXRlIiwiY29udmVydCIsIm1vZGVscyIsIk9iamVjdCIsImtleXMiLCJ3cmFwUmF3IiwiZm4iLCJ3cmFwcGVkRm4iLCJhcmdzIiwidW5kZWZpbmVkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJzbGljZSIsImNhbGwiLCJjb252ZXJzaW9uIiwid3JhcFJvdW5kZWQiLCJyZXN1bHQiLCJsZW4iLCJpIiwiTWF0aCIsInJvdW5kIiwiZm9yRWFjaCIsImZyb21Nb2RlbCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJjaGFubmVscyIsImxhYmVscyIsInJvdXRlcyIsInJvdXRlTW9kZWxzIiwidG9Nb2RlbCIsInJhdyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFdBQVcsR0FBR0MsT0FBTyxDQUFDLGVBQUQsQ0FBekI7O0FBQ0EsSUFBSUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUFuQjs7QUFFQSxJQUFJRSxPQUFPLEdBQUcsRUFBZDtBQUVBLElBQUlDLE1BQU0sR0FBR0MsTUFBTSxDQUFDQyxJQUFQLENBQVlOLFdBQVosQ0FBYjs7QUFFQSxTQUFTTyxPQUFULENBQWlCQyxFQUFqQixFQUFxQjtBQUNwQixNQUFJQyxTQUFTLEdBQUcsVUFBVUMsSUFBVixFQUFnQjtBQUMvQixRQUFJQSxJQUFJLEtBQUtDLFNBQVQsSUFBc0JELElBQUksS0FBSyxJQUFuQyxFQUF5QztBQUN4QyxhQUFPQSxJQUFQO0FBQ0E7O0FBRUQsUUFBSUUsU0FBUyxDQUFDQyxNQUFWLEdBQW1CLENBQXZCLEVBQTBCO0FBQ3pCSCxNQUFBQSxJQUFJLEdBQUdJLEtBQUssQ0FBQ0MsU0FBTixDQUFnQkMsS0FBaEIsQ0FBc0JDLElBQXRCLENBQTJCTCxTQUEzQixDQUFQO0FBQ0E7O0FBRUQsV0FBT0osRUFBRSxDQUFDRSxJQUFELENBQVQ7QUFDQSxHQVZELENBRG9CLENBYXBCOzs7QUFDQSxNQUFJLGdCQUFnQkYsRUFBcEIsRUFBd0I7QUFDdkJDLElBQUFBLFNBQVMsQ0FBQ1MsVUFBVixHQUF1QlYsRUFBRSxDQUFDVSxVQUExQjtBQUNBOztBQUVELFNBQU9ULFNBQVA7QUFDQTs7QUFFRCxTQUFTVSxXQUFULENBQXFCWCxFQUFyQixFQUF5QjtBQUN4QixNQUFJQyxTQUFTLEdBQUcsVUFBVUMsSUFBVixFQUFnQjtBQUMvQixRQUFJQSxJQUFJLEtBQUtDLFNBQVQsSUFBc0JELElBQUksS0FBSyxJQUFuQyxFQUF5QztBQUN4QyxhQUFPQSxJQUFQO0FBQ0E7O0FBRUQsUUFBSUUsU0FBUyxDQUFDQyxNQUFWLEdBQW1CLENBQXZCLEVBQTBCO0FBQ3pCSCxNQUFBQSxJQUFJLEdBQUdJLEtBQUssQ0FBQ0MsU0FBTixDQUFnQkMsS0FBaEIsQ0FBc0JDLElBQXRCLENBQTJCTCxTQUEzQixDQUFQO0FBQ0E7O0FBRUQsUUFBSVEsTUFBTSxHQUFHWixFQUFFLENBQUNFLElBQUQsQ0FBZixDQVQrQixDQVcvQjtBQUNBO0FBQ0E7O0FBQ0EsUUFBSSxPQUFPVSxNQUFQLEtBQWtCLFFBQXRCLEVBQWdDO0FBQy9CLFdBQUssSUFBSUMsR0FBRyxHQUFHRCxNQUFNLENBQUNQLE1BQWpCLEVBQXlCUyxDQUFDLEdBQUcsQ0FBbEMsRUFBcUNBLENBQUMsR0FBR0QsR0FBekMsRUFBOENDLENBQUMsRUFBL0MsRUFBbUQ7QUFDbERGLFFBQUFBLE1BQU0sQ0FBQ0UsQ0FBRCxDQUFOLEdBQVlDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSixNQUFNLENBQUNFLENBQUQsQ0FBakIsQ0FBWjtBQUNBO0FBQ0Q7O0FBRUQsV0FBT0YsTUFBUDtBQUNBLEdBckJELENBRHdCLENBd0J4Qjs7O0FBQ0EsTUFBSSxnQkFBZ0JaLEVBQXBCLEVBQXdCO0FBQ3ZCQyxJQUFBQSxTQUFTLENBQUNTLFVBQVYsR0FBdUJWLEVBQUUsQ0FBQ1UsVUFBMUI7QUFDQTs7QUFFRCxTQUFPVCxTQUFQO0FBQ0E7O0FBRURMLE1BQU0sQ0FBQ3FCLE9BQVAsQ0FBZSxVQUFVQyxTQUFWLEVBQXFCO0FBQ25DdkIsRUFBQUEsT0FBTyxDQUFDdUIsU0FBRCxDQUFQLEdBQXFCLEVBQXJCO0FBRUFyQixFQUFBQSxNQUFNLENBQUNzQixjQUFQLENBQXNCeEIsT0FBTyxDQUFDdUIsU0FBRCxDQUE3QixFQUEwQyxVQUExQyxFQUFzRDtBQUFDRSxJQUFBQSxLQUFLLEVBQUU1QixXQUFXLENBQUMwQixTQUFELENBQVgsQ0FBdUJHO0FBQS9CLEdBQXREO0FBQ0F4QixFQUFBQSxNQUFNLENBQUNzQixjQUFQLENBQXNCeEIsT0FBTyxDQUFDdUIsU0FBRCxDQUE3QixFQUEwQyxRQUExQyxFQUFvRDtBQUFDRSxJQUFBQSxLQUFLLEVBQUU1QixXQUFXLENBQUMwQixTQUFELENBQVgsQ0FBdUJJO0FBQS9CLEdBQXBEO0FBRUEsTUFBSUMsTUFBTSxHQUFHN0IsS0FBSyxDQUFDd0IsU0FBRCxDQUFsQjtBQUNBLE1BQUlNLFdBQVcsR0FBRzNCLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZeUIsTUFBWixDQUFsQjtBQUVBQyxFQUFBQSxXQUFXLENBQUNQLE9BQVosQ0FBb0IsVUFBVVEsT0FBVixFQUFtQjtBQUN0QyxRQUFJekIsRUFBRSxHQUFHdUIsTUFBTSxDQUFDRSxPQUFELENBQWY7QUFFQTlCLElBQUFBLE9BQU8sQ0FBQ3VCLFNBQUQsQ0FBUCxDQUFtQk8sT0FBbkIsSUFBOEJkLFdBQVcsQ0FBQ1gsRUFBRCxDQUF6QztBQUNBTCxJQUFBQSxPQUFPLENBQUN1QixTQUFELENBQVAsQ0FBbUJPLE9BQW5CLEVBQTRCQyxHQUE1QixHQUFrQzNCLE9BQU8sQ0FBQ0MsRUFBRCxDQUF6QztBQUNBLEdBTEQ7QUFNQSxDQWZEO0FBaUJBMkIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCakMsT0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhbmd6aGljaHVuL0Rlc2t0b3Avc3R1ZHkvdGVzdC1jbGkvbm9kZV9tb2R1bGVzL2NvbG9yLWNvbnZlcnQiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29udmVyc2lvbnMgPSByZXF1aXJlKCcuL2NvbnZlcnNpb25zJyk7XG52YXIgcm91dGUgPSByZXF1aXJlKCcuL3JvdXRlJyk7XG5cbnZhciBjb252ZXJ0ID0ge307XG5cbnZhciBtb2RlbHMgPSBPYmplY3Qua2V5cyhjb252ZXJzaW9ucyk7XG5cbmZ1bmN0aW9uIHdyYXBSYXcoZm4pIHtcblx0dmFyIHdyYXBwZWRGbiA9IGZ1bmN0aW9uIChhcmdzKSB7XG5cdFx0aWYgKGFyZ3MgPT09IHVuZGVmaW5lZCB8fCBhcmdzID09PSBudWxsKSB7XG5cdFx0XHRyZXR1cm4gYXJncztcblx0XHR9XG5cblx0XHRpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcblx0XHRcdGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuXHRcdH1cblxuXHRcdHJldHVybiBmbihhcmdzKTtcblx0fTtcblxuXHQvLyBwcmVzZXJ2ZSAuY29udmVyc2lvbiBwcm9wZXJ0eSBpZiB0aGVyZSBpcyBvbmVcblx0aWYgKCdjb252ZXJzaW9uJyBpbiBmbikge1xuXHRcdHdyYXBwZWRGbi5jb252ZXJzaW9uID0gZm4uY29udmVyc2lvbjtcblx0fVxuXG5cdHJldHVybiB3cmFwcGVkRm47XG59XG5cbmZ1bmN0aW9uIHdyYXBSb3VuZGVkKGZuKSB7XG5cdHZhciB3cmFwcGVkRm4gPSBmdW5jdGlvbiAoYXJncykge1xuXHRcdGlmIChhcmdzID09PSB1bmRlZmluZWQgfHwgYXJncyA9PT0gbnVsbCkge1xuXHRcdFx0cmV0dXJuIGFyZ3M7XG5cdFx0fVxuXG5cdFx0aWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG5cdFx0XHRhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcblx0XHR9XG5cblx0XHR2YXIgcmVzdWx0ID0gZm4oYXJncyk7XG5cblx0XHQvLyB3ZSdyZSBhc3N1bWluZyB0aGUgcmVzdWx0IGlzIGFuIGFycmF5IGhlcmUuXG5cdFx0Ly8gc2VlIG5vdGljZSBpbiBjb252ZXJzaW9ucy5qczsgZG9uJ3QgdXNlIGJveCB0eXBlc1xuXHRcdC8vIGluIGNvbnZlcnNpb24gZnVuY3Rpb25zLlxuXHRcdGlmICh0eXBlb2YgcmVzdWx0ID09PSAnb2JqZWN0Jykge1xuXHRcdFx0Zm9yICh2YXIgbGVuID0gcmVzdWx0Lmxlbmd0aCwgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuXHRcdFx0XHRyZXN1bHRbaV0gPSBNYXRoLnJvdW5kKHJlc3VsdFtpXSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHJlc3VsdDtcblx0fTtcblxuXHQvLyBwcmVzZXJ2ZSAuY29udmVyc2lvbiBwcm9wZXJ0eSBpZiB0aGVyZSBpcyBvbmVcblx0aWYgKCdjb252ZXJzaW9uJyBpbiBmbikge1xuXHRcdHdyYXBwZWRGbi5jb252ZXJzaW9uID0gZm4uY29udmVyc2lvbjtcblx0fVxuXG5cdHJldHVybiB3cmFwcGVkRm47XG59XG5cbm1vZGVscy5mb3JFYWNoKGZ1bmN0aW9uIChmcm9tTW9kZWwpIHtcblx0Y29udmVydFtmcm9tTW9kZWxdID0ge307XG5cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGNvbnZlcnRbZnJvbU1vZGVsXSwgJ2NoYW5uZWxzJywge3ZhbHVlOiBjb252ZXJzaW9uc1tmcm9tTW9kZWxdLmNoYW5uZWxzfSk7XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb252ZXJ0W2Zyb21Nb2RlbF0sICdsYWJlbHMnLCB7dmFsdWU6IGNvbnZlcnNpb25zW2Zyb21Nb2RlbF0ubGFiZWxzfSk7XG5cblx0dmFyIHJvdXRlcyA9IHJvdXRlKGZyb21Nb2RlbCk7XG5cdHZhciByb3V0ZU1vZGVscyA9IE9iamVjdC5rZXlzKHJvdXRlcyk7XG5cblx0cm91dGVNb2RlbHMuZm9yRWFjaChmdW5jdGlvbiAodG9Nb2RlbCkge1xuXHRcdHZhciBmbiA9IHJvdXRlc1t0b01vZGVsXTtcblxuXHRcdGNvbnZlcnRbZnJvbU1vZGVsXVt0b01vZGVsXSA9IHdyYXBSb3VuZGVkKGZuKTtcblx0XHRjb252ZXJ0W2Zyb21Nb2RlbF1bdG9Nb2RlbF0ucmF3ID0gd3JhcFJhdyhmbik7XG5cdH0pO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gY29udmVydDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "conversions",
        "require",
        "route",
        "convert",
        "models",
        "Object",
        "keys",
        "wrapRaw",
        "fn",
        "wrappedFn",
        "args",
        "undefined",
        "arguments",
        "length",
        "Array",
        "prototype",
        "slice",
        "call",
        "conversion",
        "wrapRounded",
        "result",
        "len",
        "i",
        "Math",
        "round",
        "forEach",
        "fromModel",
        "defineProperty",
        "value",
        "channels",
        "labels",
        "routes",
        "routeModels",
        "toModel",
        "raw",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
      "sourcesContent": [
        "var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/conversions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/conversions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/conversions.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/conversions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
        "sourceFileName": "conversions.js"
      }
    },
    "ast": null,
    "code": "/* MIT license */\nvar cssKeywords = require('color-name'); // NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\n\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  if (cssKeywords.hasOwnProperty(key)) {\n    reverseKeywords[cssKeywords[key]] = key;\n  }\n}\n\nvar convert = module.exports = {\n  rgb: {\n    channels: 3,\n    labels: 'rgb'\n  },\n  hsl: {\n    channels: 3,\n    labels: 'hsl'\n  },\n  hsv: {\n    channels: 3,\n    labels: 'hsv'\n  },\n  hwb: {\n    channels: 3,\n    labels: 'hwb'\n  },\n  cmyk: {\n    channels: 4,\n    labels: 'cmyk'\n  },\n  xyz: {\n    channels: 3,\n    labels: 'xyz'\n  },\n  lab: {\n    channels: 3,\n    labels: 'lab'\n  },\n  lch: {\n    channels: 3,\n    labels: 'lch'\n  },\n  hex: {\n    channels: 1,\n    labels: ['hex']\n  },\n  keyword: {\n    channels: 1,\n    labels: ['keyword']\n  },\n  ansi16: {\n    channels: 1,\n    labels: ['ansi16']\n  },\n  ansi256: {\n    channels: 1,\n    labels: ['ansi256']\n  },\n  hcg: {\n    channels: 3,\n    labels: ['h', 'c', 'g']\n  },\n  apple: {\n    channels: 3,\n    labels: ['r16', 'g16', 'b16']\n  },\n  gray: {\n    channels: 1,\n    labels: ['gray']\n  }\n}; // hide .channels and .labels properties\n\nfor (var model in convert) {\n  if (convert.hasOwnProperty(model)) {\n    if (!('channels' in convert[model])) {\n      throw new Error('missing channels property: ' + model);\n    }\n\n    if (!('labels' in convert[model])) {\n      throw new Error('missing channel labels property: ' + model);\n    }\n\n    if (convert[model].labels.length !== convert[model].channels) {\n      throw new Error('channel and label counts mismatch: ' + model);\n    }\n\n    var channels = convert[model].channels;\n    var labels = convert[model].labels;\n    delete convert[model].channels;\n    delete convert[model].labels;\n    Object.defineProperty(convert[model], 'channels', {\n      value: channels\n    });\n    Object.defineProperty(convert[model], 'labels', {\n      value: labels\n    });\n  }\n}\n\nconvert.rgb.hsl = function (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var min = Math.min(r, g, b);\n  var max = Math.max(r, g, b);\n  var delta = max - min;\n  var h;\n  var s;\n  var l;\n\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  l = (min + max) / 2;\n\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n\n  return [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n  var rdif;\n  var gdif;\n  var bdif;\n  var h;\n  var s;\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var v = Math.max(r, g, b);\n  var diff = v - Math.min(r, g, b);\n\n  var diffc = function (c) {\n    return (v - c) / 6 / diff + 1 / 2;\n  };\n\n  if (diff === 0) {\n    h = s = 0;\n  } else {\n    s = diff / v;\n    rdif = diffc(r);\n    gdif = diffc(g);\n    bdif = diffc(b);\n\n    if (r === v) {\n      h = bdif - gdif;\n    } else if (g === v) {\n      h = 1 / 3 + rdif - bdif;\n    } else if (b === v) {\n      h = 2 / 3 + gdif - rdif;\n    }\n\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n  }\n\n  return [h * 360, s * 100, v * 100];\n};\n\nconvert.rgb.hwb = function (rgb) {\n  var r = rgb[0];\n  var g = rgb[1];\n  var b = rgb[2];\n  var h = convert.rgb.hsl(rgb)[0];\n  var w = 1 / 255 * Math.min(r, Math.min(g, b));\n  b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var c;\n  var m;\n  var y;\n  var k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n};\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\n\n\nfunction comparativeDistance(x, y) {\n  return Math.pow(x[0] - y[0], 2) + Math.pow(x[1] - y[1], 2) + Math.pow(x[2] - y[2], 2);\n}\n\nconvert.rgb.keyword = function (rgb) {\n  var reversed = reverseKeywords[rgb];\n\n  if (reversed) {\n    return reversed;\n  }\n\n  var currentClosestDistance = Infinity;\n  var currentClosestKeyword;\n\n  for (var keyword in cssKeywords) {\n    if (cssKeywords.hasOwnProperty(keyword)) {\n      var value = cssKeywords[keyword]; // Compute comparative distance\n\n      var distance = comparativeDistance(rgb, value); // Check if its less, if so set as closest\n\n      if (distance < currentClosestDistance) {\n        currentClosestDistance = distance;\n        currentClosestKeyword = keyword;\n      }\n    }\n  }\n\n  return currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n  return cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n  var xyz = convert.rgb.xyz(rgb);\n  var x = xyz[0];\n  var y = xyz[1];\n  var z = xyz[2];\n  var l;\n  var a;\n  var b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n  var h = hsl[0] / 360;\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n  var t1;\n  var t2;\n  var t3;\n  var rgb;\n  var val;\n\n  if (s === 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) {\n    t2 = l * (1 + s);\n  } else {\n    t2 = l + s - l * s;\n  }\n\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n\n    if (t3 < 0) {\n      t3++;\n    }\n\n    if (t3 > 1) {\n      t3--;\n    }\n\n    if (6 * t3 < 1) {\n      val = t1 + (t2 - t1) * 6 * t3;\n    } else if (2 * t3 < 1) {\n      val = t2;\n    } else if (3 * t3 < 2) {\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    } else {\n      val = t1;\n    }\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n  var h = hsl[0];\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n  var smin = s;\n  var lmin = Math.max(l, 0.01);\n  var sv;\n  var v;\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  smin *= lmin <= 1 ? lmin : 2 - lmin;\n  v = (l + s) / 2;\n  sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n  var h = hsv[0] / 60;\n  var s = hsv[1] / 100;\n  var v = hsv[2] / 100;\n  var hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h);\n  var p = 255 * v * (1 - s);\n  var q = 255 * v * (1 - s * f);\n  var t = 255 * v * (1 - s * (1 - f));\n  v *= 255;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n};\n\nconvert.hsv.hsl = function (hsv) {\n  var h = hsv[0];\n  var s = hsv[1] / 100;\n  var v = hsv[2] / 100;\n  var vmin = Math.max(v, 0.01);\n  var lmin;\n  var sl;\n  var l;\n  l = (2 - s) * v;\n  lmin = (2 - s) * vmin;\n  sl = s * vmin;\n  sl /= lmin <= 1 ? lmin : 2 - lmin;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}; // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nconvert.hwb.rgb = function (hwb) {\n  var h = hwb[0] / 360;\n  var wh = hwb[1] / 100;\n  var bl = hwb[2] / 100;\n  var ratio = wh + bl;\n  var i;\n  var v;\n  var f;\n  var n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) !== 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  var r;\n  var g;\n  var b;\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n  var c = cmyk[0] / 100;\n  var m = cmyk[1] / 100;\n  var y = cmyk[2] / 100;\n  var k = cmyk[3] / 100;\n  var r;\n  var g;\n  var b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n  var x = xyz[0] / 100;\n  var y = xyz[1] / 100;\n  var z = xyz[2] / 100;\n  var r;\n  var g;\n  var b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n  var x = xyz[0];\n  var y = xyz[1];\n  var z = xyz[2];\n  var l;\n  var a;\n  var b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n  var l = lab[0];\n  var a = lab[1];\n  var b = lab[2];\n  var x;\n  var y;\n  var z;\n  y = (l + 16) / 116;\n  x = a / 500 + y;\n  z = y - b / 200;\n  var y2 = Math.pow(y, 3);\n  var x2 = Math.pow(x, 3);\n  var z2 = Math.pow(z, 3);\n  y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n  x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n  z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n  x *= 95.047;\n  y *= 100;\n  z *= 108.883;\n  return [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n  var l = lab[0];\n  var a = lab[1];\n  var b = lab[2];\n  var hr;\n  var h;\n  var c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n  var l = lch[0];\n  var c = lch[1];\n  var h = lch[2];\n  var a;\n  var b;\n  var hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n  var r = args[0];\n  var g = args[1];\n  var b = args[2];\n  var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n  value = Math.round(value / 50);\n\n  if (value === 0) {\n    return 30;\n  }\n\n  var ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));\n\n  if (value === 2) {\n    ansi += 60;\n  }\n\n  return ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n  // optimization here; we already know the value and don't need to get\n  // it converted for us.\n  return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n  var r = args[0];\n  var g = args[1];\n  var b = args[2]; // we use the extended greyscale palette here, with the exception of\n  // black and white. normal palette only has 4 greyscale shades.\n\n  if (r === g && g === b) {\n    if (r < 8) {\n      return 16;\n    }\n\n    if (r > 248) {\n      return 231;\n    }\n\n    return Math.round((r - 8) / 247 * 24) + 232;\n  }\n\n  var ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);\n  return ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n  var color = args % 10; // handle greyscale\n\n  if (color === 0 || color === 7) {\n    if (args > 50) {\n      color += 3.5;\n    }\n\n    color = color / 10.5 * 255;\n    return [color, color, color];\n  }\n\n  var mult = (~~(args > 50) + 1) * 0.5;\n  var r = (color & 1) * mult * 255;\n  var g = (color >> 1 & 1) * mult * 255;\n  var b = (color >> 2 & 1) * mult * 255;\n  return [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n  // handle greyscale\n  if (args >= 232) {\n    var c = (args - 232) * 10 + 8;\n    return [c, c, c];\n  }\n\n  args -= 16;\n  var rem;\n  var r = Math.floor(args / 36) / 5 * 255;\n  var g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n  var b = rem % 6 / 5 * 255;\n  return [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n  var integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);\n  var string = integer.toString(16).toUpperCase();\n  return '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n  var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\n  if (!match) {\n    return [0, 0, 0];\n  }\n\n  var colorString = match[0];\n\n  if (match[0].length === 3) {\n    colorString = colorString.split('').map(function (char) {\n      return char + char;\n    }).join('');\n  }\n\n  var integer = parseInt(colorString, 16);\n  var r = integer >> 16 & 0xFF;\n  var g = integer >> 8 & 0xFF;\n  var b = integer & 0xFF;\n  return [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var max = Math.max(Math.max(r, g), b);\n  var min = Math.min(Math.min(r, g), b);\n  var chroma = max - min;\n  var grayscale;\n  var hue;\n\n  if (chroma < 1) {\n    grayscale = min / (1 - chroma);\n  } else {\n    grayscale = 0;\n  }\n\n  if (chroma <= 0) {\n    hue = 0;\n  } else if (max === r) {\n    hue = (g - b) / chroma % 6;\n  } else if (max === g) {\n    hue = 2 + (b - r) / chroma;\n  } else {\n    hue = 4 + (r - g) / chroma + 4;\n  }\n\n  hue /= 6;\n  hue %= 1;\n  return [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n  var c = 1;\n  var f = 0;\n\n  if (l < 0.5) {\n    c = 2.0 * s * l;\n  } else {\n    c = 2.0 * s * (1.0 - l);\n  }\n\n  if (c < 1.0) {\n    f = (l - 0.5 * c) / (1.0 - c);\n  }\n\n  return [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n  var s = hsv[1] / 100;\n  var v = hsv[2] / 100;\n  var c = s * v;\n  var f = 0;\n\n  if (c < 1.0) {\n    f = (v - c) / (1 - c);\n  }\n\n  return [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n  var h = hcg[0] / 360;\n  var c = hcg[1] / 100;\n  var g = hcg[2] / 100;\n\n  if (c === 0.0) {\n    return [g * 255, g * 255, g * 255];\n  }\n\n  var pure = [0, 0, 0];\n  var hi = h % 1 * 6;\n  var v = hi % 1;\n  var w = 1 - v;\n  var mg = 0;\n\n  switch (Math.floor(hi)) {\n    case 0:\n      pure[0] = 1;\n      pure[1] = v;\n      pure[2] = 0;\n      break;\n\n    case 1:\n      pure[0] = w;\n      pure[1] = 1;\n      pure[2] = 0;\n      break;\n\n    case 2:\n      pure[0] = 0;\n      pure[1] = 1;\n      pure[2] = v;\n      break;\n\n    case 3:\n      pure[0] = 0;\n      pure[1] = w;\n      pure[2] = 1;\n      break;\n\n    case 4:\n      pure[0] = v;\n      pure[1] = 0;\n      pure[2] = 1;\n      break;\n\n    default:\n      pure[0] = 1;\n      pure[1] = 0;\n      pure[2] = w;\n  }\n\n  mg = (1.0 - c) * g;\n  return [(c * pure[0] + mg) * 255, (c * pure[1] + mg) * 255, (c * pure[2] + mg) * 255];\n};\n\nconvert.hcg.hsv = function (hcg) {\n  var c = hcg[1] / 100;\n  var g = hcg[2] / 100;\n  var v = c + g * (1.0 - c);\n  var f = 0;\n\n  if (v > 0.0) {\n    f = c / v;\n  }\n\n  return [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n  var c = hcg[1] / 100;\n  var g = hcg[2] / 100;\n  var l = g * (1.0 - c) + 0.5 * c;\n  var s = 0;\n\n  if (l > 0.0 && l < 0.5) {\n    s = c / (2 * l);\n  } else if (l >= 0.5 && l < 1.0) {\n    s = c / (2 * (1 - l));\n  }\n\n  return [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n  var c = hcg[1] / 100;\n  var g = hcg[2] / 100;\n  var v = c + g * (1.0 - c);\n  return [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n  var w = hwb[1] / 100;\n  var b = hwb[2] / 100;\n  var v = 1 - b;\n  var c = v - w;\n  var g = 0;\n\n  if (c < 1) {\n    g = (v - c) / (1 - c);\n  }\n\n  return [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n  return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n  return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n  return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n  return [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n  return [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n  return [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n  return [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n  var val = Math.round(gray[0] / 100 * 255) & 0xFF;\n  var integer = (val << 16) + (val << 8) + val;\n  var string = integer.toString(16).toUpperCase();\n  return '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n  var val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n  return [val / 255 * 100];\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "conversions.js"
      ],
      "names": [
        "cssKeywords",
        "require",
        "reverseKeywords",
        "key",
        "hasOwnProperty",
        "convert",
        "module",
        "exports",
        "rgb",
        "channels",
        "labels",
        "hsl",
        "hsv",
        "hwb",
        "cmyk",
        "xyz",
        "lab",
        "lch",
        "hex",
        "keyword",
        "ansi16",
        "ansi256",
        "hcg",
        "apple",
        "gray",
        "model",
        "Error",
        "length",
        "Object",
        "defineProperty",
        "value",
        "r",
        "g",
        "b",
        "min",
        "Math",
        "max",
        "delta",
        "h",
        "s",
        "l",
        "rdif",
        "gdif",
        "bdif",
        "v",
        "diff",
        "diffc",
        "c",
        "w",
        "m",
        "y",
        "k",
        "comparativeDistance",
        "x",
        "pow",
        "reversed",
        "currentClosestDistance",
        "Infinity",
        "currentClosestKeyword",
        "distance",
        "z",
        "a",
        "t1",
        "t2",
        "t3",
        "val",
        "i",
        "smin",
        "lmin",
        "sv",
        "hi",
        "floor",
        "f",
        "p",
        "q",
        "t",
        "vmin",
        "sl",
        "wh",
        "bl",
        "ratio",
        "n",
        "y2",
        "x2",
        "z2",
        "hr",
        "atan2",
        "PI",
        "sqrt",
        "cos",
        "sin",
        "args",
        "arguments",
        "round",
        "ansi",
        "color",
        "mult",
        "rem",
        "integer",
        "string",
        "toString",
        "toUpperCase",
        "substring",
        "match",
        "colorString",
        "split",
        "map",
        "char",
        "join",
        "parseInt",
        "chroma",
        "grayscale",
        "hue",
        "pure",
        "mg"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
      "sourcesContent": [
        "/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDaEIsZUFBYSxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxDQURHO0FBRWhCLGtCQUFnQixDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxDQUZBO0FBR2hCLFVBQVEsQ0FBQyxDQUFELEVBQUksR0FBSixFQUFTLEdBQVQsQ0FIUTtBQUloQixnQkFBYyxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxDQUpFO0FBS2hCLFdBQVMsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsQ0FMTztBQU1oQixXQUFTLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxHQUFYLENBTk87QUFPaEIsWUFBVSxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxDQVBNO0FBUWhCLFdBQVMsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsQ0FSTztBQVNoQixvQkFBa0IsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsQ0FURjtBQVVoQixVQUFRLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxHQUFQLENBVlE7QUFXaEIsZ0JBQWMsQ0FBQyxHQUFELEVBQU0sRUFBTixFQUFVLEdBQVYsQ0FYRTtBQVloQixXQUFTLENBQUMsR0FBRCxFQUFNLEVBQU4sRUFBVSxFQUFWLENBWk87QUFhaEIsZUFBYSxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxDQWJHO0FBY2hCLGVBQWEsQ0FBQyxFQUFELEVBQUssR0FBTCxFQUFVLEdBQVYsQ0FkRztBQWVoQixnQkFBYyxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsQ0FBWCxDQWZFO0FBZ0JoQixlQUFhLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxFQUFYLENBaEJHO0FBaUJoQixXQUFTLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxFQUFYLENB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QUFNLEdBQU4sRUFBVyxDQUFYLENBbkpNO0FBb0poQixpQkFBZSxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsRUFBWDtBQXBKQyxDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvd2FuZ3poaWNodW4vRGVza3RvcC9zdHVkeS90ZXN0LWNsaS9ub2RlX21vZHVsZXMvY29sb3ItbmFtZSIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcblx0XCJhbGljZWJsdWVcIjogWzI0MCwgMjQ4LCAyNTVdLFxyXG5cdFwiYW50aXF1ZXdoaXRlXCI6IFsyNTAsIDIzNSwgMjE1XSxcclxuXHRcImFxdWFcIjogWzAsIDI1NSwgMjU1XSxcclxuXHRcImFxdWFtYXJpbmVcIjogWzEyNywgMjU1LCAyMTJdLFxyXG5cdFwiYXp1cmVcIjogWzI0MCwgMjU1LCAyNTVdLFxyXG5cdFwiYmVpZ2VcIjogWzI0NSwgMjQ1LCAyMjBdLFxyXG5cdFwiYmlzcXVlXCI6IFsyNTUsIDIyOCwgMTk2XSxcclxuXHRcImJsYWNrXCI6IFswLCAwLCAwXSxcclxuXHRcImJsYW5jaGVkYWxtb25kXCI6IFsyNTUsIDIzNSwgMjA1XSxcclxuXHRcImJsdWVcIjogWzAsIDAsIDI1NV0sXHJcblx0XCJibHVldmlvbGV0XCI6IFsxMzgsIDQzLCAyMjZdLFxyXG5cdFwiYnJvd25cIjogWzE2NSwgNDIsIDQyXSxcclxuXHRcImJ1cmx5d29vZFwiOiBbMjIyLCAxODQsIDEzNV0sXHJcblx0XCJjYWRldGJsdWVcIjogWzk1LCAxNTgsIDE2MF0sXHJcblx0XCJjaGFydHJldXNlXCI6IFsxMjcsIDI1NSwgMF0sXHJcblx0XCJjaG9jb2xhdGVcIjogWzIxMCwgMTA1LCAzMF0sXHJcblx0XCJjb3JhbFwiOiBbMjU1LCAxMjcsIDgwXSxcclxuXHRcImNvcm5mbG93ZXJibHVlXCI6IFsxMDAsIDE0OSwgMjM3XSxcclxuXHRcImNvcm5zaWxrXCI6IFsyNTUsIDI0OCwgMjIwXSxcclxuXHRcImNyaW1zb25cIjogWzIyMCwgMjAsIDYwXSxcclxuXHRcImN5YW5cIjogWzAsIDI1NSwgMjU1XSxcclxuXHRcImRhcmtibHVlXCI6IFswLCAwLCAxMzldLFxyXG5cdFwiZGFya2N5YW5cIjogWzAsIDEzOSwgMTM5XSxcclxuXHRcImRhcmtnb2xkZW5yb2RcIjogWzE4NCwgMTM0LCAxMV0sXHJcblx0XCJkYXJrZ3JheVwiOiBbMTY5LCAxNjksIDE2OV0sXHJcblx0XCJkYXJrZ3JlZW5cIjogWzAsIDEwMCwgMF0sXHJcblx0XCJkYXJrZ3JleVwiOiBbMTY5LCAxNjksIDE2OV0sXHJcblx0XCJkYXJra2hha2lcIjogWzE4OSwgMTgzLCAxMDddLFxyXG5cdFwiZGFya21hZ2VudGFcIjogWzEzOSwgMCwgMTM5XSxcclxuXHRcImRhcmtvbGl2ZWdyZWVuXCI6IFs4NSwgMTA3LCA0N10sXHJcblx0XCJkYXJrb3JhbmdlXCI6IFsyNTUsIDE0MCwgMF0sXHJcblx0XCJkYXJrb3JjaGlkXCI6IFsxNTMsIDUwLCAyMDRdLFxyXG5cdFwiZGFya3JlZFwiOiBbMTM5LCAwLCAwXSxcclxuXHRcImRhcmtzYWxtb25cIjogWzIzMywgMTUwLCAxMjJdLFxyXG5cdFwiZGFya3NlYWdyZWVuXCI6IFsxNDMsIDE4OCwgMTQzXSxcclxuXHRcImRhcmtzbGF0ZWJsdWVcIjogWzcyLCA2MSwgMTM5XSxcclxuXHRcImRhcmtzbGF0ZWdyYXlcIjogWzQ3LCA3OSwgNzldLFxyXG5cdFwiZGFya3NsYXRlZ3JleVwiOiBbNDcsIDc5LCA3OV0sXHJcblx0XCJkYXJrdHVycXVvaXNlXCI6IFswLCAyMDYsIDIwOV0sXHJcblx0XCJkYXJrdmlvbGV0XCI6IFsxNDgsIDAsIDIxMV0sXHJcblx0XCJkZWVwcGlua1wiOiBbMjU1LCAyMCwgMTQ3XSxcclxuXHRcImRlZXBza3libHVlXCI6IFswLCAxOTEsIDI1NV0sXHJcblx0XCJkaW1ncmF5XCI6IFsxMDUsIDEwNSwgMTA1XSxcclxuXHRcImRpbWdyZXlcIjogWzEwNSwgMTA1LCAxMDVdLFxyXG5cdFwiZG9kZ2VyYmx1ZVwiOiBbMzAsIDE0NCwgMjU1XSxcclxuXHRcImZpcmVicmlja1wiOiBbMTc4LCAzNCwgMzRdLFxyXG5cdFwiZmxvcmFsd2hpdGVcIjogWzI1NSwgMjUwLCAyNDBdLFxyXG5cdFwiZm9yZXN0Z3JlZW5cIjogWzM0LCAxMzksIDM0XSxcclxuXHRcImZ1Y2hzaWFcIjogWzI1NSwgMCwgMjU1XSxcclxuXHRcImdhaW5zYm9yb1wiOiBbMjIwLCAyMjAsIDIyMF0sXHJcblx0XCJnaG9zdHdoaXRlXCI6IFsyNDgsIDI0OCwgMjU1XSxcclxuXHRcImdvbGRcIjogWzI1NSwgMjE1LCAwXSxcclxuXHRcImdvbGRlbnJvZFwiOiBbMjE4LCAxNjUsIDMyXSxcclxuXHRcImdyYXlcIjogWzEyOCwgMTI4LCAxMjhdLFxyXG5cdFwiZ3JlZW5cIjogWzAsIDEyOCwgMF0sXHJcblx0XCJncmVlbnllbGxvd1wiOiBbMTczLCAyNTUsIDQ3XSxcclxuXHRcImdyZXlcIjogWzEyOCwgMTI4LCAxMjhdLFxyXG5cdFwiaG9uZXlkZXdcIjogWzI0MCwgMjU1LCAyNDBdLFxyXG5cdFwiaG90cGlua1wiOiBbMjU1LCAxMDUsIDE4MF0sXHJcblx0XCJpbmRpYW5yZWRcIjogWzIwNSwgOTIsIDkyXSxcclxuXHRcImluZGlnb1wiOiBbNzUsIDAsIDEzMF0sXHJcblx0XCJpdm9yeVwiOiBbMjU1LCAyNTUsIDI0MF0sXHJcblx0XCJraGFraVwiOiBbMjQwLCAyMzAsIDE0MF0sXHJcblx0XCJsYXZlbmRlclwiOiBbMjMwLCAyMzAsIDI1MF0sXHJcblx0XCJsYXZlbmRlcmJsdXNoXCI6IFsyNTUsIDI0MCwgMjQ1XSxcclxuXHRcImxhd25ncmVlblwiOiBbMTI0LCAyNTIsIDBdLFxyXG5cdFwibGVtb25jaGlmZm9uXCI6IFsyNTUsIDI1MCwgMjA1XSxcclxuXHRcImxpZ2h0Ymx1ZVwiOiBbMTczLCAyMTYsIDIzMF0sXHJcblx0XCJsaWdodGNvcmFsXCI6IFsyNDAsIDEyOCwgMTI4XSxcclxuXHRcImxpZ2h0Y3lhblwiOiBbMjI0LCAyNTUsIDI1NV0sXHJcblx0XCJsaWdodGdvbGRlbnJvZHllbGxvd1wiOiBbMjUwLCAyNTAsIDIxMF0sXHJcblx0XCJsaWdodGdyYXlcIjogWzIxMSwgMjExLCAyMTFdLFxyXG5cdFwibGlnaHRncmVlblwiOiBbMTQ0LCAyMzgsIDE0NF0sXHJcblx0XCJsaWdodGdyZXlcIjogWzIxMSwgMjExLCAyMTFdLFxyXG5cdFwibGlnaHRwaW5rXCI6IFsyNTUsIDE4MiwgMTkzXSxcclxuXHRcImxpZ2h0c2FsbW9uXCI6IFsyNTUsIDE2MCwgMTIyXSxcclxuXHRcImxpZ2h0c2VhZ3JlZW5cIjogWzMyLCAxNzgsIDE3MF0sXHJcblx0XCJsaWdodHNreWJsdWVcIjogWzEzNSwgMjA2LCAyNTBdLFxyXG5cdFwibGlnaHRzbGF0ZWdyYXlcIjogWzExOSwgMTM2LCAxNTNdLFxyXG5cdFwibGlnaHRzbGF0ZWdyZXlcIjogWzExOSwgMTM2LCAxNTNdLFxyXG5cdFwibGlnaHRzdGVlbGJsdWVcIjogWzE3NiwgMTk2LCAyMjJdLFxyXG5cdFwibGlnaHR5ZWxsb3dcIjogWzI1NSwgMjU1LCAyMjRdLFxyXG5cdFwibGltZVwiOiBbMCwgMjU1LCAwXSxcclxuXHRcImxpbWVncmVlblwiOiBbNTAsIDIwNSwgNTBdLFxyXG5cdFwibGluZW5cIjogWzI1MCwgMjQwLCAyMzBdLFxyXG5cdFwibWFnZW50YVwiOiBbMjU1LCAwLCAyNTVdLFxyXG5cdFwibWFyb29uXCI6IFsxMjgsIDAsIDBdLFxyXG5cdFwibWVkaXVtYXF1YW1hcmluZVwiOiBbMTAyLCAyMDUsIDE3MF0sXHJcblx0XCJtZWRpdW1ibHVlXCI6IFswLCAwLCAyMDVdLFxyXG5cdFwibWVkaXVtb3JjaGlkXCI6IFsxODYsIDg1LCAyMTFdLFxyXG5cdFwibWVkaXVtcHVycGxlXCI6IFsxNDcsIDExMiwgMjE5XSxcclxuXHRcIm1lZGl1bXNlYWdyZWVuXCI6IFs2MCwgMTc5LCAxMTNdLFxyXG5cdFwibWVkaXVtc2xhdGVibHVlXCI6IFsxMjMsIDEwNCwgMjM4XSxcclxuXHRcIm1lZGl1bXNwcmluZ2dyZWVuXCI6IFswLCAyNTAsIDE1NF0sXHJcblx0XCJtZWRpdW10dXJxdW9pc2VcIjogWzcyLCAyMDksIDIwNF0sXHJcblx0XCJtZWRpdW12aW9sZXRyZWRcIjogWzE5OSwgMjEsIDEzM10sXHJcblx0XCJtaWRuaWdodGJsdWVcIjogWzI1LCAyNSwgMTEyXSxcclxuXHRcIm1pbnRjcmVhbVwiOiBbMjQ1LCAyNTUsIDI1MF0sXHJcblx0XCJtaXN0eXJvc2VcIjogWzI1NSwgMjI4LCAyMjVdLFxyXG5cdFwibW9jY2FzaW5cIjogWzI1NSwgMjI4LCAxODFdLFxyXG5cdFwibmF2YWpvd2hpdGVcIjogWzI1NSwgMjIyLCAxNzNdLFxyXG5cdFwibmF2eVwiOiBbMCwgMCwgMTI4XSxcclxuXHRcIm9sZGxhY2VcIjogWzI1MywgMjQ1LCAyMzBdLFxyXG5cdFwib2xpdmVcIjogWzEyOCwgMTI4LCAwXSxcclxuXHRcIm9saXZlZHJhYlwiOiBbMTA3LCAxNDIsIDM1XSxcclxuXHRcIm9yYW5nZVwiOiBbMjU1LCAxNjUsIDBdLFxyXG5cdFwib3JhbmdlcmVkXCI6IFsyNTUsIDY5LCAwXSxcclxuXHRcIm9yY2hpZFwiOiBbMjE4LCAxMTIsIDIxNF0sXHJcblx0XCJwYWxlZ29sZGVucm9kXCI6IFsyMzgsIDIzMiwgMTcwXSxcclxuXHRcInBhbGVncmVlblwiOiBbMTUyLCAyNTEsIDE1Ml0sXHJcblx0XCJwYWxldHVycXVvaXNlXCI6IFsxNzUsIDIzOCwgMjM4XSxcclxuXHRcInBhbGV2aW9sZXRyZWRcIjogWzIxOSwgMTEyLCAxNDddLFxyXG5cdFwicGFwYXlhd2hpcFwiOiBbMjU1LCAyMzksIDIxM10sXHJcblx0XCJwZWFjaHB1ZmZcIjogWzI1NSwgMjE4LCAxODVdLFxyXG5cdFwicGVydVwiOiBbMjA1LCAxMzMsIDYzXSxcclxuXHRcInBpbmtcIjogWzI1NSwgMTkyLCAyMDNdLFxyXG5cdFwicGx1bVwiOiBbMjIxLCAxNjAsIDIyMV0sXHJcblx0XCJwb3dkZXJibHVlXCI6IFsxNzYsIDIyNCwgMjMwXSxcclxuXHRcInB1cnBsZVwiOiBbMTI4LCAwLCAxMjhdLFxyXG5cdFwicmViZWNjYXB1cnBsZVwiOiBbMTAyLCA1MSwgMTUzXSxcclxuXHRcInJlZFwiOiBbMjU1LCAwLCAwXSxcclxuXHRcInJvc3licm93blwiOiBbMTg4LCAxNDMsIDE0M10sXHJcblx0XCJyb3lhbGJsdWVcIjogWzY1LCAxMDUsIDIyNV0sXHJcblx0XCJzYWRkbGVicm93blwiOiBbMTM5LCA2OSwgMTldLFxyXG5cdFwic2FsbW9uXCI6IFsyNTAsIDEyOCwgMTE0XSxcclxuXHRcInNhbmR5YnJvd25cIjogWzI0NCwgMTY0LCA5Nl0sXHJcblx0XCJzZWFncmVlblwiOiBbNDYsIDEzOSwgODddLFxyXG5cdFwic2Vhc2hlbGxcIjogWzI1NSwgMjQ1LCAyMzhdLFxyXG5cdFwic2llbm5hXCI6IFsxNjAsIDgyLCA0NV0sXHJcblx0XCJzaWx2ZXJcIjogWzE5MiwgMTkyLCAxOTJdLFxyXG5cdFwic2t5Ymx1ZVwiOiBbMTM1LCAyMDYsIDIzNV0sXHJcblx0XCJzbGF0ZWJsdWVcIjogWzEwNiwgOTAsIDIwNV0sXHJcblx0XCJzbGF0ZWdyYXlcIjogWzExMiwgMTI4LCAxNDRdLFxyXG5cdFwic2xhdGVncmV5XCI6IFsxMTIsIDEyOCwgMTQ0XSxcclxuXHRcInNub3dcIjogWzI1NSwgMjUwLCAyNTBdLFxyXG5cdFwic3ByaW5nZ3JlZW5cIjogWzAsIDI1NSwgMTI3XSxcclxuXHRcInN0ZWVsYmx1ZVwiOiBbNzAsIDEzMCwgMTgwXSxcclxuXHRcInRhblwiOiBbMjEwLCAxODAsIDE0MF0sXHJcblx0XCJ0ZWFsXCI6IFswLCAxMjgsIDEyOF0sXHJcblx0XCJ0aGlzdGxlXCI6IFsyMTYsIDE5MSwgMjE2XSxcclxuXHRcInRvbWF0b1wiOiBbMjU1LCA5OSwgNzFdLFxyXG5cdFwidHVycXVvaXNlXCI6IFs2NCwgMjI0LCAyMDhdLFxyXG5cdFwidmlvbGV0XCI6IFsyMzgsIDEzMCwgMjM4XSxcclxuXHRcIndoZWF0XCI6IFsyNDUsIDIyMiwgMTc5XSxcclxuXHRcIndoaXRlXCI6IFsyNTUsIDI1NSwgMjU1XSxcclxuXHRcIndoaXRlc21va2VcIjogWzI0NSwgMjQ1LCAyNDVdLFxyXG5cdFwieWVsbG93XCI6IFsyNTUsIDI1NSwgMF0sXHJcblx0XCJ5ZWxsb3dncmVlblwiOiBbMTU0LCAyMDUsIDUwXVxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-name",
      "sourcesContent": [
        "'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1500156807000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/route.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert/route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
        "sourceFileName": "route.js"
      }
    },
    "ast": null,
    "code": "var conversions = require('./conversions');\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\n\nfunction buildGraph() {\n  var graph = {}; // https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\n  var models = Object.keys(conversions);\n\n  for (var len = models.length, i = 0; i < len; i++) {\n    graph[models[i]] = {\n      // http://jsperf.com/1-vs-infinity\n      // micro-opt, but this is simple.\n      distance: -1,\n      parent: null\n    };\n  }\n\n  return graph;\n} // https://en.wikipedia.org/wiki/Breadth-first_search\n\n\nfunction deriveBFS(fromModel) {\n  var graph = buildGraph();\n  var queue = [fromModel]; // unshift -> queue -> pop\n\n  graph[fromModel].distance = 0;\n\n  while (queue.length) {\n    var current = queue.pop();\n    var adjacents = Object.keys(conversions[current]);\n\n    for (var len = adjacents.length, i = 0; i < len; i++) {\n      var adjacent = adjacents[i];\n      var node = graph[adjacent];\n\n      if (node.distance === -1) {\n        node.distance = graph[current].distance + 1;\n        node.parent = current;\n        queue.unshift(adjacent);\n      }\n    }\n  }\n\n  return graph;\n}\n\nfunction link(from, to) {\n  return function (args) {\n    return to(from(args));\n  };\n}\n\nfunction wrapConversion(toModel, graph) {\n  var path = [graph[toModel].parent, toModel];\n  var fn = conversions[graph[toModel].parent][toModel];\n  var cur = graph[toModel].parent;\n\n  while (graph[cur].parent) {\n    path.unshift(graph[cur].parent);\n    fn = link(conversions[graph[cur].parent][cur], fn);\n    cur = graph[cur].parent;\n  }\n\n  fn.conversion = path;\n  return fn;\n}\n\nmodule.exports = function (fromModel) {\n  var graph = deriveBFS(fromModel);\n  var conversion = {};\n  var models = Object.keys(graph);\n\n  for (var len = models.length, i = 0; i < len; i++) {\n    var toModel = models[i];\n    var node = graph[toModel];\n\n    if (node.parent === null) {\n      // no possible conversion, or this node is the source model.\n      continue;\n    }\n\n    conversion[toModel] = wrapConversion(toModel, graph);\n  }\n\n  return conversion;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlLmpzIl0sIm5hbWVzIjpbImNvbnZlcnNpb25zIiwicmVxdWlyZSIsImJ1aWxkR3JhcGgiLCJncmFwaCIsIm1vZGVscyIsIk9iamVjdCIsImtleXMiLCJsZW4iLCJsZW5ndGgiLCJpIiwiZGlzdGFuY2UiLCJwYXJlbnQiLCJkZXJpdmVCRlMiLCJmcm9tTW9kZWwiLCJxdWV1ZSIsImN1cnJlbnQiLCJwb3AiLCJhZGphY2VudHMiLCJhZGphY2VudCIsIm5vZGUiLCJ1bnNoaWZ0IiwibGluayIsImZyb20iLCJ0byIsImFyZ3MiLCJ3cmFwQ29udmVyc2lvbiIsInRvTW9kZWwiLCJwYXRoIiwiZm4iLCJjdXIiLCJjb252ZXJzaW9uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsV0FBVyxHQUFHQyxPQUFPLENBQUMsZUFBRCxDQUF6QjtBQUVBOzs7Ozs7Ozs7Ozs7QUFXQSxTQUFTQyxVQUFULEdBQXNCO0FBQ3JCLE1BQUlDLEtBQUssR0FBRyxFQUFaLENBRHFCLENBRXJCOztBQUNBLE1BQUlDLE1BQU0sR0FBR0MsTUFBTSxDQUFDQyxJQUFQLENBQVlOLFdBQVosQ0FBYjs7QUFFQSxPQUFLLElBQUlPLEdBQUcsR0FBR0gsTUFBTSxDQUFDSSxNQUFqQixFQUF5QkMsQ0FBQyxHQUFHLENBQWxDLEVBQXFDQSxDQUFDLEdBQUdGLEdBQXpDLEVBQThDRSxDQUFDLEVBQS9DLEVBQW1EO0FBQ2xETixJQUFBQSxLQUFLLENBQUNDLE1BQU0sQ0FBQ0ssQ0FBRCxDQUFQLENBQUwsR0FBbUI7QUFDbEI7QUFDQTtBQUNBQyxNQUFBQSxRQUFRLEVBQUUsQ0FBQyxDQUhPO0FBSWxCQyxNQUFBQSxNQUFNLEVBQUU7QUFKVSxLQUFuQjtBQU1BOztBQUVELFNBQU9SLEtBQVA7QUFDQSxDLENBRUQ7OztBQUNBLFNBQVNTLFNBQVQsQ0FBbUJDLFNBQW5CLEVBQThCO0FBQzdCLE1BQUlWLEtBQUssR0FBR0QsVUFBVSxFQUF0QjtBQUNBLE1BQUlZLEtB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TyxHQUFHdEIsTUFBTSxDQUFDSyxDQUFELENBQXBCO0FBQ0EsUUFBSVUsSUFBSSxHQUFHaEIsS0FBSyxDQUFDdUIsT0FBRCxDQUFoQjs7QUFFQSxRQUFJUCxJQUFJLENBQUNSLE1BQUwsS0FBZ0IsSUFBcEIsRUFBMEI7QUFDekI7QUFDQTtBQUNBOztBQUVEbUIsSUFBQUEsVUFBVSxDQUFDSixPQUFELENBQVYsR0FBc0JELGNBQWMsQ0FBQ0MsT0FBRCxFQUFVdkIsS0FBVixDQUFwQztBQUNBOztBQUVELFNBQU8yQixVQUFQO0FBQ0EsQ0FsQkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhbmd6aGljaHVuL0Rlc2t0b3Avc3R1ZHkvdGVzdC1jbGkvbm9kZV9tb2R1bGVzL2NvbG9yLWNvbnZlcnQiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29udmVyc2lvbnMgPSByZXF1aXJlKCcuL2NvbnZlcnNpb25zJyk7XG5cbi8qXG5cdHRoaXMgZnVuY3Rpb24gcm91dGVzIGEgbW9kZWwgdG8gYWxsIG90aGVyIG1vZGVscy5cblxuXHRhbGwgZnVuY3Rpb25zIHRoYXQgYXJlIHJvdXRlZCBoYXZlIGEgcHJvcGVydHkgYC5jb252ZXJzaW9uYCBhdHRhY2hlZFxuXHR0byB0aGUgcmV0dXJuZWQgc3ludGhldGljIGZ1bmN0aW9uLiBUaGlzIHByb3BlcnR5IGlzIGFuIGFycmF5XG5cdG9mIHN0cmluZ3MsIGVhY2ggd2l0aCB0aGUgc3RlcHMgaW4gYmV0d2VlbiB0aGUgJ2Zyb20nIGFuZCAndG8nXG5cdGNvbG9yIG1vZGVscyAoaW5jbHVzaXZlKS5cblxuXHRjb252ZXJzaW9ucyB0aGF0IGFyZSBub3QgcG9zc2libGUgc2ltcGx5IGFyZSBub3QgaW5jbHVkZWQuXG4qL1xuXG5mdW5jdGlvbiBidWlsZEdyYXBoKCkge1xuXHR2YXIgZ3JhcGggPSB7fTtcblx0Ly8gaHR0cHM6Ly9qc3BlcmYuY29tL29iamVjdC1rZXlzLXZzLWZvci1pbi13aXRoLWNsb3N1cmUvM1xuXHR2YXIgbW9kZWxzID0gT2JqZWN0LmtleXMoY29udmVyc2lvbnMpO1xuXG5cdGZvciAodmFyIGxlbiA9IG1vZGVscy5sZW5ndGgsIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0XHRncmFwaFttb2RlbHNbaV1dID0ge1xuXHRcdFx0Ly8gaHR0cDovL2pzcGVyZi5jb20vMS12cy1pbmZpbml0eVxuXHRcdFx0Ly8gbWljcm8tb3B0LCBidXQgdGhpcyBpcyBzaW1wbGUuXG5cdFx0XHRkaXN0YW5jZTogLTEsXG5cdFx0XHRwYXJlbnQ6IG51bGxcblx0XHR9O1xuXHR9XG5cblx0cmV0dXJuIGdyYXBoO1xufVxuXG4vLyBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CcmVhZHRoLWZpcnN0X3NlYXJjaFxuZnVuY3Rpb24gZGVyaXZlQkZTKGZyb21Nb2RlbCkge1xuXHR2YXIgZ3JhcGggPSBidWlsZEdyYXBoKCk7XG5cdHZhciBxdWV1ZSA9IFtmcm9tTW9kZWxdOyAvLyB1bnNoaWZ0IC0+IHF1ZXVlIC0+IHBvcFxuXG5cdGdyYXBoW2Zyb21Nb2RlbF0uZGlzdGFuY2UgPSAwO1xuXG5cdHdoaWxlIChxdWV1ZS5sZW5ndGgpIHtcblx0XHR2YXIgY3VycmVudCA9IHF1ZXVlLnBvcCgpO1xuXHRcdHZhciBhZGphY2VudHMgPSBPYmplY3Qua2V5cyhjb252ZXJzaW9uc1tjdXJyZW50XSk7XG5cblx0XHRmb3IgKHZhciBsZW4gPSBhZGphY2VudHMubGVuZ3RoLCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG5cdFx0XHR2YXIgYWRqYWNlbnQgPSBhZGphY2VudHNbaV07XG5cdFx0XHR2YXIgbm9kZSA9IGdyYXBoW2FkamFjZW50XTtcblxuXHRcdFx0aWYgKG5vZGUuZGlzdGFuY2UgPT09IC0xKSB7XG5cdFx0XHRcdG5vZGUuZGlzdGFuY2UgPSBncmFwaFtjdXJyZW50XS5kaXN0YW5jZSArIDE7XG5cdFx0XHRcdG5vZGUucGFyZW50ID0gY3VycmVudDtcblx0XHRcdFx0cXVldWUudW5zaGlmdChhZGphY2VudCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGdyYXBoO1xufVxuXG5mdW5jdGlvbiBsaW5rKGZyb20sIHRvKSB7XG5cdHJldHVybiBmdW5jdGlvbiAoYXJncykge1xuXHRcdHJldHVybiB0byhmcm9tKGFyZ3MpKTtcblx0fTtcbn1cblxuZnVuY3Rpb24gd3JhcENvbnZlcnNpb24odG9Nb2RlbCwgZ3JhcGgpIHtcblx0dmFyIHBhdGggPSBbZ3JhcGhbdG9Nb2RlbF0ucGFyZW50LCB0b01vZGVsXTtcblx0dmFyIGZuID0gY29udmVyc2lvbnNbZ3JhcGhbdG9Nb2RlbF0ucGFyZW50XVt0b01vZGVsXTtcblxuXHR2YXIgY3VyID0gZ3JhcGhbdG9Nb2RlbF0ucGFyZW50O1xuXHR3aGlsZSAoZ3JhcGhbY3VyXS5wYXJlbnQpIHtcblx0XHRwYXRoLnVuc2hpZnQoZ3JhcGhbY3VyXS5wYXJlbnQpO1xuXHRcdGZuID0gbGluayhjb252ZXJzaW9uc1tncmFwaFtjdXJdLnBhcmVudF1bY3VyXSwgZm4pO1xuXHRcdGN1ciA9IGdyYXBoW2N1cl0ucGFyZW50O1xuXHR9XG5cblx0Zm4uY29udmVyc2lvbiA9IHBhdGg7XG5cdHJldHVybiBmbjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZnJvbU1vZGVsKSB7XG5cdHZhciBncmFwaCA9IGRlcml2ZUJGUyhmcm9tTW9kZWwpO1xuXHR2YXIgY29udmVyc2lvbiA9IHt9O1xuXG5cdHZhciBtb2RlbHMgPSBPYmplY3Qua2V5cyhncmFwaCk7XG5cdGZvciAodmFyIGxlbiA9IG1vZGVscy5sZW5ndGgsIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0XHR2YXIgdG9Nb2RlbCA9IG1vZGVsc1tpXTtcblx0XHR2YXIgbm9kZSA9IGdyYXBoW3RvTW9kZWxdO1xuXG5cdFx0aWYgKG5vZGUucGFyZW50ID09PSBudWxsKSB7XG5cdFx0XHQvLyBubyBwb3NzaWJsZSBjb252ZXJzaW9uLCBvciB0aGlzIG5vZGUgaXMgdGhlIHNvdXJjZSBtb2RlbC5cblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGNvbnZlcnNpb25bdG9Nb2RlbF0gPSB3cmFwQ29udmVyc2lvbih0b01vZGVsLCBncmFwaCk7XG5cdH1cblxuXHRyZXR1cm4gY29udmVyc2lvbjtcbn07XG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "route.js"
      ],
      "names": [
        "conversions",
        "require",
        "buildGraph",
        "graph",
        "models",
        "Object",
        "keys",
        "len",
        "length",
        "i",
        "distance",
        "parent",
        "deriveBFS",
        "fromModel",
        "queue",
        "current",
        "pop",
        "adjacents",
        "adjacent",
        "node",
        "unshift",
        "link",
        "from",
        "to",
        "args",
        "wrapConversion",
        "toModel",
        "path",
        "fn",
        "cur",
        "conversion",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/color-convert",
      "sourcesContent": [
        "var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/templates.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/templates.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/templates.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk/templates.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk",
        "sourceFileName": "templates.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\nconst ESCAPES = new Map([['n', '\\n'], ['r', '\\r'], ['t', '\\t'], ['b', '\\b'], ['f', '\\f'], ['v', '\\v'], ['0', '\\0'], ['\\\\', '\\\\'], ['e', '\\u001B'], ['a', '\\u0007']]);\n\nfunction unescape(c) {\n  if (c[0] === 'u' && c.length === 5 || c[0] === 'x' && c.length === 3) {\n    return String.fromCharCode(parseInt(c.slice(1), 16));\n  }\n\n  return ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n  const results = [];\n  const chunks = args.trim().split(/\\s*,\\s*/g);\n  let matches;\n\n  for (const chunk of chunks) {\n    if (!isNaN(chunk)) {\n      results.push(Number(chunk));\n    } else if (matches = chunk.match(STRING_REGEX)) {\n      results.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n    } else {\n      throw new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n    }\n  }\n\n  return results;\n}\n\nfunction parseStyle(style) {\n  STYLE_REGEX.lastIndex = 0;\n  const results = [];\n  let matches;\n\n  while ((matches = STYLE_REGEX.exec(style)) !== null) {\n    const name = matches[1];\n\n    if (matches[2]) {\n      const args = parseArguments(name, matches[2]);\n      results.push([name].concat(args));\n    } else {\n      results.push([name]);\n    }\n  }\n\n  return results;\n}\n\nfunction buildStyle(chalk, styles) {\n  const enabled = {};\n\n  for (const layer of styles) {\n    for (const style of layer.styles) {\n      enabled[style[0]] = layer.inverse ? null : style.slice(1);\n    }\n  }\n\n  let current = chalk;\n\n  for (const styleName of Object.keys(enabled)) {\n    if (Array.isArray(enabled[styleName])) {\n      if (!(styleName in current)) {\n        throw new Error(`Unknown Chalk style: ${styleName}`);\n      }\n\n      if (enabled[styleName].length > 0) {\n        current = current[styleName].apply(current, enabled[styleName]);\n      } else {\n        current = current[styleName];\n      }\n    }\n  }\n\n  return current;\n}\n\nmodule.exports = (chalk, tmp) => {\n  const styles = [];\n  const chunks = [];\n  let chunk = []; // eslint-disable-next-line max-params\n\n  tmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n    if (escapeChar) {\n      chunk.push(unescape(escapeChar));\n    } else if (style) {\n      const str = chunk.join('');\n      chunk = [];\n      chunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n      styles.push({\n        inverse,\n        styles: parseStyle(style)\n      });\n    } else if (close) {\n      if (styles.length === 0) {\n        throw new Error('Found extraneous } in Chalk template literal');\n      }\n\n      chunks.push(buildStyle(chalk, styles)(chunk.join('')));\n      chunk = [];\n      styles.pop();\n    } else {\n      chunk.push(chr);\n    }\n  });\n  chunks.push(chunk.join(''));\n\n  if (styles.length > 0) {\n    const errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n    throw new Error(errMsg);\n  }\n\n  return chunks.join('');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXBsYXRlcy5qcyJdLCJuYW1lcyI6WyJURU1QTEFURV9SRUdFWCIsIlNUWUxFX1JFR0VYIiwiU1RSSU5HX1JFR0VYIiwiRVNDQVBFX1JFR0VYIiwiRVNDQVBFUyIsIk1hcCIsInVuZXNjYXBlIiwiYyIsImxlbmd0aCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsInBhcnNlSW50Iiwic2xpY2UiLCJnZXQiLCJwYXJzZUFyZ3VtZW50cyIsIm5hbWUiLCJhcmdzIiwicmVzdWx0cyIsImNodW5rcyIsInRyaW0iLCJzcGxpdCIsIm1hdGNoZXMiLCJjaHVuayIsImlzTmFOIiwicHVzaCIsIk51bWJlciIsIm1hdGNoIiwicmVwbGFjZSIsIm0iLCJlc2NhcGUiLCJjaHIiLCJFcnJvciIsInBhcnNlU3R5bGUiLCJzdHlsZSIsImxhc3RJbmRleCIsImV4ZWMiLCJjb25jYXQiLCJidWlsZFN0eWxlIiwiY2hhbGsiLCJzdHlsZXMiLCJlbmFibGVkIiwibGF5ZXIiLCJpbnZlcnNlIiwiY3VycmVudCIsInN0eWxlTmFtZSIsIk9iamVjdCIsImtleXMiLCJBcnJheSIsImlzQXJyYXkiLCJhcHBseSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ0bXAiLCJlc2NhcGVDaGFyIiwiY2xvc2UiLCJzdHIiLCJqb2luIiwicG9wIiwiZXJyTXNnIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxNQUFNQSxjQUFjLEdBQUcsc0lBQXZCO0FBQ0EsTUFBTUMsV0FBVyxHQUFHLGdDQUFwQjtBQUNBLE1BQU1DLFlBQVksR0FBRyxrQ0FBckI7QUFDQSxNQUFNQyxZQUFZLEdBQUcseUNBQXJCO0FBRUEsTUFBTUMsT0FBTyxHQUFHLElBQUlDLEdBQUosQ0FBUSxDQUN2QixDQUFDLEdBQUQsRUFBTSxJQUFOLENBRHVCLEVBRXZCLENBQUMsR0FBRCxFQUFNLElBQU4sQ0FGdUIsRUFHdkIsQ0FBQyxHQUFELEVBQU0sSUFBTixDQUh1QixFQUl2QixDQUFDLEdBQUQsRUFBTSxJQUFOLENBSnVCLEVBS3ZCLENB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Tm5DLE1BQUFBLEtBQUssQ0FBQ0UsSUFBTixDQUFXTSxHQUFYO0FBQ0E7QUFDRCxHQW5CRDtBQXFCQVosRUFBQUEsTUFBTSxDQUFDTSxJQUFQLENBQVlGLEtBQUssQ0FBQ2tDLElBQU4sQ0FBVyxFQUFYLENBQVo7O0FBRUEsTUFBSWpCLE1BQU0sQ0FBQy9CLE1BQVAsR0FBZ0IsQ0FBcEIsRUFBdUI7QUFDdEIsVUFBTWtELE1BQU0sR0FBSSxxQ0FBb0NuQixNQUFNLENBQUMvQixNQUFPLG1CQUFrQitCLE1BQU0sQ0FBQy9CLE1BQVAsS0FBa0IsQ0FBbEIsR0FBc0IsRUFBdEIsR0FBMkIsR0FBSSxVQUFuSDtBQUNBLFVBQU0sSUFBSXVCLEtBQUosQ0FBVTJCLE1BQVYsQ0FBTjtBQUNBOztBQUVELFNBQU94QyxNQUFNLENBQUNzQyxJQUFQLENBQVksRUFBWixDQUFQO0FBQ0EsQ0FuQ0QiLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhbmd6aGljaHVuL0Rlc2t0b3Avc3R1ZHkvdGVzdC1jbGkvbm9kZV9tb2R1bGVzL2NoYWxrIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgVEVNUExBVEVfUkVHRVggPSAvKD86XFxcXCh1W2EtZlxcZF17NH18eFthLWZcXGRdezJ9fC4pKXwoPzpcXHsofik/KFxcdysoPzpcXChbXildKlxcKSk/KD86XFwuXFx3Kyg/OlxcKFteKV0qXFwpKT8pKikoPzpbIFxcdF18KD89XFxyP1xcbikpKXwoXFx9KXwoKD86LnxbXFxyXFxuXFxmXSkrPykvZ2k7XG5jb25zdCBTVFlMRV9SRUdFWCA9IC8oPzpefFxcLikoXFx3KykoPzpcXCgoW14pXSopXFwpKT8vZztcbmNvbnN0IFNUUklOR19SRUdFWCA9IC9eKFsnXCJdKSgoPzpcXFxcLnwoPyFcXDEpW15cXFxcXSkqKVxcMSQvO1xuY29uc3QgRVNDQVBFX1JFR0VYID0gL1xcXFwodVthLWZcXGRdezR9fHhbYS1mXFxkXXsyfXwuKXwoW15cXFxcXSkvZ2k7XG5cbmNvbnN0IEVTQ0FQRVMgPSBuZXcgTWFwKFtcblx0WyduJywgJ1xcbiddLFxuXHRbJ3InLCAnXFxyJ10sXG5cdFsndCcsICdcXHQnXSxcblx0WydiJywgJ1xcYiddLFxuXHRbJ2YnLCAnXFxmJ10sXG5cdFsndicsICdcXHYnXSxcblx0WycwJywgJ1xcMCddLFxuXHRbJ1xcXFwnLCAnXFxcXCddLFxuXHRbJ2UnLCAnXFx1MDAxQiddLFxuXHRbJ2EnLCAnXFx1MDAwNyddXG5dKTtcblxuZnVuY3Rpb24gdW5lc2NhcGUoYykge1xuXHRpZiAoKGNbMF0gPT09ICd1JyAmJiBjLmxlbmd0aCA9PT0gNSkgfHwgKGNbMF0gPT09ICd4JyAmJiBjLmxlbmd0aCA9PT0gMykpIHtcblx0XHRyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChjLnNsaWNlKDEpLCAxNikpO1xuXHR9XG5cblx0cmV0dXJuIEVTQ0FQRVMuZ2V0KGMpIHx8IGM7XG59XG5cbmZ1bmN0aW9uIHBhcnNlQXJndW1lbnRzKG5hbWUsIGFyZ3MpIHtcblx0Y29uc3QgcmVzdWx0cyA9IFtdO1xuXHRjb25zdCBjaHVua3MgPSBhcmdzLnRyaW0oKS5zcGxpdCgvXFxzKixcXHMqL2cpO1xuXHRsZXQgbWF0Y2hlcztcblxuXHRmb3IgKGNvbnN0IGNodW5rIG9mIGNodW5rcykge1xuXHRcdGlmICghaXNOYU4oY2h1bmspKSB7XG5cdFx0XHRyZXN1bHRzLnB1c2goTnVtYmVyKGNodW5rKSk7XG5cdFx0fSBlbHNlIGlmICgobWF0Y2hlcyA9IGNodW5rLm1hdGNoKFNUUklOR19SRUdFWCkpKSB7XG5cdFx0XHRyZXN1bHRzLnB1c2gobWF0Y2hlc1syXS5yZXBsYWNlKEVTQ0FQRV9SRUdFWCwgKG0sIGVzY2FwZSwgY2hyKSA9PiBlc2NhcGUgPyB1bmVzY2FwZShlc2NhcGUpIDogY2hyKSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBDaGFsayB0ZW1wbGF0ZSBzdHlsZSBhcmd1bWVudDogJHtjaHVua30gKGluIHN0eWxlICcke25hbWV9JylgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gcmVzdWx0cztcbn1cblxuZnVuY3Rpb24gcGFyc2VTdHlsZShzdHlsZSkge1xuXHRTVFlMRV9SRUdFWC5sYXN0SW5kZXggPSAwO1xuXG5cdGNvbnN0IHJlc3VsdHMgPSBbXTtcblx0bGV0IG1hdGNoZXM7XG5cblx0d2hpbGUgKChtYXRjaGVzID0gU1RZTEVfUkVHRVguZXhlYyhzdHlsZSkpICE9PSBudWxsKSB7XG5cdFx0Y29uc3QgbmFtZSA9IG1hdGNoZXNbMV07XG5cblx0XHRpZiAobWF0Y2hlc1syXSkge1xuXHRcdFx0Y29uc3QgYXJncyA9IHBhcnNlQXJndW1lbnRzKG5hbWUsIG1hdGNoZXNbMl0pO1xuXHRcdFx0cmVzdWx0cy5wdXNoKFtuYW1lXS5jb25jYXQoYXJncykpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXN1bHRzLnB1c2goW25hbWVdKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gcmVzdWx0cztcbn1cblxuZnVuY3Rpb24gYnVpbGRTdHlsZShjaGFsaywgc3R5bGVzKSB7XG5cdGNvbnN0IGVuYWJsZWQgPSB7fTtcblxuXHRmb3IgKGNvbnN0IGxheWVyIG9mIHN0eWxlcykge1xuXHRcdGZvciAoY29uc3Qgc3R5bGUgb2YgbGF5ZXIuc3R5bGVzKSB7XG5cdFx0XHRlbmFibGVkW3N0eWxlWzBdXSA9IGxheWVyLmludmVyc2UgPyBudWxsIDogc3R5bGUuc2xpY2UoMSk7XG5cdFx0fVxuXHR9XG5cblx0bGV0IGN1cnJlbnQgPSBjaGFsaztcblx0Zm9yIChjb25zdCBzdHlsZU5hbWUgb2YgT2JqZWN0LmtleXMoZW5hYmxlZCkpIHtcblx0XHRpZiAoQXJyYXkuaXNBcnJheShlbmFibGVkW3N0eWxlTmFtZV0pKSB7XG5cdFx0XHRpZiAoIShzdHlsZU5hbWUgaW4gY3VycmVudCkpIHtcblx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKGBVbmtub3duIENoYWxrIHN0eWxlOiAke3N0eWxlTmFtZX1gKTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKGVuYWJsZWRbc3R5bGVOYW1lXS5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdGN1cnJlbnQgPSBjdXJyZW50W3N0eWxlTmFtZV0uYXBwbHkoY3VycmVudCwgZW5hYmxlZFtzdHlsZU5hbWVdKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGN1cnJlbnQgPSBjdXJyZW50W3N0eWxlTmFtZV07XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGN1cnJlbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gKGNoYWxrLCB0bXApID0+IHtcblx0Y29uc3Qgc3R5bGVzID0gW107XG5cdGNvbnN0IGNodW5rcyA9IFtdO1xuXHRsZXQgY2h1bmsgPSBbXTtcblxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LXBhcmFtc1xuXHR0bXAucmVwbGFjZShURU1QTEFURV9SRUdFWCwgKG0sIGVzY2FwZUNoYXIsIGludmVyc2UsIHN0eWxlLCBjbG9zZSwgY2hyKSA9PiB7XG5cdFx0aWYgKGVzY2FwZUNoYXIpIHtcblx0XHRcdGNodW5rLnB1c2godW5lc2NhcGUoZXNjYXBlQ2hhcikpO1xuXHRcdH0gZWxzZSBpZiAoc3R5bGUpIHtcblx0XHRcdGNvbnN0IHN0ciA9IGNodW5rLmpvaW4oJycpO1xuXHRcdFx0Y2h1bmsgPSBbXTtcblx0XHRcdGNodW5rcy5wdXNoKHN0eWxlcy5sZW5ndGggPT09IDAgPyBzdHIgOiBidWlsZFN0eWxlKGNoYWxrLCBzdHlsZXMpKHN0cikpO1xuXHRcdFx0c3R5bGVzLnB1c2goe2ludmVyc2UsIHN0eWxlczogcGFyc2VTdHlsZShzdHlsZSl9KTtcblx0XHR9IGVsc2UgaWYgKGNsb3NlKSB7XG5cdFx0XHRpZiAoc3R5bGVzLmxlbmd0aCA9PT0gMCkge1xuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ0ZvdW5kIGV4dHJhbmVvdXMgfSBpbiBDaGFsayB0ZW1wbGF0ZSBsaXRlcmFsJyk7XG5cdFx0XHR9XG5cblx0XHRcdGNodW5rcy5wdXNoKGJ1aWxkU3R5bGUoY2hhbGssIHN0eWxlcykoY2h1bmsuam9pbignJykpKTtcblx0XHRcdGNodW5rID0gW107XG5cdFx0XHRzdHlsZXMucG9wKCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNodW5rLnB1c2goY2hyKTtcblx0XHR9XG5cdH0pO1xuXG5cdGNodW5rcy5wdXNoKGNodW5rLmpvaW4oJycpKTtcblxuXHRpZiAoc3R5bGVzLmxlbmd0aCA+IDApIHtcblx0XHRjb25zdCBlcnJNc2cgPSBgQ2hhbGsgdGVtcGxhdGUgbGl0ZXJhbCBpcyBtaXNzaW5nICR7c3R5bGVzLmxlbmd0aH0gY2xvc2luZyBicmFja2V0JHtzdHlsZXMubGVuZ3RoID09PSAxID8gJycgOiAncyd9IChcXGB9XFxgKWA7XG5cdFx0dGhyb3cgbmV3IEVycm9yKGVyck1zZyk7XG5cdH1cblxuXHRyZXR1cm4gY2h1bmtzLmpvaW4oJycpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "templates.js"
      ],
      "names": [
        "TEMPLATE_REGEX",
        "STYLE_REGEX",
        "STRING_REGEX",
        "ESCAPE_REGEX",
        "ESCAPES",
        "Map",
        "unescape",
        "c",
        "length",
        "String",
        "fromCharCode",
        "parseInt",
        "slice",
        "get",
        "parseArguments",
        "name",
        "args",
        "results",
        "chunks",
        "trim",
        "split",
        "matches",
        "chunk",
        "isNaN",
        "push",
        "Number",
        "match",
        "replace",
        "m",
        "escape",
        "chr",
        "Error",
        "parseStyle",
        "style",
        "lastIndex",
        "exec",
        "concat",
        "buildStyle",
        "chalk",
        "styles",
        "enabled",
        "layer",
        "inverse",
        "current",
        "styleName",
        "Object",
        "keys",
        "Array",
        "isArray",
        "apply",
        "module",
        "exports",
        "tmp",
        "escapeChar",
        "close",
        "str",
        "join",
        "pop",
        "errMsg"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/node_modules/chalk",
      "sourcesContent": [
        "'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"corejs2-entry\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"2.0.0\",\"major\":2,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"2.0.0\"},\"polyfillTargets\":{},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "corejs2-entry",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "2.0.0",
              "major": 2,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "2.0.0"
            },
            "polyfillTargets": {},
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/src/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _optimist = _interopRequireDefault(require(\"optimist\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//该插件用于获取脚本的参数\nvar argv = _optimist[\"default\"].argv;\nvar commands = argv._;\nvar command;\n\nvar clis = _fs[\"default\"].readdirSync(_path[\"default\"].resolve(__dirname, './cli/')).map(function (item) {\n  return item.replace('.js', '');\n}); //__dirname和—__filename是node环境的全局变量\n\n\nvar cmd = clis.indexOf(commands[0]) !== -1 ? commands[0] : 'help';\ncommand = require('./cli/' + cmd)[\"default\"];\nargv.cwd = process.cwd(); //process.cwd():返回当前工作目录\n\nconsole.log('cwd:', process.cwd());\ncommand(argv);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFyZ3YiLCJvcHRpbWlzdCIsImNvbW1hbmRzIiwiXyIsImNvbW1hbmQiLCJjbGlzIiwiZnMiLCJyZWFkZGlyU3luYyIsInBhdGgiLCJyZXNvbHZlIiwiX19kaXJuYW1lIiwibWFwIiwiaXRlbSIsInJlcGxhY2UiLCJjbWQiLCJpbmRleE9mIiwicmVxdWlyZSIsImN3ZCIsInByb2Nlc3MiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRmlDO0FBR2pDLElBQUlBLElBQUksR0FBR0MscUJBQVNELElBQXBCO0FBQ0EsSUFBSUUsUUFBUSxHQUFHRixJQUFJLENBQUNHLENBQXBCO0FBQ0EsSUFBSUMsT0FBSjs7QUFDQSxJQUFJQyxJQUFJLEdBQUdDLGVBQUdDLFdBQUgsQ0FBZUMsaUJBQUtDLE9BQUwsQ0FBYUMsU0FBYixFQUF3QixRQUF4QixDQUFmLEVBQWtEQyxHQUFsRCxDQUFzRCxVQUFBQyxJQUFJO0FBQUEsU0FBSUEsSUFBSSxDQUFDQyxPQUFMLENBQWEsS0FBYixFQUFvQixFQUFwQixDQUFKO0FBQUEsQ0FBMUQsQ0FBWCxDLENBQW9HOzs7QUFDcEcsSUFBSUMsR0FBRyxHQUFHVCxJQUFJLENBQUNVLE9BQUwsQ0FBYWIsUUFBUSxDQUFDLENBQUQsQ0FBckIsTUFBOEIsQ0FBQyxDQUEvQixHQUFtQ0EsUUFBUSxDQUFDLENBQUQsQ0FBM0MsR0FBaUQsTUFBM0Q7QUFDQUUsT0FBTyxHQUFHWSxPQUFPLENBQUMsV0FBV0YsR0FBWixDQUFQLFdBQVY7QUFDQWQsSUFBSSxDQUFDaUIsR0FBTCxHQUFXQyxPQUFPLENBQUNELEdBQVIsRUFBWCxDLENBQTRCOztBQUU1QkUsT0FBTyxDQUFDQyxHQUFSLENBQVksTUFBWixFQUFtQkYsT0FBTyxDQUFDRCxHQUFSLEVBQW5CO0FBQ0FiLE9BQU8sQ0FBQ0osSUFBRCxDQUFQIiwic291cmNlUm9vdCI6Ii9Vc2Vycy93YW5nemhpY2h1bi9EZXNrdG9wL3N0dWR5L3Rlc3QtY2xpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IG9wdGltaXN0IGZyb20gJ29wdGltaXN0JyAgLy/or6Xmj5Lku7bnlKjkuo7ojrflj5bohJrmnKznmoTlj4LmlbBcbmltcG9ydCBmcyBmcm9tICdmcydcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5sZXQgYXJndiA9IG9wdGltaXN0LmFyZ3ZcbmxldCBjb21tYW5kcyA9IGFyZ3YuX1xubGV0IGNvbW1hbmRcbmxldCBjbGlzID0gZnMucmVhZGRpclN5bmMocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4vY2xpLycpKS5tYXAoaXRlbSA9PiBpdGVtLnJlcGxhY2UoJy5qcycsICcnKSkgICAvL19fZGlybmFtZeWSjOKAlF9fZmlsZW5hbWXmmK9ub2Rl546v5aKD55qE5YWo5bGA5Y+Y6YePXG5sZXQgY21kID0gY2xpcy5pbmRleE9mKGNvbW1hbmRzWzBdKSAhPT0gLTEgPyBjb21tYW5kc1swXSA6ICdoZWxwJ1xuY29tbWFuZCA9IHJlcXVpcmUoJy4vY2xpLycgKyBjbWQpLmRlZmF1bHRcbmFyZ3YuY3dkID0gcHJvY2Vzcy5jd2QoKSAgICAvL3Byb2Nlc3MuY3dkKCk66L+U5Zue5b2T5YmN5bel5L2c55uu5b2VXG5cbmNvbnNvbGUubG9nKCdjd2Q6Jyxwcm9jZXNzLmN3ZCgpKVxuY29tbWFuZChhcmd2KSAgIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "argv",
        "optimist",
        "commands",
        "_",
        "command",
        "clis",
        "fs",
        "readdirSync",
        "path",
        "resolve",
        "__dirname",
        "map",
        "item",
        "replace",
        "cmd",
        "indexOf",
        "require",
        "cwd",
        "process",
        "console",
        "log"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;;;AAFiC;AAGjC,IAAIA,IAAI,GAAGC,qBAASD,IAApB;AACA,IAAIE,QAAQ,GAAGF,IAAI,CAACG,CAApB;AACA,IAAIC,OAAJ;;AACA,IAAIC,IAAI,GAAGC,eAAGC,WAAH,CAAeC,iBAAKC,OAAL,CAAaC,SAAb,EAAwB,QAAxB,CAAf,EAAkDC,GAAlD,CAAsD,UAAAC,IAAI;AAAA,SAAIA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAJ;AAAA,CAA1D,CAAX,C,CAAoG;;;AACpG,IAAIC,GAAG,GAAGT,IAAI,CAACU,OAAL,CAAab,QAAQ,CAAC,CAAD,CAArB,MAA8B,CAAC,CAA/B,GAAmCA,QAAQ,CAAC,CAAD,CAA3C,GAAiD,MAA3D;AACAE,OAAO,GAAGY,OAAO,CAAC,WAAWF,GAAZ,CAAP,WAAV;AACAd,IAAI,CAACiB,GAAL,GAAWC,OAAO,CAACD,GAAR,EAAX,C,CAA4B;;AAE5BE,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,OAAO,CAACD,GAAR,EAAnB;AACAb,OAAO,CAACJ,IAAD,CAAP",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src",
      "sourcesContent": [
        "\nimport optimist from 'optimist'  //该插件用于获取脚本的参数\nimport fs from 'fs'\nimport path from 'path'\nlet argv = optimist.argv\nlet commands = argv._\nlet command\nlet clis = fs.readdirSync(path.resolve(__dirname, './cli/')).map(item => item.replace('.js', ''))   //__dirname和—__filename是node环境的全局变量\nlet cmd = clis.indexOf(commands[0]) !== -1 ? commands[0] : 'help'\ncommand = require('./cli/' + cmd).default\nargv.cwd = process.cwd()    //process.cwd():返回当前工作目录\n\nconsole.log('cwd:',process.cwd())\ncommand(argv)  "
      ]
    },
    "sourceType": "script",
    "mtime": 1566355412018
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/src/cli\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/src/cli/help.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"corejs2-entry\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"2.0.0\",\"major\":2,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"2.0.0\"},\"polyfillTargets\":{},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/cli",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/cli/help.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "corejs2-entry",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "2.0.0",
              "major": 2,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "2.0.0"
            },
            "polyfillTargets": {},
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/src/cli/help.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/cli/help.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/cli",
        "sourceFileName": "help.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _package = _interopRequireDefault(require(\"../../package.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = function _default() {\n  console.log(_chalk[\"default\"].green(\"test-cli current version \".concat(_package[\"default\"].version)));\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHAuanMiXSwibmFtZXMiOlsiY29uc29sZSIsImxvZyIsImNoYWxrIiwiZ3JlZW4iLCJwa2ciLCJ2ZXJzaW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7ZUFDYyxvQkFBSTtBQUNkQSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsa0JBQU1DLEtBQU4sb0NBQXdDQyxvQkFBSUMsT0FBNUMsRUFBWjtBQUNILEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhbmd6aGljaHVuL0Rlc2t0b3Avc3R1ZHkvdGVzdC1jbGkvc3JjL2NsaSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAgY2hhbGsgZnJvbSAnY2hhbGsnXG5pbXBvcnQgcGtnIGZyb20gJy4uLy4uL3BhY2thZ2UuanNvbidcbmV4cG9ydCBkZWZhdWx0KCk9PntcbiAgICBjb25zb2xlLmxvZyhjaGFsay5ncmVlbihgdGVzdC1jbGkgY3VycmVudCB2ZXJzaW9uICR7cGtnLnZlcnNpb259YCkpXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "help.js"
      ],
      "names": [
        "console",
        "log",
        "chalk",
        "green",
        "pkg",
        "version"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;eACc,oBAAI;AACdA,EAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAMC,KAAN,oCAAwCC,oBAAIC,OAA5C,EAAZ;AACH,C",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/cli",
      "sourcesContent": [
        "import  chalk from 'chalk'\nimport pkg from '../../package.json'\nexport default()=>{\n    console.log(chalk.green(`test-cli current version ${pkg.version}`))\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1566281919869
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"corejs2-usage\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"2.0.0\",\"major\":2,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"2.0.0\"},\"polyfillTargets\":{},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":false}},{\"key\":\"regenerator-usage\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"2.0.0\",\"major\":2,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"2.0.0\"},\"polyfillTargets\":{},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "corejs2-usage",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "2.0.0",
              "major": 2,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "2.0.0"
            },
            "polyfillTargets": {},
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": false
          }
        },
        {
          "key": "regenerator-usage",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "2.0.0",
              "major": 2,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "2.0.0"
            },
            "polyfillTargets": {},
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/src/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nvar _optimist = _interopRequireDefault(require(\"optimist\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//该插件用于获取脚本的参数\nvar argv = _optimist[\"default\"].argv;\nvar commands = argv._;\nvar command;\n\nvar clis = _fs[\"default\"].readdirSync(_path[\"default\"].resolve(__dirname, './cli/')).map(function (item) {\n  return item.replace('.js', '');\n}); //__dirname和—__filename是node环境的全局变量\n\n\nvar cmd = clis.indexOf(commands[0]) !== -1 ? commands[0] : 'help';\ncommand = require('./cli/' + cmd)[\"default\"];\nargv.cwd = process.cwd(); //process.cwd():返回当前工作目录\n\nconsole.log('cwd:', process.cwd());\ncommand(argv);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFyZ3YiLCJvcHRpbWlzdCIsImNvbW1hbmRzIiwiXyIsImNvbW1hbmQiLCJjbGlzIiwiZnMiLCJyZWFkZGlyU3luYyIsInBhdGgiLCJyZXNvbHZlIiwiX19kaXJuYW1lIiwibWFwIiwiaXRlbSIsInJlcGxhY2UiLCJjbWQiLCJpbmRleE9mIiwicmVxdWlyZSIsImN3ZCIsInByb2Nlc3MiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBOztBQUNBOztBQUNBOzs7O0FBRmlDO0FBR2pDLElBQUlBLElBQUksR0FBR0MscUJBQVNELElBQXBCO0FBQ0EsSUFBSUUsUUFBUSxHQUFHRixJQUFJLENBQUNHLENBQXBCO0FBQ0EsSUFBSUMsT0FBSjs7QUFDQSxJQUFJQyxJQUFJLEdBQUdDLGVBQUdDLFdBQUgsQ0FBZUMsaUJBQUtDLE9BQUwsQ0FBYUMsU0FBYixFQUF3QixRQUF4QixDQUFmLEVBQWtEQyxHQUFsRCxDQUFzRCxVQUFBQyxJQUFJO0FBQUEsU0FBSUEsSUFBSSxDQUFDQyxPQUFMLENBQWEsS0FBYixFQUFvQixFQUFwQixDQUFKO0FBQUEsQ0FBMUQsQ0FBWCxDLENBQW9HOzs7QUFDcEcsSUFBSUMsR0FBRyxHQUFHVCxJQUFJLENBQUNVLE9BQUwsQ0FBYWIsUUFBUSxDQUFDLENBQUQsQ0FBckIsTUFBOEIsQ0FBQyxDQUEvQixHQUFtQ0EsUUFBUSxDQUFDLENBQUQsQ0FBM0MsR0FBaUQsTUFBM0Q7QUFDQUUsT0FBTyxHQUFHWSxPQUFPLENBQUMsV0FBV0YsR0FBWixDQUFQLFdBQVY7QUFDQWQsSUFBSSxDQUFDaUIsR0FBTCxHQUFXQyxPQUFPLENBQUNELEdBQVIsRUFBWCxDLENBQTRCOztBQUU1QkUsT0FBTyxDQUFDQyxHQUFSLENBQVksTUFBWixFQUFtQkYsT0FBTyxDQUFDRCxHQUFSLEVBQW5CO0FBQ0FiLE9BQU8sQ0FBQ0osSUFBRCxDQUFQIiwic291cmNlUm9vdCI6Ii9Vc2Vycy93YW5nemhpY2h1bi9EZXNrdG9wL3N0dWR5L3Rlc3QtY2xpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IG9wdGltaXN0IGZyb20gJ29wdGltaXN0JyAgLy/or6Xmj5Lku7bnlKjkuo7ojrflj5bohJrmnKznmoTlj4LmlbBcbmltcG9ydCBmcyBmcm9tICdmcydcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5sZXQgYXJndiA9IG9wdGltaXN0LmFyZ3ZcbmxldCBjb21tYW5kcyA9IGFyZ3YuX1xubGV0IGNvbW1hbmRcbmxldCBjbGlzID0gZnMucmVhZGRpclN5bmMocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4vY2xpLycpKS5tYXAoaXRlbSA9PiBpdGVtLnJlcGxhY2UoJy5qcycsICcnKSkgICAvL19fZGlybmFtZeWSjOKAlF9fZmlsZW5hbWXmmK9ub2Rl546v5aKD55qE5YWo5bGA5Y+Y6YePXG5sZXQgY21kID0gY2xpcy5pbmRleE9mKGNvbW1hbmRzWzBdKSAhPT0gLTEgPyBjb21tYW5kc1swXSA6ICdoZWxwJ1xuY29tbWFuZCA9IHJlcXVpcmUoJy4vY2xpLycgKyBjbWQpLmRlZmF1bHRcbmFyZ3YuY3dkID0gcHJvY2Vzcy5jd2QoKSAgICAvL3Byb2Nlc3MuY3dkKCk66L+U5Zue5b2T5YmN5bel5L2c55uu5b2VXG5cbmNvbnNvbGUubG9nKCdjd2Q6Jyxwcm9jZXNzLmN3ZCgpKVxuY29tbWFuZChhcmd2KSAgIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "argv",
        "optimist",
        "commands",
        "_",
        "command",
        "clis",
        "fs",
        "readdirSync",
        "path",
        "resolve",
        "__dirname",
        "map",
        "item",
        "replace",
        "cmd",
        "indexOf",
        "require",
        "cwd",
        "process",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;;AACA;;AACA;;AACA;;;;AAFiC;AAGjC,IAAIA,IAAI,GAAGC,qBAASD,IAApB;AACA,IAAIE,QAAQ,GAAGF,IAAI,CAACG,CAApB;AACA,IAAIC,OAAJ;;AACA,IAAIC,IAAI,GAAGC,eAAGC,WAAH,CAAeC,iBAAKC,OAAL,CAAaC,SAAb,EAAwB,QAAxB,CAAf,EAAkDC,GAAlD,CAAsD,UAAAC,IAAI;AAAA,SAAIA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAJ;AAAA,CAA1D,CAAX,C,CAAoG;;;AACpG,IAAIC,GAAG,GAAGT,IAAI,CAACU,OAAL,CAAab,QAAQ,CAAC,CAAD,CAArB,MAA8B,CAAC,CAA/B,GAAmCA,QAAQ,CAAC,CAAD,CAA3C,GAAiD,MAA3D;AACAE,OAAO,GAAGY,OAAO,CAAC,WAAWF,GAAZ,CAAP,WAAV;AACAd,IAAI,CAACiB,GAAL,GAAWC,OAAO,CAACD,GAAR,EAAX,C,CAA4B;;AAE5BE,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,OAAO,CAACD,GAAR,EAAnB;AACAb,OAAO,CAACJ,IAAD,CAAP",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src",
      "sourcesContent": [
        "\nimport optimist from 'optimist'  //该插件用于获取脚本的参数\nimport fs from 'fs'\nimport path from 'path'\nlet argv = optimist.argv\nlet commands = argv._\nlet command\nlet clis = fs.readdirSync(path.resolve(__dirname, './cli/')).map(item => item.replace('.js', ''))   //__dirname和—__filename是node环境的全局变量\nlet cmd = clis.indexOf(commands[0]) !== -1 ? commands[0] : 'help'\ncommand = require('./cli/' + cmd).default\nargv.cwd = process.cwd()    //process.cwd():返回当前工作目录\n\nconsole.log('cwd:',process.cwd())\ncommand(argv)  "
      ]
    },
    "sourceType": "script",
    "mtime": 1566355412018
  },
  "{\"sourceRoot\":\"/Users/wangzhichun/Desktop/study/test-cli/src/cli\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"filename\":\"/Users/wangzhichun/Desktop/study/test-cli/src/cli/help.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangzhichun/Desktop/study/test-cli\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"corejs2-usage\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"2.0.0\",\"major\":2,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"2.0.0\"},\"polyfillTargets\":{},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":false}},{\"key\":\"regenerator-usage\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"2.0.0\",\"major\":2,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"2.0.0\"},\"polyfillTargets\":{},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/cli",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangzhichun/Desktop/study/test-cli",
      "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/cli/help.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wangzhichun/Desktop/study/test-cli",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "corejs2-usage",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "2.0.0",
              "major": 2,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "2.0.0"
            },
            "polyfillTargets": {},
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": false
          }
        },
        {
          "key": "regenerator-usage",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "2.0.0",
              "major": 2,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "2.0.0"
            },
            "polyfillTargets": {},
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangzhichun/Desktop/study/test-cli/src/cli/help.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangzhichun/Desktop/study/test-cli/src/cli/help.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/cli",
        "sourceFileName": "help.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _package = _interopRequireDefault(require(\"../../package.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = function _default() {\n  console.log(_chalk[\"default\"].green(\"test-cli current version \".concat(_package[\"default\"].version)));\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHAuanMiXSwibmFtZXMiOlsiY29uc29sZSIsImxvZyIsImNoYWxrIiwiZ3JlZW4iLCJwa2ciLCJ2ZXJzaW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7OztlQUNjLG9CQUFJO0FBQ2RBLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxrQkFBTUMsS0FBTixvQ0FBd0NDLG9CQUFJQyxPQUE1QyxFQUFaO0FBQ0gsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvd2FuZ3poaWNodW4vRGVza3RvcC9zdHVkeS90ZXN0LWNsaS9zcmMvY2xpIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICBjaGFsayBmcm9tICdjaGFsaydcbmltcG9ydCBwa2cgZnJvbSAnLi4vLi4vcGFja2FnZS5qc29uJ1xuZXhwb3J0IGRlZmF1bHQoKT0+e1xuICAgIGNvbnNvbGUubG9nKGNoYWxrLmdyZWVuKGB0ZXN0LWNsaSBjdXJyZW50IHZlcnNpb24gJHtwa2cudmVyc2lvbn1gKSlcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "help.js"
      ],
      "names": [
        "console",
        "log",
        "chalk",
        "green",
        "pkg",
        "version"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;eACc,oBAAI;AACdA,EAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAMC,KAAN,oCAAwCC,oBAAIC,OAA5C,EAAZ;AACH,C",
      "sourceRoot": "/Users/wangzhichun/Desktop/study/test-cli/src/cli",
      "sourcesContent": [
        "import  chalk from 'chalk'\nimport pkg from '../../package.json'\nexport default()=>{\n    console.log(chalk.green(`test-cli current version ${pkg.version}`))\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1566281919869
  }
}